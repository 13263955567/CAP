{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CAP \u00b6 CAP is a library based on .Net standard, which is a solution to deal with distributed transactions, also has the function of EventBus, it is lightweight, easy to use, and efficiently. Introduction \u00b6 In the process of building an SOA or MicroService system, we usually need to use the event to integrate each services. In the process, the simple use of message queue does not guarantee the reliability. CAP is adopted the local message table program integrated with the current database to solve the exception may occur in the process of the distributed system calling each other. It can ensure that the event messages are not lost in any case. You can also use the CAP as an EventBus. The CAP provides a simpler way to implement event publishing and subscriptions. You do not need to inherit or implement any interface during the process of subscription and sending. CAP implements the Outbox Pattern described in the eShop ebook Atomicity when publishing events to the event bus with a worker microservice For detailed instructions see the getting started guide . Contributing \u00b6 One of the easiest ways to contribute is to participate in discussions and discuss issues. You can also contribute by submitting pull requests with code changes. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues License \u00b6 CAP is licensed under the MIT license .","title":"Home"},{"location":"#cap","text":"CAP is a library based on .Net standard, which is a solution to deal with distributed transactions, also has the function of EventBus, it is lightweight, easy to use, and efficiently.","title":"CAP"},{"location":"#introduction","text":"In the process of building an SOA or MicroService system, we usually need to use the event to integrate each services. In the process, the simple use of message queue does not guarantee the reliability. CAP is adopted the local message table program integrated with the current database to solve the exception may occur in the process of the distributed system calling each other. It can ensure that the event messages are not lost in any case. You can also use the CAP as an EventBus. The CAP provides a simpler way to implement event publishing and subscriptions. You do not need to inherit or implement any interface during the process of subscription and sending. CAP implements the Outbox Pattern described in the eShop ebook Atomicity when publishing events to the event bus with a worker microservice For detailed instructions see the getting started guide .","title":"Introduction"},{"location":"#contributing","text":"One of the easiest ways to contribute is to participate in discussions and discuss issues. You can also contribute by submitting pull requests with code changes. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues","title":"Contributing"},{"location":"#license","text":"CAP is licensed under the MIT license .","title":"License"},{"location":"about/contact-us/","text":"Contact Us \u00b6 Authors \u00b6 Author: @yang-xiaodong Email: yangxiaodong1214@126.com Blogs: https://savorboard.cnblogs.com NCC Organization \u00b6 Email: dotnetcn@outlook.com Twitter: https://twitter.com/ncc_community Weibo: https://weibo.com/dotnetcore","title":"Contact Us"},{"location":"about/contact-us/#contact-us","text":"","title":"Contact Us"},{"location":"about/contact-us/#authors","text":"Author: @yang-xiaodong Email: yangxiaodong1214@126.com Blogs: https://savorboard.cnblogs.com","title":"Authors"},{"location":"about/contact-us/#ncc-organization","text":"Email: dotnetcn@outlook.com Twitter: https://twitter.com/ncc_community Weibo: https://weibo.com/dotnetcore","title":"NCC Organization"},{"location":"about/contributing/","text":"Contributing \u00b6 Pull requests, issues and commentary welcome! No special process just create a request and get in touch either via gitter or create an issue.","title":"Contributing"},{"location":"about/contributing/#contributing","text":"Pull requests, issues and commentary welcome! No special process just create a request and get in touch either via gitter or create an issue.","title":"Contributing"},{"location":"about/license/","text":"License \u00b6 MIT License Copyright \u00a9 2016 - 2019 Saborboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#license","text":"MIT License Copyright \u00a9 2016 - 2019 Saborboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/release-notes/","text":"Release Notes \u00b6 Version 2.5.0 (2019-03-30) \u00b6 Features: Support Azure Service Bus. ( #307 ) Support In-Memory Storage. ( #296 ) Upgrade Dapper to version 1.60.1 Support read environment variables CAP_WORKERID and CAP_DATACENTERID as the snowflake algorithm workerid and datacenterid. Bug Fixed: Modify MySQL cap table encoding to utf8mb4. ( #305 ) Move CapSubscribeAttribute class to DotNetCore.CAP project. Fixed multiple instance snowflake algorithm generating primary key conflicts. ( #294 ) Version 2.4.2 (2019-01-08) \u00b6 Features: Startup the CAP with the .NET Core 2.1 BackgroundService. ( #265 ) Improved message delivery performance. #261 Bug Fixed: Fixed PostgreSql version isolation feature bug. ( #256 ) Fixed SQL Server sql bug for dashboard search. ( #266 ) Version 2.4.1 (2018-12-19) \u00b6 Bug Fixed: Fixed MongoDB version isolation feature bug. ( #253 ) Version 2.4.0 (2018-12-08) \u00b6 Features: Supported version options. ( #220 ) Upgrade nuget package to .net core 2.2. Breaking Changes: In order to support the \"version isolation\" feature, we introduced a new version field in version 2.4.0 to isolate different versions of the message, so this requires some adjustments to the database table structure. You can use the following SQL to add a version field to your database CAP related table. MySQL ALTER TABLE ` cap . published ` ADD Version VARCHAR ( 20 ) NULL ; ALTER TABLE ` cap . received ` ADD Version VARCHAR ( 20 ) NULL ; SQL Server ALTER TABLE Cap .[ Published ] ADD Version VARCHAR ( 20 ) NULL ; ALTER TABLE Cap .[ Received ] ADD Version VARCHAR ( 20 ) NULL ; PostgreSQL ALTER TABLE cap . published ADD \"Version\" VARCHAR ( 20 ) NULL ; ALTER TABLE cap . received ADD \"Version\" VARCHAR ( 20 ) NULL ; MongoDb db.CapPublishedMessage.update({},{\"$set\" : {\"Version\" : \"1\"}}); db.CapReceivedMessage.update({},{\"$set\" : {\"Version\" : \"1\"}}); Bug Fixed: Fixed different groups of the same topic name in one instance will cause routing bug. ( #235 ) Fixed message presistence bug. ( #240 ) Fixed RabbitMQ topic name contains numbers will cause exception bug. ( #181 ) Version 2.3.1 (2018-10-29) \u00b6 Features: Add Source Link Support Upgrade dependent NuGet packages. Bug Fixed: Fixed dashboard messages requeue error. ( #205 ) Adjustment snowflake workerId to random id. Fixed flush unclaer data bug. Version 2.3.0 (2018-08-30) \u00b6 In this version, we made some breaking changes for the publisher API, you can see this blog to understand the story behind. If you have any migration question, please comment in issue ( #190 ). Breaking Changes: Removed app.UseCap() from Startup.cs Message table primary key data type has been modified to Bigint and non auto-Increment. ( #180 ) New publisher Api. ( #188 ) Features: MongoDb supported. ( #143 ) Automatic commit transaction. ( #191 ) Bug Fixed: Fix message still sent if transaction faild bug. ( #118 ) Multiple events in one transaction. ( #171 ) Version 2.2.5 (2018-07-19) \u00b6 Features: - Performance improvement Bug Fixed: Fixed message enqueue exception. Fixed Retry processor bugs. Fixed Kafka producer exception log without logging when publish message. Fixed Incorrect local IP address judgment of IPv6. ( #140 ) Fixed DateTime localization format conversion error to sql. ( #139 ) Fixed dashboard message page re-requeue and re-executed operate bug. ( #158 ) Fixed SendAsync or ExecuteAsync recursion retries bug. ( #160 ) Fixed configuration options of FailedThresholdCallback could not be invoke when the value less then three. ( #161 ) Version 2.2.4 (2018-06-05) \u00b6 Because version 2.2.3 was not released to nuget, so released 2.2.4. Version 2.2.3 (2018-06-05) \u00b6 Features: Improved log output. Upgrade nuget packages. Support pattern matching for consumer. ( #132 ) Bug Fixed: Fixed exception thrown when terminate the program with Ctrl+C. ( #130 ) Version 2.2.2 (2018-04-28) \u00b6 Features: Improved log output. #114 Add default timeout configuration for kafka client. Rename configuration options FailedCallback to FailedThresholdCallback. Bug Fixed: Fixed message enqueue exception. Fixed retry processor bugs. Fixed kafka producer exception log without logging when publish message. Version 2.2.1 (2018-04-18) \u00b6 Bug Fixed: Fixed message enqueue bug in v2.2 Version 2.2.0 (2018-04-17) \u00b6 Features: Remove database queue mode. ( #102 ) Support for Diagnostics. ( #112 ) Upgrade dependent nuget packages. Bug Fixed: Fixed bug of the FailedRetryCount does not increase when raised SubscribeNotFoundException. ( #90 ) Version 2.1.4 (2018-03-16) \u00b6 Features: Remove TableNamePrefix option from MySqlOptions to EFOptions. Upgrade nuget package Bug Fixed: Fixed the connection bug of getting message from table. ( #83 ) Fixed entityframework rename table name prefix bug. ( #84 ) Fixed sql server scripts bug of create table scheme. ( #85 ) Fixed thread safety issue about KafkaOptions.( #89 ) Version 2.1.3 (2018-01-24) \u00b6 Features: Upgrade dependent nuget packages version. NuGet package include xml doc now. NuGet now contains the CAP symbol files. Bug Fixed: Fixed thread conflict issue when sending messages with PublishAsync. ( #80 ) Fixed kafka received message sava failed may caused the mssage loss bug. ( #78 ) Fixed dashboard js syntax issue. ( #77 ) Version 2.1.2 (2017-12-18) \u00b6 Bug Fixed: Fixed and improve the performance of mysql processing messages. ( #68 ) ( #36 ) Fixed dashboard manually trigger reconsumption bug. ( #67 ) Fixed mysql 5.5 table initialization bug. ( #65 ) Fixed mysql message queue executor bug. ( #66 ) Version 2.1.1 (2017-11-28) \u00b6 Bug Fixed: Fixed 'dotnet.exe' process incomplete quit when shutdown application (Ctrl+C). ( #64 ) Fixed failure to issue as expected of RabbitMQ SubscriberNotFoundException. ( #63 ) Fixed Sent async message in the loop causes an exception. ( #62 ) Version 2.1.0 (2017-11-17) \u00b6 Features: Interface display optimization of dashboard. Adds a more friendly display when looks at the message content. Now you can see the exception infomation in the message conent filed when message send or executed failed. Optimize LAN to see Dashboard without authentication. Add IContentSerializer interface, you can customize the serialized message content. Add IMessagePacker interface, you can customize wapper of the message. Upgrade the dependent package. Bug Fixed: Fixed dashboard query bugs. Fixed dashboard multilanguage display bugs. Fixed RabbitMQ connection pool bug. Fixed dashboard display bugs on mobile. Version 2.0.2 (2017-09-29) \u00b6 Bug Fixed: Fixed asp.net core 2.0 startup error of MySql and PostgreSql. ( #44 Version 2.0.1 (2017-09-16) \u00b6 Bug Fixed: DbContext services bug. ( #44 ) Dependency injection bug. ( #45 ) Version 2.0.0 (2017-09-01) \u00b6 Features: Supported .net standard 2.0. Supported PostgreSQL 9.5+. Supported asynchronous function subscriptions. ICapPublisher api supported callback subsrciber. Bug Fixed: Fixed multiple subscriber subscribe bug. ( #38 ) Fixed model binde bug. ( #17 ) ( #18 ) Fixed database connection disposed bug. ( #25 ) Fixed consumer method injection context bug. ( #34 ) Version 1.1.0 (2017-08-04) \u00b6 Features: Support MySQL database persistent message. Add message failed call-back in CapOptions. Remove publish messages API of string name at ICapPublisher . Bug Fixed: Fixed can not send message for string type. ( #17 ) Fixed model bind for type like datetime guid always failed. ( #18 ) Version 1.0.1 (2017-07-25) \u00b6 Features: ICapPublisher interface added synchronous publish API. Add infinity retry failed processor. Version 1.0.0 (2017-07-19) \u00b6 Project published","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#version-250-2019-03-30","text":"Features: Support Azure Service Bus. ( #307 ) Support In-Memory Storage. ( #296 ) Upgrade Dapper to version 1.60.1 Support read environment variables CAP_WORKERID and CAP_DATACENTERID as the snowflake algorithm workerid and datacenterid. Bug Fixed: Modify MySQL cap table encoding to utf8mb4. ( #305 ) Move CapSubscribeAttribute class to DotNetCore.CAP project. Fixed multiple instance snowflake algorithm generating primary key conflicts. ( #294 )","title":"Version 2.5.0 (2019-03-30)"},{"location":"about/release-notes/#version-242-2019-01-08","text":"Features: Startup the CAP with the .NET Core 2.1 BackgroundService. ( #265 ) Improved message delivery performance. #261 Bug Fixed: Fixed PostgreSql version isolation feature bug. ( #256 ) Fixed SQL Server sql bug for dashboard search. ( #266 )","title":"Version 2.4.2 (2019-01-08)"},{"location":"about/release-notes/#version-241-2018-12-19","text":"Bug Fixed: Fixed MongoDB version isolation feature bug. ( #253 )","title":"Version 2.4.1 (2018-12-19)"},{"location":"about/release-notes/#version-240-2018-12-08","text":"Features: Supported version options. ( #220 ) Upgrade nuget package to .net core 2.2. Breaking Changes: In order to support the \"version isolation\" feature, we introduced a new version field in version 2.4.0 to isolate different versions of the message, so this requires some adjustments to the database table structure. You can use the following SQL to add a version field to your database CAP related table. MySQL ALTER TABLE ` cap . published ` ADD Version VARCHAR ( 20 ) NULL ; ALTER TABLE ` cap . received ` ADD Version VARCHAR ( 20 ) NULL ; SQL Server ALTER TABLE Cap .[ Published ] ADD Version VARCHAR ( 20 ) NULL ; ALTER TABLE Cap .[ Received ] ADD Version VARCHAR ( 20 ) NULL ; PostgreSQL ALTER TABLE cap . published ADD \"Version\" VARCHAR ( 20 ) NULL ; ALTER TABLE cap . received ADD \"Version\" VARCHAR ( 20 ) NULL ; MongoDb db.CapPublishedMessage.update({},{\"$set\" : {\"Version\" : \"1\"}}); db.CapReceivedMessage.update({},{\"$set\" : {\"Version\" : \"1\"}}); Bug Fixed: Fixed different groups of the same topic name in one instance will cause routing bug. ( #235 ) Fixed message presistence bug. ( #240 ) Fixed RabbitMQ topic name contains numbers will cause exception bug. ( #181 )","title":"Version 2.4.0 (2018-12-08)"},{"location":"about/release-notes/#version-231-2018-10-29","text":"Features: Add Source Link Support Upgrade dependent NuGet packages. Bug Fixed: Fixed dashboard messages requeue error. ( #205 ) Adjustment snowflake workerId to random id. Fixed flush unclaer data bug.","title":"Version 2.3.1 (2018-10-29)"},{"location":"about/release-notes/#version-230-2018-08-30","text":"In this version, we made some breaking changes for the publisher API, you can see this blog to understand the story behind. If you have any migration question, please comment in issue ( #190 ). Breaking Changes: Removed app.UseCap() from Startup.cs Message table primary key data type has been modified to Bigint and non auto-Increment. ( #180 ) New publisher Api. ( #188 ) Features: MongoDb supported. ( #143 ) Automatic commit transaction. ( #191 ) Bug Fixed: Fix message still sent if transaction faild bug. ( #118 ) Multiple events in one transaction. ( #171 )","title":"Version 2.3.0 (2018-08-30)"},{"location":"about/release-notes/#version-225-2018-07-19","text":"Features: - Performance improvement Bug Fixed: Fixed message enqueue exception. Fixed Retry processor bugs. Fixed Kafka producer exception log without logging when publish message. Fixed Incorrect local IP address judgment of IPv6. ( #140 ) Fixed DateTime localization format conversion error to sql. ( #139 ) Fixed dashboard message page re-requeue and re-executed operate bug. ( #158 ) Fixed SendAsync or ExecuteAsync recursion retries bug. ( #160 ) Fixed configuration options of FailedThresholdCallback could not be invoke when the value less then three. ( #161 )","title":"Version 2.2.5 (2018-07-19)"},{"location":"about/release-notes/#version-224-2018-06-05","text":"Because version 2.2.3 was not released to nuget, so released 2.2.4.","title":"Version 2.2.4 (2018-06-05)"},{"location":"about/release-notes/#version-223-2018-06-05","text":"Features: Improved log output. Upgrade nuget packages. Support pattern matching for consumer. ( #132 ) Bug Fixed: Fixed exception thrown when terminate the program with Ctrl+C. ( #130 )","title":"Version 2.2.3 (2018-06-05)"},{"location":"about/release-notes/#version-222-2018-04-28","text":"Features: Improved log output. #114 Add default timeout configuration for kafka client. Rename configuration options FailedCallback to FailedThresholdCallback. Bug Fixed: Fixed message enqueue exception. Fixed retry processor bugs. Fixed kafka producer exception log without logging when publish message.","title":"Version 2.2.2 (2018-04-28)"},{"location":"about/release-notes/#version-221-2018-04-18","text":"Bug Fixed: Fixed message enqueue bug in v2.2","title":"Version 2.2.1 (2018-04-18)"},{"location":"about/release-notes/#version-220-2018-04-17","text":"Features: Remove database queue mode. ( #102 ) Support for Diagnostics. ( #112 ) Upgrade dependent nuget packages. Bug Fixed: Fixed bug of the FailedRetryCount does not increase when raised SubscribeNotFoundException. ( #90 )","title":"Version 2.2.0 (2018-04-17)"},{"location":"about/release-notes/#version-214-2018-03-16","text":"Features: Remove TableNamePrefix option from MySqlOptions to EFOptions. Upgrade nuget package Bug Fixed: Fixed the connection bug of getting message from table. ( #83 ) Fixed entityframework rename table name prefix bug. ( #84 ) Fixed sql server scripts bug of create table scheme. ( #85 ) Fixed thread safety issue about KafkaOptions.( #89 )","title":"Version 2.1.4 (2018-03-16)"},{"location":"about/release-notes/#version-213-2018-01-24","text":"Features: Upgrade dependent nuget packages version. NuGet package include xml doc now. NuGet now contains the CAP symbol files. Bug Fixed: Fixed thread conflict issue when sending messages with PublishAsync. ( #80 ) Fixed kafka received message sava failed may caused the mssage loss bug. ( #78 ) Fixed dashboard js syntax issue. ( #77 )","title":"Version 2.1.3 (2018-01-24)"},{"location":"about/release-notes/#version-212-2017-12-18","text":"Bug Fixed: Fixed and improve the performance of mysql processing messages. ( #68 ) ( #36 ) Fixed dashboard manually trigger reconsumption bug. ( #67 ) Fixed mysql 5.5 table initialization bug. ( #65 ) Fixed mysql message queue executor bug. ( #66 )","title":"Version 2.1.2 (2017-12-18)"},{"location":"about/release-notes/#version-211-2017-11-28","text":"Bug Fixed: Fixed 'dotnet.exe' process incomplete quit when shutdown application (Ctrl+C). ( #64 ) Fixed failure to issue as expected of RabbitMQ SubscriberNotFoundException. ( #63 ) Fixed Sent async message in the loop causes an exception. ( #62 )","title":"Version 2.1.1 (2017-11-28)"},{"location":"about/release-notes/#version-210-2017-11-17","text":"Features: Interface display optimization of dashboard. Adds a more friendly display when looks at the message content. Now you can see the exception infomation in the message conent filed when message send or executed failed. Optimize LAN to see Dashboard without authentication. Add IContentSerializer interface, you can customize the serialized message content. Add IMessagePacker interface, you can customize wapper of the message. Upgrade the dependent package. Bug Fixed: Fixed dashboard query bugs. Fixed dashboard multilanguage display bugs. Fixed RabbitMQ connection pool bug. Fixed dashboard display bugs on mobile.","title":"Version 2.1.0 (2017-11-17)"},{"location":"about/release-notes/#version-202-2017-09-29","text":"Bug Fixed: Fixed asp.net core 2.0 startup error of MySql and PostgreSql. ( #44","title":"Version 2.0.2 (2017-09-29)"},{"location":"about/release-notes/#version-201-2017-09-16","text":"Bug Fixed: DbContext services bug. ( #44 ) Dependency injection bug. ( #45 )","title":"Version 2.0.1 (2017-09-16)"},{"location":"about/release-notes/#version-200-2017-09-01","text":"Features: Supported .net standard 2.0. Supported PostgreSQL 9.5+. Supported asynchronous function subscriptions. ICapPublisher api supported callback subsrciber. Bug Fixed: Fixed multiple subscriber subscribe bug. ( #38 ) Fixed model binde bug. ( #17 ) ( #18 ) Fixed database connection disposed bug. ( #25 ) Fixed consumer method injection context bug. ( #34 )","title":"Version 2.0.0 (2017-09-01)"},{"location":"about/release-notes/#version-110-2017-08-04","text":"Features: Support MySQL database persistent message. Add message failed call-back in CapOptions. Remove publish messages API of string name at ICapPublisher . Bug Fixed: Fixed can not send message for string type. ( #17 ) Fixed model bind for type like datetime guid always failed. ( #18 )","title":"Version 1.1.0 (2017-08-04)"},{"location":"about/release-notes/#version-101-2017-07-25","text":"Features: ICapPublisher interface added synchronous publish API. Add infinity retry failed processor.","title":"Version 1.0.1 (2017-07-25)"},{"location":"about/release-notes/#version-100-2017-07-19","text":"Project published","title":"Version 1.0.0 (2017-07-19)"},{"location":"user-guide/en/cap/configuration/","text":"\u914d\u7f6e \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u5728\u5411IoC\u5bb9\u5668\u4e2d\u6ce8\u518cCAP\u670d\u52a1\u7684\u65f6\u5019\u6307\u5b9a\u914d\u7f6e\u3002 services . AddCap ( config => { // config.XXX }); \u5176\u4e2d services \u4ee3\u8868\u7684\u662f IServiceCollection \u63a5\u53e3\u5bf9\u8c61\uff0c\u5b83\u4f4d\u4e8e Microsoft.Extensions.DependencyInjection \u4e0b\u9762\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u5fae\u8f6f\u7684IoC\u5bb9\u5668\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u67e5\u770b ASP.NET Core \u8fd9\u91cc\u7684\u6587\u6863 \u6765\u4e86\u89e3\u5982\u4f55\u66ff\u6362\u9ed8\u8ba4\u7684\u5bb9\u5668\u5b9e\u73b0\u3002 \u4ec0\u4e48\u662f\u6700\u4f4e\u914d\u7f6e\uff1f \u00b6 \u6700\u7b80\u5355\u7684\u56de\u7b54\u5c31\u662f\uff0c\u81f3\u5c11\u4f60\u8981\u914d\u7f6e\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u548c\u4e00\u4e2a\u4e8b\u4ef6\u5b58\u50a8\uff0c\u5982\u679c\u4f60\u60f3\u5feb\u901f\u5f00\u59cb\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\uff1a services . AddCap ( config => { config . UseInMemoryQueue (); config . UseInmemoryStorage (); }); \u6709\u5173\u5177\u4f53\u7684\u6d88\u606f\u961f\u5217\u7684\u914d\u7f6e\u548c\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u548c Persistent \u7ae0\u8282\u4e2d\u5177\u4f53\u7ec4\u4ef6\u63d0\u4f9b\u7684\u914d\u7f6e\u9879\u3002 CAP \u4e2d\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e \u00b6 \u5728 AddCap \u4e2d CapOptions \u5bf9\u8c61\u662f\u7528\u6765\u5b58\u50a8\u914d\u7f6e\u76f8\u5173\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u5177\u6709\u4e00\u4e9b\u9ed8\u8ba4\u503c\uff0c\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u3002 DefaultGroup \u00b6 \u9ed8\u8ba4\u503c\uff1acap.queue.{\u7a0b\u5e8f\u96c6\u540d\u79f0} \u9ed8\u8ba4\u7684\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u5b57\uff0c\u5728\u4e0d\u540c\u7684 Transports \u4e2d\u5bf9\u5e94\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u6b64\u503c\u6765\u81ea\u5b9a\u4e49\u4e0d\u540c Transports \u4e2d\u7684\u540d\u5b57\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u770b\u3002 \u5728 RabbitMQ \u4e2d\u6620\u5c04\u5230 Queue Names \u3002 \u5728 Apache Kafka \u4e2d\u6620\u5c04\u5230 Topic Name\u3002 \u5728 Azure Service Bus \u4e2d\u6620\u5c04\u5230 Subscription Name\u3002 Version \u00b6 \u9ed8\u8ba4\u503c\uff1av1 \u8fd9\u662f\u5728CAP v2.4 \u7248\u672c\u4e2d\u5f15\u5165\u7684\u65b0\u914d\u7f6e\u9879\uff0c\u7528\u4e8e\u7ed9\u6d88\u606f\u6307\u5b9a\u7248\u672c\u6765\u9694\u79bb\u4e0d\u540c\u7248\u672c\u670d\u52a1\u7684\u6d88\u606f\uff0c\u5e38\u7528\u4e8eA/B\u6d4b\u8bd5\u6216\u8005\u591a\u670d\u52a1\u7248\u672c\u7684\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u5176\u5e94\u7528\u573a\u666f\uff1a \u4e1a\u52a1\u5feb\u901f\u8fed\u4ee3\uff0c\u9700\u8981\u5411\u524d\u517c\u5bb9 \u7531\u4e8e\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\uff0c\u5728\u5404\u4e2a\u670d\u52a1\u96c6\u6210\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4e3a\u4e86\u9002\u5e94\u65b0\u5f15\u5165\u7684\u9700\u6c42\uff0c\u4f1a\u6dfb\u52a0\u6216\u8005\u4fee\u6539\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u4f60\u662f\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8fd9\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e86\u5e76\u4e14\u6b63\u5728\u670d\u52a1\u5ba2\u6237\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u529f\u80fd\u5728\u4e0a\u7ebf\u7684\u65f6\u5019\u548c\u65e7\u7684\u6570\u636e\u7ed3\u6784\u53d1\u751f\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6539\u53d8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u80fd\u628a\u6d88\u606f\u961f\u5217\u548c\u6301\u4e45\u5316\u7684\u6d88\u606f\u5168\u90e8\u6e05\u7a7a\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u663e\u7136\u662f\u81f4\u547d\u7684\u3002 \u591a\u4e2a\u7248\u672c\u7684\u670d\u52a1\u7aef \u6709\u4e9b\u65f6\u5019\uff0cApp\u7684\u670d\u52a1\u7aef\u9700\u8981\u63d0\u4f9b\u591a\u5957\u63a5\u53e3\uff0c\u6765\u652f\u6301\u4e0d\u540c\u7248\u672c\u7684App\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7248\u672c\u7684App\u76f8\u540c\u7684\u63a5\u53e3\u548c\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u670d\u52a1\u7aef\u63d0\u4f9b\u4e0d\u7528\u7684\u8def\u7531\u5730\u5740\u6765\u9002\u914d\u4e0d\u540c\u7248\u672c\u7684App\u8c03\u7528\u3002 \u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6301\u4e45\u5316\u8868/\u96c6\u5408 \u5e0c\u671b\u591a\u4e2a\u4e0d\u540c\u5b9e\u4f8b\u7684\u7a0b\u5e8f\u53ef\u4ee5\u516c\u7528\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u5728 2.4 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u8868\u540d\u6765\u9694\u79bb\u4e0d\u540c\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u8868\uff0c\u5373\u5728CAP\u914d\u7f6e\u7684\u65f6\u5019\u901a\u8fc7\u914d\u7f6e\u4e0d\u540c\u7684\u8868\u540d\u524d\u7f00\u6765\u5b9e\u73b0\u3002 \u67e5\u770b\u535a\u5ba2\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Version \u7684\u4fe1\u606f\uff1a https://www.cnblogs.com/savorboard/p/cap-2-4.html FailedRetryInterval \u00b6 \u9ed8\u8ba4\u503c\uff1a60 \u79d2 \u5728\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u5728\u6d88\u606f\u6d88\u8d39\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6d88\u8d39\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u6d88\u8d39\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u91cd\u8bd5 & \u95f4\u9694 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91cd\u8bd5\u5c06\u5728\u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u5931\u8d25\u7684 4\u5206\u949f\u540e \u5f00\u59cb\uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u8bbe\u7f6e\u6d88\u606f\u72b6\u6001\u5ef6\u8fdf\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u3002 \u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u7684\u8fc7\u7a0b\u4e2d\u5931\u8d25\u4f1a\u7acb\u5373\u91cd\u8bd5 3 \u6b21\uff0c\u5728 3 \u6b21\u4ee5\u540e\u5c06\u8fdb\u5165\u91cd\u8bd5\u8f6e\u8be2\uff0c\u6b64\u65f6 FailedRetryInterval \u914d\u7f6e\u624d\u4f1a\u751f\u6548\u3002 FailedRetryCount \u00b6 \u9ed8\u8ba4\u503c\uff1a50 \u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u8fbe\u5230\u6b64\u8bbe\u7f6e\u503c\u65f6\uff0c\u5c06\u4e0d\u4f1a\u518d\u7ee7\u7eed\u91cd\u8bd5\uff0c\u901a\u8fc7\u6539\u53d8\u6b64\u53c2\u6570\u6765\u8bbe\u7f6e\u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002 FailedThresholdCallback \u00b6 \u9ed8\u8ba4\u503c\uff1aNULL \u7c7b\u578b\uff1a Action<MessageType, string, string> T1 : Message Type T2 : Message Name T3 : Message Content \u91cd\u8bd5\u9608\u503c\u7684\u5931\u8d25\u56de\u8c03\u3002\u5f53\u91cd\u8bd5\u8fbe\u5230 FailedRetryCount \u8bbe\u7f6e\u7684\u503c\u7684\u65f6\u5019\uff0c\u5c06\u8c03\u7528\u6b64 Action \u56de\u8c03\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u56de\u8c03\u6765\u63a5\u6536\u5931\u8d25\u8fbe\u5230\u6700\u5927\u7684\u901a\u77e5\uff0c\u4ee5\u505a\u51fa\u4eba\u5de5\u4ecb\u5165\u3002\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u6216\u8005\u77ed\u4fe1\u3002 SucceedMessageExpiredAfter \u00b6 \u9ed8\u8ba4\u503c\uff1a24*3600 \u79d2\uff081\u5929\u540e\uff09 \u6210\u529f\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff08\u79d2\uff09\u3002 \u5f53\u6d88\u606f\u53d1\u9001\u6216\u8005\u6d88\u8d39\u6210\u529f\u65f6\u5019\uff0c\u5728\u65f6\u95f4\u8fbe\u5230 SucceedMessageExpiredAfter \u79d2\u65f6\u5019\u5c06\u4f1a\u4ece Persistent \u4e2d\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u503c\u6765\u8bbe\u7f6e\u8fc7\u671f\u7684\u65f6\u95f4\u3002","title":"Configuration"},{"location":"user-guide/en/cap/configuration/#_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u5728\u5411IoC\u5bb9\u5668\u4e2d\u6ce8\u518cCAP\u670d\u52a1\u7684\u65f6\u5019\u6307\u5b9a\u914d\u7f6e\u3002 services . AddCap ( config => { // config.XXX }); \u5176\u4e2d services \u4ee3\u8868\u7684\u662f IServiceCollection \u63a5\u53e3\u5bf9\u8c61\uff0c\u5b83\u4f4d\u4e8e Microsoft.Extensions.DependencyInjection \u4e0b\u9762\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u5fae\u8f6f\u7684IoC\u5bb9\u5668\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u67e5\u770b ASP.NET Core \u8fd9\u91cc\u7684\u6587\u6863 \u6765\u4e86\u89e3\u5982\u4f55\u66ff\u6362\u9ed8\u8ba4\u7684\u5bb9\u5668\u5b9e\u73b0\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/en/cap/configuration/#_2","text":"\u6700\u7b80\u5355\u7684\u56de\u7b54\u5c31\u662f\uff0c\u81f3\u5c11\u4f60\u8981\u914d\u7f6e\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u548c\u4e00\u4e2a\u4e8b\u4ef6\u5b58\u50a8\uff0c\u5982\u679c\u4f60\u60f3\u5feb\u901f\u5f00\u59cb\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\uff1a services . AddCap ( config => { config . UseInMemoryQueue (); config . UseInmemoryStorage (); }); \u6709\u5173\u5177\u4f53\u7684\u6d88\u606f\u961f\u5217\u7684\u914d\u7f6e\u548c\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u548c Persistent \u7ae0\u8282\u4e2d\u5177\u4f53\u7ec4\u4ef6\u63d0\u4f9b\u7684\u914d\u7f6e\u9879\u3002","title":"\u4ec0\u4e48\u662f\u6700\u4f4e\u914d\u7f6e\uff1f"},{"location":"user-guide/en/cap/configuration/#cap","text":"\u5728 AddCap \u4e2d CapOptions \u5bf9\u8c61\u662f\u7528\u6765\u5b58\u50a8\u914d\u7f6e\u76f8\u5173\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u5177\u6709\u4e00\u4e9b\u9ed8\u8ba4\u503c\uff0c\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u3002","title":"CAP \u4e2d\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e"},{"location":"user-guide/en/cap/configuration/#defaultgroup","text":"\u9ed8\u8ba4\u503c\uff1acap.queue.{\u7a0b\u5e8f\u96c6\u540d\u79f0} \u9ed8\u8ba4\u7684\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u5b57\uff0c\u5728\u4e0d\u540c\u7684 Transports \u4e2d\u5bf9\u5e94\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u6b64\u503c\u6765\u81ea\u5b9a\u4e49\u4e0d\u540c Transports \u4e2d\u7684\u540d\u5b57\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u770b\u3002 \u5728 RabbitMQ \u4e2d\u6620\u5c04\u5230 Queue Names \u3002 \u5728 Apache Kafka \u4e2d\u6620\u5c04\u5230 Topic Name\u3002 \u5728 Azure Service Bus \u4e2d\u6620\u5c04\u5230 Subscription Name\u3002","title":"DefaultGroup"},{"location":"user-guide/en/cap/configuration/#version","text":"\u9ed8\u8ba4\u503c\uff1av1 \u8fd9\u662f\u5728CAP v2.4 \u7248\u672c\u4e2d\u5f15\u5165\u7684\u65b0\u914d\u7f6e\u9879\uff0c\u7528\u4e8e\u7ed9\u6d88\u606f\u6307\u5b9a\u7248\u672c\u6765\u9694\u79bb\u4e0d\u540c\u7248\u672c\u670d\u52a1\u7684\u6d88\u606f\uff0c\u5e38\u7528\u4e8eA/B\u6d4b\u8bd5\u6216\u8005\u591a\u670d\u52a1\u7248\u672c\u7684\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u5176\u5e94\u7528\u573a\u666f\uff1a \u4e1a\u52a1\u5feb\u901f\u8fed\u4ee3\uff0c\u9700\u8981\u5411\u524d\u517c\u5bb9 \u7531\u4e8e\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\uff0c\u5728\u5404\u4e2a\u670d\u52a1\u96c6\u6210\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4e3a\u4e86\u9002\u5e94\u65b0\u5f15\u5165\u7684\u9700\u6c42\uff0c\u4f1a\u6dfb\u52a0\u6216\u8005\u4fee\u6539\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u4f60\u662f\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8fd9\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e86\u5e76\u4e14\u6b63\u5728\u670d\u52a1\u5ba2\u6237\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u529f\u80fd\u5728\u4e0a\u7ebf\u7684\u65f6\u5019\u548c\u65e7\u7684\u6570\u636e\u7ed3\u6784\u53d1\u751f\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6539\u53d8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u80fd\u628a\u6d88\u606f\u961f\u5217\u548c\u6301\u4e45\u5316\u7684\u6d88\u606f\u5168\u90e8\u6e05\u7a7a\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u663e\u7136\u662f\u81f4\u547d\u7684\u3002 \u591a\u4e2a\u7248\u672c\u7684\u670d\u52a1\u7aef \u6709\u4e9b\u65f6\u5019\uff0cApp\u7684\u670d\u52a1\u7aef\u9700\u8981\u63d0\u4f9b\u591a\u5957\u63a5\u53e3\uff0c\u6765\u652f\u6301\u4e0d\u540c\u7248\u672c\u7684App\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7248\u672c\u7684App\u76f8\u540c\u7684\u63a5\u53e3\u548c\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u670d\u52a1\u7aef\u63d0\u4f9b\u4e0d\u7528\u7684\u8def\u7531\u5730\u5740\u6765\u9002\u914d\u4e0d\u540c\u7248\u672c\u7684App\u8c03\u7528\u3002 \u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6301\u4e45\u5316\u8868/\u96c6\u5408 \u5e0c\u671b\u591a\u4e2a\u4e0d\u540c\u5b9e\u4f8b\u7684\u7a0b\u5e8f\u53ef\u4ee5\u516c\u7528\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u5728 2.4 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u8868\u540d\u6765\u9694\u79bb\u4e0d\u540c\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u8868\uff0c\u5373\u5728CAP\u914d\u7f6e\u7684\u65f6\u5019\u901a\u8fc7\u914d\u7f6e\u4e0d\u540c\u7684\u8868\u540d\u524d\u7f00\u6765\u5b9e\u73b0\u3002 \u67e5\u770b\u535a\u5ba2\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Version \u7684\u4fe1\u606f\uff1a https://www.cnblogs.com/savorboard/p/cap-2-4.html","title":"Version"},{"location":"user-guide/en/cap/configuration/#failedretryinterval","text":"\u9ed8\u8ba4\u503c\uff1a60 \u79d2 \u5728\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u5728\u6d88\u606f\u6d88\u8d39\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6d88\u8d39\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u6d88\u8d39\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u91cd\u8bd5 & \u95f4\u9694 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91cd\u8bd5\u5c06\u5728\u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u5931\u8d25\u7684 4\u5206\u949f\u540e \u5f00\u59cb\uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u8bbe\u7f6e\u6d88\u606f\u72b6\u6001\u5ef6\u8fdf\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u3002 \u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u7684\u8fc7\u7a0b\u4e2d\u5931\u8d25\u4f1a\u7acb\u5373\u91cd\u8bd5 3 \u6b21\uff0c\u5728 3 \u6b21\u4ee5\u540e\u5c06\u8fdb\u5165\u91cd\u8bd5\u8f6e\u8be2\uff0c\u6b64\u65f6 FailedRetryInterval \u914d\u7f6e\u624d\u4f1a\u751f\u6548\u3002","title":"FailedRetryInterval"},{"location":"user-guide/en/cap/configuration/#failedretrycount","text":"\u9ed8\u8ba4\u503c\uff1a50 \u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u8fbe\u5230\u6b64\u8bbe\u7f6e\u503c\u65f6\uff0c\u5c06\u4e0d\u4f1a\u518d\u7ee7\u7eed\u91cd\u8bd5\uff0c\u901a\u8fc7\u6539\u53d8\u6b64\u53c2\u6570\u6765\u8bbe\u7f6e\u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002","title":"FailedRetryCount"},{"location":"user-guide/en/cap/configuration/#failedthresholdcallback","text":"\u9ed8\u8ba4\u503c\uff1aNULL \u7c7b\u578b\uff1a Action<MessageType, string, string> T1 : Message Type T2 : Message Name T3 : Message Content \u91cd\u8bd5\u9608\u503c\u7684\u5931\u8d25\u56de\u8c03\u3002\u5f53\u91cd\u8bd5\u8fbe\u5230 FailedRetryCount \u8bbe\u7f6e\u7684\u503c\u7684\u65f6\u5019\uff0c\u5c06\u8c03\u7528\u6b64 Action \u56de\u8c03\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u56de\u8c03\u6765\u63a5\u6536\u5931\u8d25\u8fbe\u5230\u6700\u5927\u7684\u901a\u77e5\uff0c\u4ee5\u505a\u51fa\u4eba\u5de5\u4ecb\u5165\u3002\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u6216\u8005\u77ed\u4fe1\u3002","title":"FailedThresholdCallback"},{"location":"user-guide/en/cap/configuration/#succeedmessageexpiredafter","text":"\u9ed8\u8ba4\u503c\uff1a24*3600 \u79d2\uff081\u5929\u540e\uff09 \u6210\u529f\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff08\u79d2\uff09\u3002 \u5f53\u6d88\u606f\u53d1\u9001\u6216\u8005\u6d88\u8d39\u6210\u529f\u65f6\u5019\uff0c\u5728\u65f6\u95f4\u8fbe\u5230 SucceedMessageExpiredAfter \u79d2\u65f6\u5019\u5c06\u4f1a\u4ece Persistent \u4e2d\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u503c\u6765\u8bbe\u7f6e\u8fc7\u671f\u7684\u65f6\u95f4\u3002","title":"SucceedMessageExpiredAfter"},{"location":"user-guide/en/cap/idempotence/","text":"Idempotence \u00b6 \u5e42\u7b49\u6027\uff08\u4f60\u53ef\u4ee5\u5728 Wikipedia \u8bfb\u5230\u5173\u4e8e\u5e42\u7b49\u6027\u7684\u5b9a\u4e49\uff09\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5e42\u7b49\u65f6\uff0c\u4e00\u822c\u662f\u6307\u53ef\u4ee5\u91cd\u590d\u5904\u7406\u4f20\u6bd2\u7684\u6d88\u606f\uff0c\u800c\u4e0d\u662f\u4ea7\u751f\u610f\u5916\u7684\u7ed3\u679c\u3002 \u4ea4\u4ed8\u4fdd\u8bc1 \u00b6 \u5728\u8bf4\u5e42\u7b49\u6027\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8bf4\u4e0b\u5173\u4e8e\u6d88\u8d39\u7aef\u7684\u6d88\u606f\u4ea4\u4ed8\u3002 \u7531\u4e8eCAP\u4e0d\u662f\u4f7f\u7528\u7684 MS DTC \u6216\u5176\u4ed6\u7c7b\u578b\u76842PC\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\uff0c\u6240\u4ee5\u5b58\u5728\u81f3\u5c11\u6d88\u606f\u4e25\u683c\u4ea4\u4ed8\u4e00\u6b21\u7684\u95ee\u9898\uff0c\u5177\u4f53\u7684\u8bf4\u5728\u57fa\u4e8e\u6d88\u606f\u7684\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e00\u4e0b\u4e09\u79cd\u53ef\u80fd\uff1a Exactly Once(*) \uff08\u4ec5\u6709\u4e00\u6b21\uff09 At Most Once \uff08\u6700\u591a\u4e00\u6b21\uff09 At Least Once \uff08\u6700\u5c11\u4e00\u6b21\uff09 \u5e26 * \u53f7\u8868\u793a\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u3002 At Most Once \u00b6 \u6700\u591a\u4e00\u6b21\u4ea4\u4ed8\u4fdd\u8bc1\uff0c\u6db5\u76d6\u4e86\u4fdd\u8bc1\u4e00\u6b21\u6216\u6839\u672c\u4e0d\u63a5\u6536\u6240\u6709\u6d88\u606f\u7684\u60c5\u51b5\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u4f20\u9012\u4fdd\u8bc1\u53ef\u80fd\u6765\u81ea\u4f60\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u4f60\u7684\u4ee3\u7801\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\u5176\u64cd\u4f5c\uff1a 1. \u4ece\u961f\u5217\u79fb\u9664\u6d88\u606f 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u5c06\u6d88\u606f\u53d1\u56de\u5230\u961f\u5217\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u5de5\u4f5c\u4e8b\u52a1\u5c06\u88ab\u63d0\u4ea4\u3002 \u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\u5e76\u4e0d\u80fd\u603b\u662f\u6210\u529f\uff0c\u6bd4\u5982\u5728 1 \u4e4b\u540e\u51fa\u73b0\u5f02\u5e38\uff0c\u6216\u8005\u662f\u4f60\u5728\u5c06\u6d88\u606f\u653e\u56de\u5230\u961f\u5217\u4e2d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u7531\u6216\u8005\u5b95\u673a\u91cd\u542f\u7b49\u60c5\u51b5\u3002 \u4f7f\u7528\u8fd9\u4e2a\u534f\u8bae\uff0c\u4f60\u5c06\u5192\u7740\u4e22\u5931\u6d88\u606f\u7684\u98ce\u9669\uff0c\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u5c31\u6ca1\u6709\u5173\u7cfb\u3002 At Least Once \u00b6 \u8fd9\u4e2a\u4ea4\u4ed8\u4fdd\u8bc1\u5305\u542b\u4f60\u6536\u5230\u81f3\u5c11\u4e00\u6b21\u7684\u6d88\u606f\uff0c\u5f53\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u53ef\u80fd\u4f1a\u6536\u5230\u591a\u6b21\u6d88\u606f\u3002 \u5b83\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u6211\u4eec\u6267\u884c\u6b65\u9aa4\u7684\u987a\u5e8f\uff0c\u5b83\u8981\u6c42\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u652f\u6301\u4e8b\u52a1\u6216ACK\u673a\u5236\uff0c\u6bd4\u5982\u4f20\u7edf\u7684 begin-commit-rollback \u534f\u8bae\uff08MSMQ\u662f\u8fd9\u6837\uff09\uff0c\u6216\u8005\u662f receive-ack-nack \u534f\u8bae\uff08RabbitMQ\uff0cAzure Service Bus\u7b49\u662f\u8fd9\u6837\u7684\uff09\u3002 \u5927\u81f4\u6b65\u9aa4\u5982\u4e0b: 1. \u62a2\u5360\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u5220\u9664\u6d88\u606f No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u91ca\u653e\u62a2\u5360\u7684\u6d88\u606f \u5f53\u51fa\u73b0\u5931\u8d25\u6216\u8005\u62a2\u5360\u6d88\u606f\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u80fd\u591f\u518d\u6b21\u63a5\u6536\u5230\u6d88\u606f\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5de5\u4f5c\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\u3002 \u4ec0\u4e48\u662f \u201c\u5de5\u4f5c\u4e8b\u52a1\u201d ? \u00b6 \u4e0a\u9762\u6240\u8bf4\u7684\u201c\u5de5\u4f5c\u4e8b\u52a1\u201d\u5e76\u4e0d\u662f\u7279\u6307\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e8b\u52a1\uff0c\u8fd9\u91cc\u7684\u5de5\u4f5c\u4e8b\u52a1\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4ee3\u7801\u7684\u539f\u5b50\u6027\u3002 \u6bd4\u5982\u5b83\u53ef\u4ee5\u662f\u4f20\u7edf\u7684RDMS\u4e8b\u52a1\uff0c\u4e5f\u6216\u8005\u662f MongoDB \u4e8b\u52a1\u6216\u8005\u662f\u4e00\u4e2a\u4ea4\u6613\u7b49\u3002 \u5728\u8fd9\u91cc\u5b83\u4ee3\u8868\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u662f\u4e00\u4e2a\u6982\u5ff5\u6027\u7684\u4e8b\u5b9e\u4ee5\u652f\u6301\u524d\u9762\u63d0\u5230\u7684\u4ec5\u4ea4\u4ed8\u4e00\u6b21\u7684\u8fd9\u79cd\u95ee\u9898\u3002 \u901a\u5e38\uff0c\u4e0d\u53ef\u80fd\u505a\u5230\u6d88\u606f\u7684\u4e8b\u52a1\u548c\u5de5\u4f5c\u4e8b\u52a1\u6765\u5f62\u6210\u539f\u5b50\u6027\u8fdb\u884c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002 CAP \u4e2d\u7684\u5e42\u7b49\u6027 \u00b6 \u5728CAP\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u7684\u4ea4\u4ed8\u4fdd\u8bc1\u4e3a At Least Once\u3002 \u7531\u4e8e\u6211\u4eec\u5177\u6709\u4e34\u65f6\u5b58\u50a8\u4ecb\u8d28\uff08\u6570\u636e\u5e93\u8868\uff09\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u505a\u5230 At Most Once, \u4f46\u662f\u4e3a\u4e86\u4e25\u683c\u4fdd\u8bc1\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\u76f8\u5173\u529f\u80fd\u6216\u914d\u7f6e\u3002 \u4e3a\u4ec0\u4e48\u6ca1\u6709\u5b9e\u73b0\u5e42\u7b49\uff1f \u00b6 1\u3001\u6d88\u606f\u5199\u5165\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6b64\u65f6\u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u4e86 \u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u7684\u539f\u56e0\u6709\u975e\u5e38\u591a\uff0c\u6211\u5982\u679c\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u573a\u666f\u76f2\u76ee\u8fdb\u884c\u91cd\u8bd5\u6216\u8005\u4e0d\u8fdb\u884c\u91cd\u8bd5\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u9009\u62e9\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u6d88\u8d39\u8005\u4e3a\u6263\u6b3e\u670d\u52a1\uff0c\u5982\u679c\u662f\u6267\u884c\u6263\u6b3e\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u5199\u6263\u6b3e\u65e5\u5fd7\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u6b64\u65f6CAP\u4f1a\u5224\u65ad\u4e3a\u6d88\u8d39\u8005\u6267\u884c\u5931\u8d25\uff0c\u8fdb\u884c\u91cd\u8bd5\u3002\u5982\u679c\u5ba2\u6237\u7aef\u81ea\u5df1\u6ca1\u6709\u4fdd\u8bc1\u5e42\u7b49\u6027\uff0c\u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\uff0c\u8fd9\u91cc\u52bf\u5fc5\u4f1a\u9020\u6210\u591a\u6b21\u6263\u6b3e\u51fa\u73b0\u4e25\u91cd\u540e\u679c\u3002 2\u3001\u6267\u884cConsumer\u65b9\u6cd5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u53c8\u6536\u5230\u4e86\u540c\u6837\u7684\u6d88\u606f \u6b64\u5904\u573a\u666f\u4e5f\u662f\u53ef\u80fd\u5b58\u5728\u7684\uff0c\u5047\u5982\u5f00\u59cb\u7684\u65f6\u5019Consumer\u5df2\u7ecf\u6267\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5982 Broker \u5b95\u673a\u6062\u590d\u7b49\uff0c\u53c8\u6536\u5230\u4e86\u76f8\u540c\u7684\u6d88\u606f\uff0cCAP \u5728\u6536\u5230Broker\u6d88\u606f\u540e\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u65b0\u7684\u6d88\u606f\uff0c\u4f1a\u5bf9 Consumer\u518d\u6b21\u6267\u884c\uff0c\u7531\u4e8e\u662f\u65b0\u6d88\u606f\uff0c\u6b64\u65f6 CAP \u4e5f\u662f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u7684\u3002 3\u3001\u76ee\u524d\u7684\u6570\u636e\u5b58\u50a8\u6a21\u5f0f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49 \u7531\u4e8eCAP\u5b58\u6d88\u606f\u7684\u8868\u5bf9\u4e8e\u6210\u529f\u6d88\u8d39\u7684\u6d88\u606f\u4f1a\u4e8e1\u4e2a\u5c0f\u65f6\u540e\u5220\u9664\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u4e00\u4e9b\u5386\u53f2\u6027\u6d88\u606f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u64cd\u4f5c\u3002 \u5386\u53f2\u6027\u6307\u7684\u662f\uff0c\u5047\u5982 Broker\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u7ef4\u62a4\u4e86\u6216\u8005\u662f\u4eba\u5de5\u5904\u7406\u7684\u4e00\u4e9b\u6d88\u606f\u3002 4\u3001\u4e1a\u754c\u505a\u6cd5 \u8bb8\u591a\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u6846\u67b6\u90fd\u662f\u8981\u6c42 \u7528\u6237 \u6765\u4fdd\u8bc1\u5e42\u7b49\u6027\u64cd\u4f5c\u7684\uff0c\u6bd4\u5982 ENode, RocketMQ \u7b49\u7b49... \u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cCAP\u53ef\u4ee5\u505a\u4e00\u4e9b\u6bd4\u8f83\u4e0d\u4e25\u683c\u7684\u5e42\u7b49\uff0c\u4f46\u662f\u4e25\u683c\u7684\u5e42\u7b49\u65e0\u6cd5\u505a\u5230\u7684\u3002 \u4ee5\u81ea\u7136\u7684\u65b9\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f \u00b6 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6d88\u606f\u88ab\u6267\u884c\u591a\u6b21\u800c\u4e0d\u4f1a\u4ea7\u751f\u610f\u5916\u7ed3\u679c\u662f\u5f88\u81ea\u7136\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u91c7\u7528\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5e26\u7684\u4e00\u4e9b\u5e42\u7b49\u529f\u80fd\u3002\u6bd4\u5982\uff1a \u6570\u636e\u5e93\u63d0\u4f9b\u7684 INSERT ON DUPLICATE KEY UPDATE \u6216\u8005\u662f\u91c7\u53d6\u7c7b\u578b\u7684\u7a0b\u5e8f\u5224\u65ad\u884c\u4e3a\u3002 \u663e\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f \u00b6 \u53e6\u5916\u4e00\u79cd\u5904\u7406\u5e42\u7b49\u6027\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u6d88\u606f\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\u4f20\u9012ID\uff0c\u7136\u540e\u7531\u5355\u72ec\u7684\u6d88\u606f\u8ddf\u8e2a\u5668\u6765\u5904\u7406\u3002 \u6bd4\u5982\u4f60\u4f7f\u7528\u5177\u6709\u4e8b\u52a1\u6570\u636e\u5b58\u50a8\u7684 IMessageTracker \u6765\u8ddf\u8e2a\u6d88\u606fID\uff0c\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a readonly IMessageTracker _messageTracker ; public SomeMessageHandler ( IMessageTracker messageTracker ) { _messageTracker = messageTracker ; } [CapSubscribe] public async Task Handle ( SomeMessage message ) { if ( await _messageTracker . HasProcessed ( message . Id )) { return ; } // do the work here // ... // remember that this message has been processed await _messageTracker . MarkAsProcessed ( messageId ); } \u81f3\u4e8e IMessageTracker \u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982Redis\u6216\u8005\u6570\u636e\u5e93\u7b49\u5b58\u50a8\u6d88\u606fId\u548c\u5bf9\u5e94\u7684\u5904\u7406\u72b6\u6001\u3002","title":"Idempotence"},{"location":"user-guide/en/cap/idempotence/#idempotence","text":"\u5e42\u7b49\u6027\uff08\u4f60\u53ef\u4ee5\u5728 Wikipedia \u8bfb\u5230\u5173\u4e8e\u5e42\u7b49\u6027\u7684\u5b9a\u4e49\uff09\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5e42\u7b49\u65f6\uff0c\u4e00\u822c\u662f\u6307\u53ef\u4ee5\u91cd\u590d\u5904\u7406\u4f20\u6bd2\u7684\u6d88\u606f\uff0c\u800c\u4e0d\u662f\u4ea7\u751f\u610f\u5916\u7684\u7ed3\u679c\u3002","title":"Idempotence"},{"location":"user-guide/en/cap/idempotence/#_1","text":"\u5728\u8bf4\u5e42\u7b49\u6027\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8bf4\u4e0b\u5173\u4e8e\u6d88\u8d39\u7aef\u7684\u6d88\u606f\u4ea4\u4ed8\u3002 \u7531\u4e8eCAP\u4e0d\u662f\u4f7f\u7528\u7684 MS DTC \u6216\u5176\u4ed6\u7c7b\u578b\u76842PC\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\uff0c\u6240\u4ee5\u5b58\u5728\u81f3\u5c11\u6d88\u606f\u4e25\u683c\u4ea4\u4ed8\u4e00\u6b21\u7684\u95ee\u9898\uff0c\u5177\u4f53\u7684\u8bf4\u5728\u57fa\u4e8e\u6d88\u606f\u7684\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e00\u4e0b\u4e09\u79cd\u53ef\u80fd\uff1a Exactly Once(*) \uff08\u4ec5\u6709\u4e00\u6b21\uff09 At Most Once \uff08\u6700\u591a\u4e00\u6b21\uff09 At Least Once \uff08\u6700\u5c11\u4e00\u6b21\uff09 \u5e26 * \u53f7\u8868\u793a\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u3002","title":"\u4ea4\u4ed8\u4fdd\u8bc1"},{"location":"user-guide/en/cap/idempotence/#at-most-once","text":"\u6700\u591a\u4e00\u6b21\u4ea4\u4ed8\u4fdd\u8bc1\uff0c\u6db5\u76d6\u4e86\u4fdd\u8bc1\u4e00\u6b21\u6216\u6839\u672c\u4e0d\u63a5\u6536\u6240\u6709\u6d88\u606f\u7684\u60c5\u51b5\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u4f20\u9012\u4fdd\u8bc1\u53ef\u80fd\u6765\u81ea\u4f60\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u4f60\u7684\u4ee3\u7801\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\u5176\u64cd\u4f5c\uff1a 1. \u4ece\u961f\u5217\u79fb\u9664\u6d88\u606f 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u5c06\u6d88\u606f\u53d1\u56de\u5230\u961f\u5217\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u5de5\u4f5c\u4e8b\u52a1\u5c06\u88ab\u63d0\u4ea4\u3002 \u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\u5e76\u4e0d\u80fd\u603b\u662f\u6210\u529f\uff0c\u6bd4\u5982\u5728 1 \u4e4b\u540e\u51fa\u73b0\u5f02\u5e38\uff0c\u6216\u8005\u662f\u4f60\u5728\u5c06\u6d88\u606f\u653e\u56de\u5230\u961f\u5217\u4e2d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u7531\u6216\u8005\u5b95\u673a\u91cd\u542f\u7b49\u60c5\u51b5\u3002 \u4f7f\u7528\u8fd9\u4e2a\u534f\u8bae\uff0c\u4f60\u5c06\u5192\u7740\u4e22\u5931\u6d88\u606f\u7684\u98ce\u9669\uff0c\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u5c31\u6ca1\u6709\u5173\u7cfb\u3002","title":"At Most Once"},{"location":"user-guide/en/cap/idempotence/#at-least-once","text":"\u8fd9\u4e2a\u4ea4\u4ed8\u4fdd\u8bc1\u5305\u542b\u4f60\u6536\u5230\u81f3\u5c11\u4e00\u6b21\u7684\u6d88\u606f\uff0c\u5f53\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u53ef\u80fd\u4f1a\u6536\u5230\u591a\u6b21\u6d88\u606f\u3002 \u5b83\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u6211\u4eec\u6267\u884c\u6b65\u9aa4\u7684\u987a\u5e8f\uff0c\u5b83\u8981\u6c42\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u652f\u6301\u4e8b\u52a1\u6216ACK\u673a\u5236\uff0c\u6bd4\u5982\u4f20\u7edf\u7684 begin-commit-rollback \u534f\u8bae\uff08MSMQ\u662f\u8fd9\u6837\uff09\uff0c\u6216\u8005\u662f receive-ack-nack \u534f\u8bae\uff08RabbitMQ\uff0cAzure Service Bus\u7b49\u662f\u8fd9\u6837\u7684\uff09\u3002 \u5927\u81f4\u6b65\u9aa4\u5982\u4e0b: 1. \u62a2\u5360\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u5220\u9664\u6d88\u606f No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u91ca\u653e\u62a2\u5360\u7684\u6d88\u606f \u5f53\u51fa\u73b0\u5931\u8d25\u6216\u8005\u62a2\u5360\u6d88\u606f\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u80fd\u591f\u518d\u6b21\u63a5\u6536\u5230\u6d88\u606f\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5de5\u4f5c\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\u3002","title":"At Least Once"},{"location":"user-guide/en/cap/idempotence/#_2","text":"\u4e0a\u9762\u6240\u8bf4\u7684\u201c\u5de5\u4f5c\u4e8b\u52a1\u201d\u5e76\u4e0d\u662f\u7279\u6307\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e8b\u52a1\uff0c\u8fd9\u91cc\u7684\u5de5\u4f5c\u4e8b\u52a1\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4ee3\u7801\u7684\u539f\u5b50\u6027\u3002 \u6bd4\u5982\u5b83\u53ef\u4ee5\u662f\u4f20\u7edf\u7684RDMS\u4e8b\u52a1\uff0c\u4e5f\u6216\u8005\u662f MongoDB \u4e8b\u52a1\u6216\u8005\u662f\u4e00\u4e2a\u4ea4\u6613\u7b49\u3002 \u5728\u8fd9\u91cc\u5b83\u4ee3\u8868\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u662f\u4e00\u4e2a\u6982\u5ff5\u6027\u7684\u4e8b\u5b9e\u4ee5\u652f\u6301\u524d\u9762\u63d0\u5230\u7684\u4ec5\u4ea4\u4ed8\u4e00\u6b21\u7684\u8fd9\u79cd\u95ee\u9898\u3002 \u901a\u5e38\uff0c\u4e0d\u53ef\u80fd\u505a\u5230\u6d88\u606f\u7684\u4e8b\u52a1\u548c\u5de5\u4f5c\u4e8b\u52a1\u6765\u5f62\u6210\u539f\u5b50\u6027\u8fdb\u884c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002","title":"\u4ec0\u4e48\u662f \u201c\u5de5\u4f5c\u4e8b\u52a1\u201d ?"},{"location":"user-guide/en/cap/idempotence/#cap","text":"\u5728CAP\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u7684\u4ea4\u4ed8\u4fdd\u8bc1\u4e3a At Least Once\u3002 \u7531\u4e8e\u6211\u4eec\u5177\u6709\u4e34\u65f6\u5b58\u50a8\u4ecb\u8d28\uff08\u6570\u636e\u5e93\u8868\uff09\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u505a\u5230 At Most Once, \u4f46\u662f\u4e3a\u4e86\u4e25\u683c\u4fdd\u8bc1\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\u76f8\u5173\u529f\u80fd\u6216\u914d\u7f6e\u3002","title":"CAP \u4e2d\u7684\u5e42\u7b49\u6027"},{"location":"user-guide/en/cap/idempotence/#_3","text":"1\u3001\u6d88\u606f\u5199\u5165\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6b64\u65f6\u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u4e86 \u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u7684\u539f\u56e0\u6709\u975e\u5e38\u591a\uff0c\u6211\u5982\u679c\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u573a\u666f\u76f2\u76ee\u8fdb\u884c\u91cd\u8bd5\u6216\u8005\u4e0d\u8fdb\u884c\u91cd\u8bd5\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u9009\u62e9\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u6d88\u8d39\u8005\u4e3a\u6263\u6b3e\u670d\u52a1\uff0c\u5982\u679c\u662f\u6267\u884c\u6263\u6b3e\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u5199\u6263\u6b3e\u65e5\u5fd7\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u6b64\u65f6CAP\u4f1a\u5224\u65ad\u4e3a\u6d88\u8d39\u8005\u6267\u884c\u5931\u8d25\uff0c\u8fdb\u884c\u91cd\u8bd5\u3002\u5982\u679c\u5ba2\u6237\u7aef\u81ea\u5df1\u6ca1\u6709\u4fdd\u8bc1\u5e42\u7b49\u6027\uff0c\u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\uff0c\u8fd9\u91cc\u52bf\u5fc5\u4f1a\u9020\u6210\u591a\u6b21\u6263\u6b3e\u51fa\u73b0\u4e25\u91cd\u540e\u679c\u3002 2\u3001\u6267\u884cConsumer\u65b9\u6cd5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u53c8\u6536\u5230\u4e86\u540c\u6837\u7684\u6d88\u606f \u6b64\u5904\u573a\u666f\u4e5f\u662f\u53ef\u80fd\u5b58\u5728\u7684\uff0c\u5047\u5982\u5f00\u59cb\u7684\u65f6\u5019Consumer\u5df2\u7ecf\u6267\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5982 Broker \u5b95\u673a\u6062\u590d\u7b49\uff0c\u53c8\u6536\u5230\u4e86\u76f8\u540c\u7684\u6d88\u606f\uff0cCAP \u5728\u6536\u5230Broker\u6d88\u606f\u540e\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u65b0\u7684\u6d88\u606f\uff0c\u4f1a\u5bf9 Consumer\u518d\u6b21\u6267\u884c\uff0c\u7531\u4e8e\u662f\u65b0\u6d88\u606f\uff0c\u6b64\u65f6 CAP \u4e5f\u662f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u7684\u3002 3\u3001\u76ee\u524d\u7684\u6570\u636e\u5b58\u50a8\u6a21\u5f0f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49 \u7531\u4e8eCAP\u5b58\u6d88\u606f\u7684\u8868\u5bf9\u4e8e\u6210\u529f\u6d88\u8d39\u7684\u6d88\u606f\u4f1a\u4e8e1\u4e2a\u5c0f\u65f6\u540e\u5220\u9664\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u4e00\u4e9b\u5386\u53f2\u6027\u6d88\u606f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u64cd\u4f5c\u3002 \u5386\u53f2\u6027\u6307\u7684\u662f\uff0c\u5047\u5982 Broker\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u7ef4\u62a4\u4e86\u6216\u8005\u662f\u4eba\u5de5\u5904\u7406\u7684\u4e00\u4e9b\u6d88\u606f\u3002 4\u3001\u4e1a\u754c\u505a\u6cd5 \u8bb8\u591a\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u6846\u67b6\u90fd\u662f\u8981\u6c42 \u7528\u6237 \u6765\u4fdd\u8bc1\u5e42\u7b49\u6027\u64cd\u4f5c\u7684\uff0c\u6bd4\u5982 ENode, RocketMQ \u7b49\u7b49... \u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cCAP\u53ef\u4ee5\u505a\u4e00\u4e9b\u6bd4\u8f83\u4e0d\u4e25\u683c\u7684\u5e42\u7b49\uff0c\u4f46\u662f\u4e25\u683c\u7684\u5e42\u7b49\u65e0\u6cd5\u505a\u5230\u7684\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5b9e\u73b0\u5e42\u7b49\uff1f"},{"location":"user-guide/en/cap/idempotence/#_4","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6d88\u606f\u88ab\u6267\u884c\u591a\u6b21\u800c\u4e0d\u4f1a\u4ea7\u751f\u610f\u5916\u7ed3\u679c\u662f\u5f88\u81ea\u7136\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u91c7\u7528\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5e26\u7684\u4e00\u4e9b\u5e42\u7b49\u529f\u80fd\u3002\u6bd4\u5982\uff1a \u6570\u636e\u5e93\u63d0\u4f9b\u7684 INSERT ON DUPLICATE KEY UPDATE \u6216\u8005\u662f\u91c7\u53d6\u7c7b\u578b\u7684\u7a0b\u5e8f\u5224\u65ad\u884c\u4e3a\u3002","title":"\u4ee5\u81ea\u7136\u7684\u65b9\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f"},{"location":"user-guide/en/cap/idempotence/#_5","text":"\u53e6\u5916\u4e00\u79cd\u5904\u7406\u5e42\u7b49\u6027\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u6d88\u606f\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\u4f20\u9012ID\uff0c\u7136\u540e\u7531\u5355\u72ec\u7684\u6d88\u606f\u8ddf\u8e2a\u5668\u6765\u5904\u7406\u3002 \u6bd4\u5982\u4f60\u4f7f\u7528\u5177\u6709\u4e8b\u52a1\u6570\u636e\u5b58\u50a8\u7684 IMessageTracker \u6765\u8ddf\u8e2a\u6d88\u606fID\uff0c\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a readonly IMessageTracker _messageTracker ; public SomeMessageHandler ( IMessageTracker messageTracker ) { _messageTracker = messageTracker ; } [CapSubscribe] public async Task Handle ( SomeMessage message ) { if ( await _messageTracker . HasProcessed ( message . Id )) { return ; } // do the work here // ... // remember that this message has been processed await _messageTracker . MarkAsProcessed ( messageId ); } \u81f3\u4e8e IMessageTracker \u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982Redis\u6216\u8005\u6570\u636e\u5e93\u7b49\u5b58\u50a8\u6d88\u606fId\u548c\u5bf9\u5e94\u7684\u5904\u7406\u72b6\u6001\u3002","title":"\u663e\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f"},{"location":"user-guide/en/cap/license/","text":"License \u00b6 MIT License Copyright \u00a9 2016 - 2019 Savorboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"user-guide/en/cap/license/#license","text":"MIT License Copyright \u00a9 2016 - 2019 Savorboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"user-guide/en/cap/messaging/","text":"\u6d88\u606f \u00b6 \u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u79f0\u4e4b\u4e3a Message ( \u6d88\u606f )\u3002 \u6d88\u606f\u8c03\u5ea6 \u00b6 CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u53d1\u9001\u5230 Transport, \u7531 Transport \u8fdb\u884c\u8fd0\u8f93\u3002 \u5f53\u4f60\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u65f6\uff0cCAP\u5c06\u4f1a\u5c06\u6d88\u606f\u8c03\u5ea6\u5230\u76f8\u5e94\u7684 Transport\u4e2d\u53bb\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6279\u91cf\u53d1\u9001\u6d88\u606f\u3002 \u6709\u5173 Transports \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u3002 \u6d88\u606f\u5b58\u50a8 \u00b6 CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c Persistent\uff08\u6301\u4e45\u5316\uff09\uff0c \u6709\u5173 Persistent \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Persistent \u7ae0\u8282\u3002 \u6d88\u606f\u91cd\u8bd5 \u00b6 \u91cd\u8bd5\u5728\u6574\u4e2aCAP\u67b6\u6784\u8bbe\u8ba1\u4e2d\u5177\u6709\u91cd\u8981\u4f5c\u7528\uff0cCAP \u4e2d\u4f1a\u9488\u5bf9\u53d1\u9001\u5931\u8d25\u6216\u8005\u6267\u884c\u5931\u8d25\u7684\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u3002\u5728\u6574\u4e2a CAP \u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u6709\u4ee5\u4e0b\u51e0\u5904\u91c7\u7528\u7684\u91cd\u8bd5\u7b56\u7565\u3002 1\u3001 \u53d1\u9001\u91cd\u8bd5 \u5728\u6d88\u606f\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u51fa\u73b0 Broker \u5b95\u673a\u6216\u8005\u8fde\u63a5\u5931\u8d25\u7684\u60c5\u51b5\u4ea6\u6216\u8005\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u65f6\u5019 CAP \u4f1a\u5bf9\u53d1\u9001\u7684\u91cd\u8bd5\uff0c\u7b2c\u4e00\u6b21\u91cd\u8bd5\u6b21\u6570\u4e3a 3\uff0c4\u5206\u949f\u540e\u4ee5\u540e\u6bcf\u5206\u949f\u91cd\u8bd5\u4e00\u6b21\uff0c\u8fdb\u884c\u6b21\u6570 +1\uff0c\u5f53\u603b\u6b21\u6570\u8fbe\u523050\u6b21\u540e\uff0cCAP\u5c06\u4e0d\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 CapOptions \u4e2d\u8bbe\u7f6eFailedRetryCount\u6765\u8c03\u6574\u9ed8\u8ba4\u91cd\u8bd5\u7684\u603b\u6b21\u6570\u3002 \u5f53\u5931\u8d25\u603b\u6b21\u6570\u8fbe\u5230\u9ed8\u8ba4\u5931\u8d25\u603b\u6b21\u6570\u540e\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u91cd\u8bd5\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 Dashboard \u4e2d\u67e5\u770b\u6d88\u606f\u5931\u8d25\u7684\u539f\u56e0\uff0c\u7136\u540e\u8fdb\u884c\u4eba\u5de5\u91cd\u8bd5\u5904\u7406\u3002 2\u3001 \u6d88\u8d39\u91cd\u8bd5 \u5f53 Consumer \u63a5\u6536\u5230\u6d88\u606f\u65f6\uff0c\u4f1a\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\uff0c\u5728\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\u3002\u8fd9\u4e2a\u91cd\u8bd5\u7b56\u7565\u548c\u4e0a\u9762\u7684 \u53d1\u9001\u91cd\u8bd5 \u662f\u76f8\u540c\u7684\u3002 \u6d88\u606f\u6570\u636e\u6e05\u7406 \u00b6 \u6570\u636e\u5e93\u6d88\u606f\u8868\u4e2d\u5177\u6709\u4e00\u4e2a ExpiresAt \u5b57\u6bb5\u8868\u793a\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u6d88\u606f\u53d1\u9001\u6210\u529f\u6216\u8005\u6d88\u8d39\u6210\u529f\u540e\uff0cCAP\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Successed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 1\u5c0f\u65f6 \u540e\u8fc7\u671f\uff0c\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Failed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 15\u5929 \u540e\u8fc7\u671f\u3002 CAP \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u6bcf\u9694\u4e00\u4e2a\u5c0f\u65f6\u5c06\u6d88\u606f\u8868\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\u5220\u9664\uff0c\u907f\u514d\u6570\u636e\u91cf\u8fc7\u591a\u5bfc\u81f4\u6027\u80fd\u7684\u964d\u4f4e\u3002\u6e05\u7406\u89c4\u5219\u4e3a ExpiresAt \u4e0d\u4e3a\u7a7a\u5e76\u4e14\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u7684\u6570\u636e\u3002 \u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e3aFailed\u7684\u6d88\u606f\uff08\u6b63\u5e38\u60c5\u51b5\u4ed6\u4eec\u5df2\u7ecf\u88ab\u91cd\u8bd5\u4e86 50 \u6b21\uff09\uff0c\u5982\u679c\u4f6015\u5929\u6ca1\u6709\u4eba\u5de5\u4ecb\u5165\u5904\u7406\uff0c\u540c\u6837\u4f1a\u88ab\u6e05\u7406\u6389\u3002","title":"Messaging"},{"location":"user-guide/en/cap/messaging/#_1","text":"\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u79f0\u4e4b\u4e3a Message ( \u6d88\u606f )\u3002","title":"\u6d88\u606f"},{"location":"user-guide/en/cap/messaging/#_2","text":"CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u53d1\u9001\u5230 Transport, \u7531 Transport \u8fdb\u884c\u8fd0\u8f93\u3002 \u5f53\u4f60\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u65f6\uff0cCAP\u5c06\u4f1a\u5c06\u6d88\u606f\u8c03\u5ea6\u5230\u76f8\u5e94\u7684 Transport\u4e2d\u53bb\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6279\u91cf\u53d1\u9001\u6d88\u606f\u3002 \u6709\u5173 Transports \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u3002","title":"\u6d88\u606f\u8c03\u5ea6"},{"location":"user-guide/en/cap/messaging/#_3","text":"CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c Persistent\uff08\u6301\u4e45\u5316\uff09\uff0c \u6709\u5173 Persistent \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Persistent \u7ae0\u8282\u3002","title":"\u6d88\u606f\u5b58\u50a8"},{"location":"user-guide/en/cap/messaging/#_4","text":"\u91cd\u8bd5\u5728\u6574\u4e2aCAP\u67b6\u6784\u8bbe\u8ba1\u4e2d\u5177\u6709\u91cd\u8981\u4f5c\u7528\uff0cCAP \u4e2d\u4f1a\u9488\u5bf9\u53d1\u9001\u5931\u8d25\u6216\u8005\u6267\u884c\u5931\u8d25\u7684\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u3002\u5728\u6574\u4e2a CAP \u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u6709\u4ee5\u4e0b\u51e0\u5904\u91c7\u7528\u7684\u91cd\u8bd5\u7b56\u7565\u3002 1\u3001 \u53d1\u9001\u91cd\u8bd5 \u5728\u6d88\u606f\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u51fa\u73b0 Broker \u5b95\u673a\u6216\u8005\u8fde\u63a5\u5931\u8d25\u7684\u60c5\u51b5\u4ea6\u6216\u8005\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u65f6\u5019 CAP \u4f1a\u5bf9\u53d1\u9001\u7684\u91cd\u8bd5\uff0c\u7b2c\u4e00\u6b21\u91cd\u8bd5\u6b21\u6570\u4e3a 3\uff0c4\u5206\u949f\u540e\u4ee5\u540e\u6bcf\u5206\u949f\u91cd\u8bd5\u4e00\u6b21\uff0c\u8fdb\u884c\u6b21\u6570 +1\uff0c\u5f53\u603b\u6b21\u6570\u8fbe\u523050\u6b21\u540e\uff0cCAP\u5c06\u4e0d\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 CapOptions \u4e2d\u8bbe\u7f6eFailedRetryCount\u6765\u8c03\u6574\u9ed8\u8ba4\u91cd\u8bd5\u7684\u603b\u6b21\u6570\u3002 \u5f53\u5931\u8d25\u603b\u6b21\u6570\u8fbe\u5230\u9ed8\u8ba4\u5931\u8d25\u603b\u6b21\u6570\u540e\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u91cd\u8bd5\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 Dashboard \u4e2d\u67e5\u770b\u6d88\u606f\u5931\u8d25\u7684\u539f\u56e0\uff0c\u7136\u540e\u8fdb\u884c\u4eba\u5de5\u91cd\u8bd5\u5904\u7406\u3002 2\u3001 \u6d88\u8d39\u91cd\u8bd5 \u5f53 Consumer \u63a5\u6536\u5230\u6d88\u606f\u65f6\uff0c\u4f1a\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\uff0c\u5728\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\u3002\u8fd9\u4e2a\u91cd\u8bd5\u7b56\u7565\u548c\u4e0a\u9762\u7684 \u53d1\u9001\u91cd\u8bd5 \u662f\u76f8\u540c\u7684\u3002","title":"\u6d88\u606f\u91cd\u8bd5"},{"location":"user-guide/en/cap/messaging/#_5","text":"\u6570\u636e\u5e93\u6d88\u606f\u8868\u4e2d\u5177\u6709\u4e00\u4e2a ExpiresAt \u5b57\u6bb5\u8868\u793a\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u6d88\u606f\u53d1\u9001\u6210\u529f\u6216\u8005\u6d88\u8d39\u6210\u529f\u540e\uff0cCAP\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Successed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 1\u5c0f\u65f6 \u540e\u8fc7\u671f\uff0c\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Failed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 15\u5929 \u540e\u8fc7\u671f\u3002 CAP \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u6bcf\u9694\u4e00\u4e2a\u5c0f\u65f6\u5c06\u6d88\u606f\u8868\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\u5220\u9664\uff0c\u907f\u514d\u6570\u636e\u91cf\u8fc7\u591a\u5bfc\u81f4\u6027\u80fd\u7684\u964d\u4f4e\u3002\u6e05\u7406\u89c4\u5219\u4e3a ExpiresAt \u4e0d\u4e3a\u7a7a\u5e76\u4e14\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u7684\u6570\u636e\u3002 \u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e3aFailed\u7684\u6d88\u606f\uff08\u6b63\u5e38\u60c5\u51b5\u4ed6\u4eec\u5df2\u7ecf\u88ab\u91cd\u8bd5\u4e86 50 \u6b21\uff09\uff0c\u5982\u679c\u4f6015\u5929\u6ca1\u6709\u4eba\u5de5\u4ecb\u5165\u5904\u7406\uff0c\u540c\u6837\u4f1a\u88ab\u6e05\u7406\u6389\u3002","title":"\u6d88\u606f\u6570\u636e\u6e05\u7406"},{"location":"user-guide/en/cap/sagas/","text":"Sagas \u00b6 Sagas (also known in the literature as \"process managers\") are stateful services. You can think of them as state machines whose transitions are driven by messages. Sagas on CAP \u00b6 TODO","title":"Sagas"},{"location":"user-guide/en/cap/sagas/#sagas","text":"Sagas (also known in the literature as \"process managers\") are stateful services. You can think of them as state machines whose transitions are driven by messages.","title":"Sagas"},{"location":"user-guide/en/cap/sagas/#sagas-on-cap","text":"TODO","title":"Sagas on CAP"},{"location":"user-guide/en/cap/serialization/","text":"\u5e8f\u5217\u5316 \u00b6 CAP \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6d88\u606f\u672c\u8eab\u7684\u5e8f\u5217\u5316\uff0c\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d CAP \u4f7f\u7528 json \u5bf9\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u5185\u5bb9\u5e8f\u5217\u5316 \u00b6 CAP \u652f\u6301\u5bf9\u6d88\u606f\u7684 Content \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49 IContentSerializer \u63a5\u53e3\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u76ee\u524d\u7531\u4e8e\u6d88\u606f\u5bf9\u8c61\u9700\u8981\u8fdb\u884c\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u6240\u4ee5\u53ea\u652f\u6301 string \u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u4f8b\u5316\u3002 class MyContentSerializer : IContentSerializer { public T DeSerialize < T >( string messageObjStr ) { } public object DeSerialize ( string content , Type type ) { } public string Serialize < T >( T messageObj ) { } } \u6d88\u606f\u9002\u914d\u5668 \u00b6 \u5728\u5f02\u6784\u7cfb\u7edf\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u548c\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u901a\u8baf\uff0c\u4f46\u662f\u5176\u4ed6\u7cfb\u7edf\u4f7f\u7528\u7684\u6d88\u606f\u5bf9\u8c61\u53ef\u80fd\u548c CAP \u7684 \u5305\u88c5\u5668\u5bf9\u8c61 \u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5bf9\u6d88\u606f\u8fdb\u884c\u81ea\u5b9a\u4e49\u9002\u914d\u3002 CAP \u63d0\u4f9b\u4e86 IMessagePacker \u63a5\u53e3\u7528\u4e8e\u5bf9 \u5305\u88c5\u5668\u5bf9\u8c61 \u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u81ea\u5b9a\u4e49\u7684 MessagePacker \u901a\u5e38\u662f\u5c06 CapMessage \u8fdb\u884c\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u4e1a\u52a1\u5bf9\u8c61\u3002 \u4f7f\u7528\u65b9\u6cd5\uff1a class MyMessagePacker : IMessagePacker { private readonly IContentSerializer _serializer ; public DefaultMessagePacker ( IContentSerializer serializer ) { _serializer = serializer ; } public string Pack ( CapMessage obj ) { var myStructure = new { Id = obj . Id , Body = obj . Content , Date = obj . Timestamp , Callback = obj . CallbackName }; return _serializer . Serialize ( myStructure ); } public CapMessage UnPack ( string packingMessage ) { var myStructure = _serializer . DeSerialize < MyStructure >( packingMessage ); return new CapMessageDto { Id = myStructure . Id , Timestamp = myStructure . Date , Content = myStructure . Body , CallbackName = myStructure . Callback }; } } \u63a5\u4e0b\u6765\uff0c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 MyMessagePacker \u5230\u670d\u52a1\u4e2d\u3002 services . AddCap ( x =>{ }). AddMessagePacker < MyMessagePacker >();","title":"Serialization"},{"location":"user-guide/en/cap/serialization/#_1","text":"CAP \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6d88\u606f\u672c\u8eab\u7684\u5e8f\u5217\u5316\uff0c\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d CAP \u4f7f\u7528 json \u5bf9\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u3002","title":"\u5e8f\u5217\u5316"},{"location":"user-guide/en/cap/serialization/#_2","text":"CAP \u652f\u6301\u5bf9\u6d88\u606f\u7684 Content \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49 IContentSerializer \u63a5\u53e3\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u76ee\u524d\u7531\u4e8e\u6d88\u606f\u5bf9\u8c61\u9700\u8981\u8fdb\u884c\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u6240\u4ee5\u53ea\u652f\u6301 string \u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u4f8b\u5316\u3002 class MyContentSerializer : IContentSerializer { public T DeSerialize < T >( string messageObjStr ) { } public object DeSerialize ( string content , Type type ) { } public string Serialize < T >( T messageObj ) { } }","title":"\u5185\u5bb9\u5e8f\u5217\u5316"},{"location":"user-guide/en/cap/serialization/#_3","text":"\u5728\u5f02\u6784\u7cfb\u7edf\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u548c\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u901a\u8baf\uff0c\u4f46\u662f\u5176\u4ed6\u7cfb\u7edf\u4f7f\u7528\u7684\u6d88\u606f\u5bf9\u8c61\u53ef\u80fd\u548c CAP \u7684 \u5305\u88c5\u5668\u5bf9\u8c61 \u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5bf9\u6d88\u606f\u8fdb\u884c\u81ea\u5b9a\u4e49\u9002\u914d\u3002 CAP \u63d0\u4f9b\u4e86 IMessagePacker \u63a5\u53e3\u7528\u4e8e\u5bf9 \u5305\u88c5\u5668\u5bf9\u8c61 \u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u81ea\u5b9a\u4e49\u7684 MessagePacker \u901a\u5e38\u662f\u5c06 CapMessage \u8fdb\u884c\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u4e1a\u52a1\u5bf9\u8c61\u3002 \u4f7f\u7528\u65b9\u6cd5\uff1a class MyMessagePacker : IMessagePacker { private readonly IContentSerializer _serializer ; public DefaultMessagePacker ( IContentSerializer serializer ) { _serializer = serializer ; } public string Pack ( CapMessage obj ) { var myStructure = new { Id = obj . Id , Body = obj . Content , Date = obj . Timestamp , Callback = obj . CallbackName }; return _serializer . Serialize ( myStructure ); } public CapMessage UnPack ( string packingMessage ) { var myStructure = _serializer . DeSerialize < MyStructure >( packingMessage ); return new CapMessageDto { Id = myStructure . Id , Timestamp = myStructure . Date , Content = myStructure . Body , CallbackName = myStructure . Callback }; } } \u63a5\u4e0b\u6765\uff0c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 MyMessagePacker \u5230\u670d\u52a1\u4e2d\u3002 services . AddCap ( x =>{ }). AddMessagePacker < MyMessagePacker >();","title":"\u6d88\u606f\u9002\u914d\u5668"},{"location":"user-guide/en/cap/transactions/","text":"\u4e8b\u52a1 \u00b6 \u5206\u5e03\u5f0f\u4e8b\u52a1? \u00b6 CAP \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u4e8e DTC \u6216\u8005 2PC \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u76f8\u53cd\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9047\u5230\u7684\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u6d89\u53ca\u901a\u8baf\u7684\u5f00\u9500\uff0c\u4f7f\u7528\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c06\u975e\u5e38\u6602\u8d35\uff0c\u5728\u6027\u80fd\u65b9\u9762\u4e5f\u540c\u6837\u5982\u6b64\u3002\u53e6\u5916\u7531\u4e8e\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u540c\u6837\u53d7**CAP\u5b9a\u7406**\u7684\u7ea6\u675f\uff0c\u5f53\u53d1\u751f\u7f51\u7edc\u5206\u533a\u65f6\u5b83\u5c06\u4e0d\u5f97\u4e0d\u653e\u5f03\u53ef\u7528\u6027(CAP\u4e2d\u7684A)\u3002 \u9488\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5904\u7406\uff0cCAP \u91c7\u7528\u7684\u662f\u201c\u5f02\u6b65\u786e\u4fdd\u201d\u8fd9\u79cd\u65b9\u6848\u3002 \u5f02\u6b65\u786e\u4fdd \u00b6 \u5f02\u6b65\u786e\u4fdd\u8fd9\u79cd\u65b9\u6848\u53c8\u53eb\u505a\u672c\u5730\u6d88\u606f\u8868\uff0c\u8fd9\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u65b9\u6848\uff0c\u65b9\u6848\u6700\u521d\u6765\u6e90\u4e8e eBay\uff0c\u53c2\u8003\u8d44\u6599\u89c1\u6bb5\u672b\u94fe\u63a5\u3002\u8fd9\u79cd\u65b9\u6848\u76ee\u524d\u4e5f\u662f\u4f01\u4e1a\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u65b9\u6848\u4e4b\u4e00\u3002 \u76f8\u5bf9\u4e8e TCC \u6216\u8005 2PC/3PC \u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u6765\u8bf4\u662f\u6700\u7b80\u5355\u7684\uff0c\u800c\u4e14\u5b83\u662f\u53bb\u4e2d\u5fc3\u5316\u7684\u3002\u5728TCC \u6216\u8005 2PC \u7684\u65b9\u6848\u4e2d\uff0c\u5fc5\u987b\u5177\u6709\u4e8b\u52a1\u534f\u8c03\u5668\u6765\u5904\u7406\u6bcf\u4e2a\u4e0d\u540c\u670d\u52a1\u4e4b\u95f4\u7684\u72b6\u6001\uff0c\u800c\u6b64\u79cd\u65b9\u6848\u4e0d\u9700\u8981\u4e8b\u52a1\u534f\u8c03\u5668\u3002 \u53e6\u5916 2PC/TCC \u8fd9\u79cd\u65b9\u6848\u5982\u679c\u670d\u52a1\u4f9d\u8d56\u8fc7\u591a\uff0c\u4f1a\u5e26\u6765\u7ba1\u7406\u590d\u6742\u6027\u589e\u52a0\u548c\u7a33\u5b9a\u6027\u98ce\u9669\u589e\u5927\u7684\u95ee\u9898\u3002\u8bd5\u60f3\u5982\u679c\u6211\u4eec\u5f3a\u4f9d\u8d56 10 \u4e2a\u670d\u52a1\uff0c9 \u4e2a\u90fd\u6267\u884c\u6210\u529f\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u6267\u884c\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u524d\u9762 9 \u4e2a\u90fd\u8981\u56de\u6eda\u6389\uff1f\u8fd9\u4e2a\u6210\u672c\u8fd8\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u8bf4 2PC \u6216\u8005 TCC \u8fd9\u79cd\u65b9\u6848\u4e0d\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u6709\u5176\u76f8\u5bf9\u4f18\u52bf\u7684\u4f7f\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u4e86\u3002 \u4e2d\u6587\uff1a http://www.cnblogs.com/savorboard/p/base-an-acid-alternative.html \u82f1\u6587\uff1a http://queue.acm.org/detail.cfm?id=1394128","title":"Transactions"},{"location":"user-guide/en/cap/transactions/#_1","text":"","title":"\u4e8b\u52a1"},{"location":"user-guide/en/cap/transactions/#_2","text":"CAP \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u4e8e DTC \u6216\u8005 2PC \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u76f8\u53cd\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9047\u5230\u7684\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u6d89\u53ca\u901a\u8baf\u7684\u5f00\u9500\uff0c\u4f7f\u7528\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c06\u975e\u5e38\u6602\u8d35\uff0c\u5728\u6027\u80fd\u65b9\u9762\u4e5f\u540c\u6837\u5982\u6b64\u3002\u53e6\u5916\u7531\u4e8e\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u540c\u6837\u53d7**CAP\u5b9a\u7406**\u7684\u7ea6\u675f\uff0c\u5f53\u53d1\u751f\u7f51\u7edc\u5206\u533a\u65f6\u5b83\u5c06\u4e0d\u5f97\u4e0d\u653e\u5f03\u53ef\u7528\u6027(CAP\u4e2d\u7684A)\u3002 \u9488\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5904\u7406\uff0cCAP \u91c7\u7528\u7684\u662f\u201c\u5f02\u6b65\u786e\u4fdd\u201d\u8fd9\u79cd\u65b9\u6848\u3002","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1?"},{"location":"user-guide/en/cap/transactions/#_3","text":"\u5f02\u6b65\u786e\u4fdd\u8fd9\u79cd\u65b9\u6848\u53c8\u53eb\u505a\u672c\u5730\u6d88\u606f\u8868\uff0c\u8fd9\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u65b9\u6848\uff0c\u65b9\u6848\u6700\u521d\u6765\u6e90\u4e8e eBay\uff0c\u53c2\u8003\u8d44\u6599\u89c1\u6bb5\u672b\u94fe\u63a5\u3002\u8fd9\u79cd\u65b9\u6848\u76ee\u524d\u4e5f\u662f\u4f01\u4e1a\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u65b9\u6848\u4e4b\u4e00\u3002 \u76f8\u5bf9\u4e8e TCC \u6216\u8005 2PC/3PC \u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u6765\u8bf4\u662f\u6700\u7b80\u5355\u7684\uff0c\u800c\u4e14\u5b83\u662f\u53bb\u4e2d\u5fc3\u5316\u7684\u3002\u5728TCC \u6216\u8005 2PC \u7684\u65b9\u6848\u4e2d\uff0c\u5fc5\u987b\u5177\u6709\u4e8b\u52a1\u534f\u8c03\u5668\u6765\u5904\u7406\u6bcf\u4e2a\u4e0d\u540c\u670d\u52a1\u4e4b\u95f4\u7684\u72b6\u6001\uff0c\u800c\u6b64\u79cd\u65b9\u6848\u4e0d\u9700\u8981\u4e8b\u52a1\u534f\u8c03\u5668\u3002 \u53e6\u5916 2PC/TCC \u8fd9\u79cd\u65b9\u6848\u5982\u679c\u670d\u52a1\u4f9d\u8d56\u8fc7\u591a\uff0c\u4f1a\u5e26\u6765\u7ba1\u7406\u590d\u6742\u6027\u589e\u52a0\u548c\u7a33\u5b9a\u6027\u98ce\u9669\u589e\u5927\u7684\u95ee\u9898\u3002\u8bd5\u60f3\u5982\u679c\u6211\u4eec\u5f3a\u4f9d\u8d56 10 \u4e2a\u670d\u52a1\uff0c9 \u4e2a\u90fd\u6267\u884c\u6210\u529f\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u6267\u884c\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u524d\u9762 9 \u4e2a\u90fd\u8981\u56de\u6eda\u6389\uff1f\u8fd9\u4e2a\u6210\u672c\u8fd8\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u8bf4 2PC \u6216\u8005 TCC \u8fd9\u79cd\u65b9\u6848\u4e0d\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u6709\u5176\u76f8\u5bf9\u4f18\u52bf\u7684\u4f7f\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u4e86\u3002 \u4e2d\u6587\uff1a http://www.cnblogs.com/savorboard/p/base-an-acid-alternative.html \u82f1\u6587\uff1a http://queue.acm.org/detail.cfm?id=1394128","title":"\u5f02\u6b65\u786e\u4fdd"},{"location":"user-guide/en/cap/upgrade-guides/","text":"\u5347\u7ea7\u6307\u5bfc \u00b6 \u8bf7\u53c2\u9605 Github Release \u9875\u9762\uff1a https://github.com/dotnetcore/CAP/releases","title":"Upgrade Guides"},{"location":"user-guide/en/cap/upgrade-guides/#_1","text":"\u8bf7\u53c2\u9605 Github Release \u9875\u9762\uff1a https://github.com/dotnetcore/CAP/releases","title":"\u5347\u7ea7\u6307\u5bfc"},{"location":"user-guide/en/getting-started/contributing/","text":"\u8d21\u732e \u00b6 One of the easiest ways to contribute is to participate in discussions and discuss issues. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues Submitting Changes \u00b6 You can also contribute by submitting pull requests with code changes. Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before the changes are merged into the repository. Additional Resources \u00b6 Filtering issues and pull requests Using search to filter issues and pull requests","title":"Contributing"},{"location":"user-guide/en/getting-started/contributing/#_1","text":"One of the easiest ways to contribute is to participate in discussions and discuss issues. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues","title":"\u8d21\u732e"},{"location":"user-guide/en/getting-started/contributing/#submitting-changes","text":"You can also contribute by submitting pull requests with code changes. Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before the changes are merged into the repository.","title":"Submitting Changes"},{"location":"user-guide/en/getting-started/contributing/#additional-resources","text":"Filtering issues and pull requests Using search to filter issues and pull requests","title":"Additional Resources"},{"location":"user-guide/en/getting-started/introduction/","text":"\u4ecb\u7ecd \u00b6 CAP \u662f\u4e00\u4e2aEventBus\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u5728\u5fae\u670d\u52a1\u6216\u8005SOA\u7cfb\u7edf\u4e2d\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\u4e00\u4e2a\u6846\u67b6\u3002\u5b83\u6709\u52a9\u4e8e\u521b\u5efa\u53ef\u6269\u5c55\uff0c\u53ef\u9760\u5e76\u4e14\u6613\u4e8e\u66f4\u6539\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u3002 \u5728\u5fae\u8f6f\u7684 eShopOnContainer \u5fae\u670d\u52a1\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 CAP \u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 EventBus\u3002 \u4ec0\u4e48\u662f EventBus\uff1f An Eventbus is a mechanism that allows different components to communicate with each other without knowing about each other. A component can send an Event to the Eventbus without knowing who will pick it up or how many others will pick it up. Components can also listen to Events on an Eventbus, without knowing who sent the Events. That way, components can communicate without depending on each other. Also, it is very easy to substitute a component. As long as the new component understands the Events that are being sent and received, the other components will never know. \u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684 Service Bus \u6216\u8005 Event Bus\uff0c CAP \u62e5\u6709\u81ea\u5df1\u7684\u7279\u8272\uff0c\u5b83\u4e0d\u8981\u6c42\u4f7f\u7528\u8005\u53d1\u9001\u6d88\u606f\u6216\u8005\u5904\u7406\u6d88\u606f\u7684\u65f6\u5019\u5b9e\u73b0\u6216\u8005\u7ee7\u627f\u4efb\u4f55\u63a5\u53e3\uff0c\u62e5\u6709\u975e\u5e38\u9ad8\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4e00\u76f4\u575a\u4fe1\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u6240\u4ee5CAP\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u4e14\u62e5\u6709\u8f7b\u91cf\u7ea7\u3002 CAP \u91c7\u7528\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u4f60\u6709\u8bb8\u591a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c\u5305\u62ec\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\uff0c\u5e8f\u5217\u5316\u65b9\u5f0f\u7b49\uff0c\u7cfb\u7edf\u7684\u8bb8\u591a\u5143\u7d20\u5185\u5bb9\u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002 \u76f8\u5173\u89c6\u9891 \u00b6 Video: bilibili \u6559\u7a0b Video: Youtube \u6559\u7a0b Video: \u817e\u8baf\u89c6\u9891\u6559\u7a0b \u76f8\u5173\u6587\u7ae0 \u00b6 Article: CAP \u4ecb\u7ecd\u53ca\u4f7f\u7528 Article: CAP 2.5 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.4 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.3 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027\u7528 Article: .NET Core Community \u9996\u4e2a\u5343\u661f\u9879\u76ee\u8bde\u751f\uff1aCAP","title":"Introduction"},{"location":"user-guide/en/getting-started/introduction/#_1","text":"CAP \u662f\u4e00\u4e2aEventBus\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u5728\u5fae\u670d\u52a1\u6216\u8005SOA\u7cfb\u7edf\u4e2d\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\u4e00\u4e2a\u6846\u67b6\u3002\u5b83\u6709\u52a9\u4e8e\u521b\u5efa\u53ef\u6269\u5c55\uff0c\u53ef\u9760\u5e76\u4e14\u6613\u4e8e\u66f4\u6539\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u3002 \u5728\u5fae\u8f6f\u7684 eShopOnContainer \u5fae\u670d\u52a1\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 CAP \u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 EventBus\u3002 \u4ec0\u4e48\u662f EventBus\uff1f An Eventbus is a mechanism that allows different components to communicate with each other without knowing about each other. A component can send an Event to the Eventbus without knowing who will pick it up or how many others will pick it up. Components can also listen to Events on an Eventbus, without knowing who sent the Events. That way, components can communicate without depending on each other. Also, it is very easy to substitute a component. As long as the new component understands the Events that are being sent and received, the other components will never know. \u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684 Service Bus \u6216\u8005 Event Bus\uff0c CAP \u62e5\u6709\u81ea\u5df1\u7684\u7279\u8272\uff0c\u5b83\u4e0d\u8981\u6c42\u4f7f\u7528\u8005\u53d1\u9001\u6d88\u606f\u6216\u8005\u5904\u7406\u6d88\u606f\u7684\u65f6\u5019\u5b9e\u73b0\u6216\u8005\u7ee7\u627f\u4efb\u4f55\u63a5\u53e3\uff0c\u62e5\u6709\u975e\u5e38\u9ad8\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4e00\u76f4\u575a\u4fe1\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u6240\u4ee5CAP\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u4e14\u62e5\u6709\u8f7b\u91cf\u7ea7\u3002 CAP \u91c7\u7528\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u4f60\u6709\u8bb8\u591a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c\u5305\u62ec\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\uff0c\u5e8f\u5217\u5316\u65b9\u5f0f\u7b49\uff0c\u7cfb\u7edf\u7684\u8bb8\u591a\u5143\u7d20\u5185\u5bb9\u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002","title":"\u4ecb\u7ecd"},{"location":"user-guide/en/getting-started/introduction/#_2","text":"Video: bilibili \u6559\u7a0b Video: Youtube \u6559\u7a0b Video: \u817e\u8baf\u89c6\u9891\u6559\u7a0b","title":"\u76f8\u5173\u89c6\u9891"},{"location":"user-guide/en/getting-started/introduction/#_3","text":"Article: CAP \u4ecb\u7ecd\u53ca\u4f7f\u7528 Article: CAP 2.5 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.4 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.3 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027\u7528 Article: .NET Core Community \u9996\u4e2a\u5343\u661f\u9879\u76ee\u8bde\u751f\uff1aCAP","title":"\u76f8\u5173\u6587\u7ae0"},{"location":"user-guide/en/getting-started/quick-start/","text":"\u5feb\u901f\u5f00\u59cb \u00b6 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CAP \u6784\u5efa\u5fae\u670d\u52a1\u4e8b\u4ef6\u603b\u7ebf\u67b6\u6784\uff0c\u5b83\u6bd4\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff0c\u5b83\u63d0\u4f9b\u4e86\u54ea\u4e9b\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\u3002 \u5b89\u88c5 \u00b6 PM > Install-Package DotNetCore . CAP \u5728 Asp.Net Core \u4e2d\u96c6\u6210 \u00b6 \u4ee5\u4fbf\u4e8e\u5feb\u901f\u542f\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u4e8b\u4ef6\u5b58\u50a8\u548c\u6d88\u606f\u961f\u5217\u3002 PM > Install-Package DotNetCore . CAP . InMemoryStorage PM > Install-Package Savorboard . CAP . InMemoryMessageQueue \u5728 Startup.cs \u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseInMemoryStorage (); x . UseInMemoryMessageQueue (); }); } \u53d1\u9001\u6d88\u606f \u00b6 public class PublishController : Controller { [Route(\"~/send\")] public IActionResult SendMessage ([ FromService ] ICapPublisher capBus ) { capBus . Publish ( \"test.show.time\" , DateTime . Now ); return Ok (); } } \u5904\u7406\u6d88\u606f \u00b6 public class ConsumerController : Controller { [NonAction] [CapSubscribe(\"test.show.time\")] public void ReceiveMessage ( DateTime time ) { Console . WriteLine ( \"message time is:\" + time ); } } \u6458\u8981 \u00b6 \u76f8\u5bf9\u4e8e\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\uff0c\u5f02\u6b65\u6d88\u606f\u4f20\u9012\u6700\u5f3a\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u53ef\u9760\u6027\uff0c\u7cfb\u7edf\u7684\u4e00\u4e2a\u90e8\u5206\u4e2d\u7684\u6545\u969c\u4e0d\u4f1a\u4f20\u64ad\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002 \u5728 CAP \u5185\u90e8\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c\u5b58\u50a8\uff0c\u4ee5\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6027\uff0c\u5e76\u914d\u5408\u91cd\u8bd5\u7b49\u7b56\u7565\u4ee5\u8fbe\u5230\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u6570\u636e\u6700\u7ec8\u4e00\u81f4\u6027\u3002","title":"Quick Start"},{"location":"user-guide/en/getting-started/quick-start/#_1","text":"\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CAP \u6784\u5efa\u5fae\u670d\u52a1\u4e8b\u4ef6\u603b\u7ebf\u67b6\u6784\uff0c\u5b83\u6bd4\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff0c\u5b83\u63d0\u4f9b\u4e86\u54ea\u4e9b\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\u3002","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"user-guide/en/getting-started/quick-start/#_2","text":"PM > Install-Package DotNetCore . CAP","title":"\u5b89\u88c5"},{"location":"user-guide/en/getting-started/quick-start/#aspnet-core","text":"\u4ee5\u4fbf\u4e8e\u5feb\u901f\u542f\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u4e8b\u4ef6\u5b58\u50a8\u548c\u6d88\u606f\u961f\u5217\u3002 PM > Install-Package DotNetCore . CAP . InMemoryStorage PM > Install-Package Savorboard . CAP . InMemoryMessageQueue \u5728 Startup.cs \u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseInMemoryStorage (); x . UseInMemoryMessageQueue (); }); }","title":"\u5728 Asp.Net Core \u4e2d\u96c6\u6210"},{"location":"user-guide/en/getting-started/quick-start/#_3","text":"public class PublishController : Controller { [Route(\"~/send\")] public IActionResult SendMessage ([ FromService ] ICapPublisher capBus ) { capBus . Publish ( \"test.show.time\" , DateTime . Now ); return Ok (); } }","title":"\u53d1\u9001\u6d88\u606f"},{"location":"user-guide/en/getting-started/quick-start/#_4","text":"public class ConsumerController : Controller { [NonAction] [CapSubscribe(\"test.show.time\")] public void ReceiveMessage ( DateTime time ) { Console . WriteLine ( \"message time is:\" + time ); } }","title":"\u5904\u7406\u6d88\u606f"},{"location":"user-guide/en/getting-started/quick-start/#_5","text":"\u76f8\u5bf9\u4e8e\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\uff0c\u5f02\u6b65\u6d88\u606f\u4f20\u9012\u6700\u5f3a\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u53ef\u9760\u6027\uff0c\u7cfb\u7edf\u7684\u4e00\u4e2a\u90e8\u5206\u4e2d\u7684\u6545\u969c\u4e0d\u4f1a\u4f20\u64ad\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002 \u5728 CAP \u5185\u90e8\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c\u5b58\u50a8\uff0c\u4ee5\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6027\uff0c\u5e76\u914d\u5408\u91cd\u8bd5\u7b49\u7b56\u7565\u4ee5\u8fbe\u5230\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u6570\u636e\u6700\u7ec8\u4e00\u81f4\u6027\u3002","title":"\u6458\u8981"},{"location":"user-guide/en/monitoring/consul/","text":"Consul \u00b6 Consul is a distributed service mesh to connect, secure, and configure services across any runtime platform and public or private cloud.","title":"Consul"},{"location":"user-guide/en/monitoring/consul/#consul","text":"Consul is a distributed service mesh to connect, secure, and configure services across any runtime platform and public or private cloud.","title":"Consul"},{"location":"user-guide/en/monitoring/dashboard/","text":"Dashboard \u00b6 CAP \u539f\u751f\u63d0\u4f9b\u4e86 Dashboard \u4f9b\u67e5\u770b\u6d88\u606f\uff0c\u5229\u7528 Dashboard \u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u67e5\u770b\u548c\u7ba1\u7406\u6d88\u606f\u3002 \u542f\u7528 Dashboard \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u542f\u52a8Dashboard\u4e2d\u95f4\u4ef6\uff0c\u8981\u5f00\u542fDashboard\u529f\u80fd\u4f60\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a services . AddCap ( x => { //... // Register Dashboard x . UseDashboard (); }); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee http://localhost:xxx/cap \u8fd9\u4e2a\u5730\u5740\u6253\u5f00Dashboard\u3002 Dashboard \u914d\u7f6e\u9879 \u00b6 PathMatch \u9ed8\u8ba4\u503c\uff1a'/cap' \u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6b64\u914d\u7f6e\u9879\u6765\u66f4\u6539Dashboard\u7684\u8bbf\u95ee\u8def\u5f84\u3002 StatsPollingInterval \u9ed8\u8ba4\u503c\uff1a2000 \u6beb\u79d2 \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6eDashboard \u524d\u7aef \u83b7\u53d6\u72b6\u6001\u63a5\u53e3(/stats)\u7684\u8f6e\u8be2\u65f6\u95f4 Authorization \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u8bbf\u95ee Dashboard \u65f6\u7684\u6388\u6743\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5141\u8bb8\u5c40\u57df\u7f51\u8bbf\u95ee\uff0c\u5f53\u4f60\u7684\u5e94\u7528\u60f3\u63d0\u4f9b\u5916\u7f51\u8bbf\u95ee\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6b64\u914d\u7f6e\u6765\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u89c4\u5219\u3002\u8be6\u7ec6\u53c2\u770b\u4e0b\u4e00\u8282 \u81ea\u5b9a\u4e49\u8ba4\u8bc1 \u00b6 \u901a\u8fc7\u5b9e\u73b0 IDashboardAuthorizationFilter \u63a5\u53e3\u53ef\u4ee5\u81ea\u5b9a\u4e49Dashboard\u8ba4\u8bc1\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u901a\u8fc7\u4eceurl\u8bf7\u6c42\u53c2\u6570\u4e2d\u8bfb\u53d6 accesskey \u5224\u65ad\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u3002 public class TestAuthorizationFilter : IDashboardAuthorizationFilter { public bool Authorize ( DashboardContext context ) { if ( context . Request . GetQuery ( \"accesskey\" )== \"xxxxxx\" ){ return true ; } return false ; } } \u7136\u540e\u5728\u4fee\u6539\u6ce8\u518c Dashboard \u65f6\u5019\u914d\u7f6e\u6b64\u8fc7\u6ee4\u5bf9\u8c61\u3002 services . AddCap ( x => { //... // Register Dashboard x . UseDashboard ( opt => { opt . Authorization = new [] { new TestAuthorizationFilter ()}; }); });","title":"Dashboard"},{"location":"user-guide/en/monitoring/dashboard/#dashboard","text":"CAP \u539f\u751f\u63d0\u4f9b\u4e86 Dashboard \u4f9b\u67e5\u770b\u6d88\u606f\uff0c\u5229\u7528 Dashboard \u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u67e5\u770b\u548c\u7ba1\u7406\u6d88\u606f\u3002","title":"Dashboard"},{"location":"user-guide/en/monitoring/dashboard/#dashboard_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u542f\u52a8Dashboard\u4e2d\u95f4\u4ef6\uff0c\u8981\u5f00\u542fDashboard\u529f\u80fd\u4f60\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a services . AddCap ( x => { //... // Register Dashboard x . UseDashboard (); }); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee http://localhost:xxx/cap \u8fd9\u4e2a\u5730\u5740\u6253\u5f00Dashboard\u3002","title":"\u542f\u7528 Dashboard"},{"location":"user-guide/en/monitoring/dashboard/#dashboard_2","text":"PathMatch \u9ed8\u8ba4\u503c\uff1a'/cap' \u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6b64\u914d\u7f6e\u9879\u6765\u66f4\u6539Dashboard\u7684\u8bbf\u95ee\u8def\u5f84\u3002 StatsPollingInterval \u9ed8\u8ba4\u503c\uff1a2000 \u6beb\u79d2 \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6eDashboard \u524d\u7aef \u83b7\u53d6\u72b6\u6001\u63a5\u53e3(/stats)\u7684\u8f6e\u8be2\u65f6\u95f4 Authorization \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u8bbf\u95ee Dashboard \u65f6\u7684\u6388\u6743\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5141\u8bb8\u5c40\u57df\u7f51\u8bbf\u95ee\uff0c\u5f53\u4f60\u7684\u5e94\u7528\u60f3\u63d0\u4f9b\u5916\u7f51\u8bbf\u95ee\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6b64\u914d\u7f6e\u6765\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u89c4\u5219\u3002\u8be6\u7ec6\u53c2\u770b\u4e0b\u4e00\u8282","title":"Dashboard \u914d\u7f6e\u9879"},{"location":"user-guide/en/monitoring/dashboard/#_1","text":"\u901a\u8fc7\u5b9e\u73b0 IDashboardAuthorizationFilter \u63a5\u53e3\u53ef\u4ee5\u81ea\u5b9a\u4e49Dashboard\u8ba4\u8bc1\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u901a\u8fc7\u4eceurl\u8bf7\u6c42\u53c2\u6570\u4e2d\u8bfb\u53d6 accesskey \u5224\u65ad\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u3002 public class TestAuthorizationFilter : IDashboardAuthorizationFilter { public bool Authorize ( DashboardContext context ) { if ( context . Request . GetQuery ( \"accesskey\" )== \"xxxxxx\" ){ return true ; } return false ; } } \u7136\u540e\u5728\u4fee\u6539\u6ce8\u518c Dashboard \u65f6\u5019\u914d\u7f6e\u6b64\u8fc7\u6ee4\u5bf9\u8c61\u3002 services . AddCap ( x => { //... // Register Dashboard x . UseDashboard ( opt => { opt . Authorization = new [] { new TestAuthorizationFilter ()}; }); });","title":"\u81ea\u5b9a\u4e49\u8ba4\u8bc1"},{"location":"user-guide/en/monitoring/diagnostics/","text":"Diagnostics \u00b6 Diagnostics \u63d0\u4f9b\u4e00\u7ec4\u529f\u80fd\u4f7f\u6211\u4eec\u80fd\u591f\u5f88\u65b9\u4fbf\u7684\u53ef\u4ee5\u8bb0\u5f55\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d1\u751f\u7684\u5173\u952e\u6027\u64cd\u4f5c\u4ee5\u53ca\u4ed6\u4eec\u7684\u6267\u884c\u65f6\u95f4\u7b49\uff0c\u4f7f\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u627e\u7279\u522b\u662f\u751f\u4ea7\u73af\u5883\u4e2d\u51fa\u73b0\u95ee\u9898\u6240\u5728\u7684\u6839\u672c\u539f\u56e0\u3002 CAP \u4e2d\u7684 Diagnostics \u00b6 \u5728 CAP \u4e2d\uff0c\u5bf9 DiagnosticSource \u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u76d1\u542c\u5668\u540d\u79f0\u4e3a CapDiagnosticListener \u3002 Diagnostics \u63d0\u4f9b\u5bf9\u5916\u63d0\u4f9b\u7684\u4e8b\u4ef6\u4fe1\u606f\u6709\uff1a \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u524d \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u540e \u6d88\u606f\u6301\u4e45\u5316\u5f02\u5e38 \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u524d \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u540e \u6d88\u606f\u5411MQ\u53d1\u9001\u5f02\u5e38 \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u524d \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u524d \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u5f02\u5e38 \u76f8\u5173\u6d89\u53ca\u5230\u7684\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u5728 DotNetCore.CAP.Diagnostics \u547d\u540d\u7a7a\u95f4\u4e0b\u770b\u5230\u3002","title":"Diagnostics"},{"location":"user-guide/en/monitoring/diagnostics/#diagnostics","text":"Diagnostics \u63d0\u4f9b\u4e00\u7ec4\u529f\u80fd\u4f7f\u6211\u4eec\u80fd\u591f\u5f88\u65b9\u4fbf\u7684\u53ef\u4ee5\u8bb0\u5f55\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d1\u751f\u7684\u5173\u952e\u6027\u64cd\u4f5c\u4ee5\u53ca\u4ed6\u4eec\u7684\u6267\u884c\u65f6\u95f4\u7b49\uff0c\u4f7f\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u627e\u7279\u522b\u662f\u751f\u4ea7\u73af\u5883\u4e2d\u51fa\u73b0\u95ee\u9898\u6240\u5728\u7684\u6839\u672c\u539f\u56e0\u3002","title":"Diagnostics"},{"location":"user-guide/en/monitoring/diagnostics/#cap-diagnostics","text":"\u5728 CAP \u4e2d\uff0c\u5bf9 DiagnosticSource \u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u76d1\u542c\u5668\u540d\u79f0\u4e3a CapDiagnosticListener \u3002 Diagnostics \u63d0\u4f9b\u5bf9\u5916\u63d0\u4f9b\u7684\u4e8b\u4ef6\u4fe1\u606f\u6709\uff1a \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u524d \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u540e \u6d88\u606f\u6301\u4e45\u5316\u5f02\u5e38 \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u524d \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u540e \u6d88\u606f\u5411MQ\u53d1\u9001\u5f02\u5e38 \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u524d \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u524d \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u5f02\u5e38 \u76f8\u5173\u6d89\u53ca\u5230\u7684\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u5728 DotNetCore.CAP.Diagnostics \u547d\u540d\u7a7a\u95f4\u4e0b\u770b\u5230\u3002","title":"CAP \u4e2d\u7684 Diagnostics"},{"location":"user-guide/en/monitoring/health-checks/","text":"\u5065\u5eb7\u68c0\u67e5 \u00b6 TODO","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"user-guide/en/monitoring/health-checks/#_1","text":"TODO","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"user-guide/en/monitoring/metrics/","text":"Metrics \u00b6 TODO:","title":"Metrics"},{"location":"user-guide/en/monitoring/metrics/#metrics","text":"TODO:","title":"Metrics"},{"location":"user-guide/en/persistent/general/","text":"\u57fa\u672c \u00b6 CAP \u9700\u8981\u4f7f\u7528\u5177\u6709\u6301\u4e45\u5316\u529f\u80fd\u7684\u5b58\u50a8\u4ecb\u8d28\u6765\u5b58\u50a8\u4e8b\u4ef6\u6d88\u606f\uff0c\u4f8b\u5982\u901a\u8fc7\u6570\u636e\u5e93\u6216\u8005\u5176\u4ed6NoSql\u8bbe\u65bd\u3002CAP \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5e94\u5bf9\u4e00\u5207\u73af\u5883\u6216\u8005\u7f51\u7edc\u5f02\u5e38\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u7684\u60c5\u51b5\uff0c\u6d88\u606f\u7684\u53ef\u9760\u6027\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u57fa\u77f3\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6d88\u606f\u90fd\u4e0d\u80fd\u4e22\u5931\u3002 \u6301\u4e45\u5316 \u00b6 \u53d1\u9001\u524d \u00b6 \u5728\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d\uff0cCAP\u4f7f\u7528\u672c\u5730\u6570\u636e\u5e93\u8868\u5bf9\u6d88\u606f\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u6d88\u606f\u961f\u5217\u51fa\u73b0\u5f02\u5e38\u6216\u8005\u7f51\u7edc\u9519\u8bef\u65f6\u5019\u6d88\u606f\u662f\u6ca1\u6709\u4e22\u5931\u7684\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u79cd\u673a\u5236\u7684\u53ef\u9760\u6027\uff0cCAP\u4f7f\u7528\u548c\u4e1a\u52a1\u4ee3\u7801\u76f8\u540c\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u6765\u4fdd\u8bc1\u4e1a\u52a1\u64cd\u4f5c\u548cCAP\u7684\u6d88\u606f\u5728\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\u662f\u5f3a\u4e00\u81f4\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8fdb\u884c\u6d88\u606f\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u65b9\u53d1\u751f\u5f02\u5e38\u60c5\u51b5\u6570\u636e\u5e93\u90fd\u4f1a\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002 \u53d1\u9001\u540e \u00b6 \u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u540e\uff0cCAP\u4f1a\u542f\u52a8\u6d88\u606f\u961f\u5217\u7684\u6301\u4e45\u5316\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u5728 RabbitMQ \u548c Kafka \u4e2dCAP\u7684\u6d88\u606f\u662f\u5982\u4f55\u6301\u4e45\u5316\u7684\u3002 \u9488\u5bf9\u4e8e RabbitMQ \u4e2d\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0cCAP \u4f7f\u7528\u7684\u662f\u5177\u6709\u6d88\u606f\u6301\u4e45\u5316\u529f\u80fd\u7684\u6d88\u8d39\u8005\u961f\u5217\uff0c\u4f46\u662f\u8fd9\u91cc\u9762\u53ef\u80fd\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u53c2\u52a0 2.2.1 \u7ae0\u8282\u3002 \u7531\u4e8e Kafka \u5929\u751f\u8bbe\u8ba1\u7684\u5c31\u662f\u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0c\u5728\u6240\u4ee5\u5728\u6d88\u606f\u8fdb\u5165\u5230Kafka\u4e4b\u540e\uff0cKafka\u4f1a\u4fdd\u8bc1\u6d88\u606f\u80fd\u591f\u6b63\u786e\u88ab\u6301\u4e45\u5316\u800c\u4e0d\u4e22\u5931\u3002 \u6d88\u606f\u5b58\u50a8 \u00b6 \u5728 CAP \u542f\u52a8\u540e\uff0c\u4f1a\u5411\u6301\u4e45\u5316\u4ecb\u8d28\u4e2d\u751f\u6210\u4e24\u4e2a\u8868\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u540d\u79f0\u4e3a\uff1a Cap.Published Cap.Received \u3002 \u5b58\u50a8\u683c\u5f0f \u00b6 Published \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string Received \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Group Group Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string \u5305\u88c5\u5668\u5bf9\u8c61 \u00b6 CAP \u5728\u8fdb\u884c\u6d88\u606f\u53d1\u9001\u5230\u65f6\u5019\uff0c\u4f1a\u5bf9\u539f\u59cb\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e2a\u4e8c\u6b21\u5305\u88c5\u5b58\u50a8\u5230 Content \u5b57\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u4e3a\u5305\u88c5 Content \u7684 Message \u5bf9\u8c61\u6570\u636e\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id CAP\u751f\u6210\u7684\u6d88\u606f\u7f16\u53f7 string Timestamp \u6d88\u606f\u521b\u5efa\u65f6\u95f4 string Content \u5185\u5bb9 string CallbackName \u56de\u8c03\u7684\u8ba2\u9605\u8005\u540d\u79f0 string \u5176\u4e2d Id \u5b57\u6bb5\uff0cCAP \u91c7\u7528\u7684 MongoDB \u4e2d\u7684 ObjectId \u5206\u5e03\u5f0fId\u751f\u6210\u7b97\u6cd5\u751f\u6210\u3002","title":"General"},{"location":"user-guide/en/persistent/general/#_1","text":"CAP \u9700\u8981\u4f7f\u7528\u5177\u6709\u6301\u4e45\u5316\u529f\u80fd\u7684\u5b58\u50a8\u4ecb\u8d28\u6765\u5b58\u50a8\u4e8b\u4ef6\u6d88\u606f\uff0c\u4f8b\u5982\u901a\u8fc7\u6570\u636e\u5e93\u6216\u8005\u5176\u4ed6NoSql\u8bbe\u65bd\u3002CAP \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5e94\u5bf9\u4e00\u5207\u73af\u5883\u6216\u8005\u7f51\u7edc\u5f02\u5e38\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u7684\u60c5\u51b5\uff0c\u6d88\u606f\u7684\u53ef\u9760\u6027\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u57fa\u77f3\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6d88\u606f\u90fd\u4e0d\u80fd\u4e22\u5931\u3002","title":"\u57fa\u672c"},{"location":"user-guide/en/persistent/general/#_2","text":"","title":"\u6301\u4e45\u5316"},{"location":"user-guide/en/persistent/general/#_3","text":"\u5728\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d\uff0cCAP\u4f7f\u7528\u672c\u5730\u6570\u636e\u5e93\u8868\u5bf9\u6d88\u606f\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u6d88\u606f\u961f\u5217\u51fa\u73b0\u5f02\u5e38\u6216\u8005\u7f51\u7edc\u9519\u8bef\u65f6\u5019\u6d88\u606f\u662f\u6ca1\u6709\u4e22\u5931\u7684\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u79cd\u673a\u5236\u7684\u53ef\u9760\u6027\uff0cCAP\u4f7f\u7528\u548c\u4e1a\u52a1\u4ee3\u7801\u76f8\u540c\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u6765\u4fdd\u8bc1\u4e1a\u52a1\u64cd\u4f5c\u548cCAP\u7684\u6d88\u606f\u5728\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\u662f\u5f3a\u4e00\u81f4\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8fdb\u884c\u6d88\u606f\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u65b9\u53d1\u751f\u5f02\u5e38\u60c5\u51b5\u6570\u636e\u5e93\u90fd\u4f1a\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002","title":"\u53d1\u9001\u524d"},{"location":"user-guide/en/persistent/general/#_4","text":"\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u540e\uff0cCAP\u4f1a\u542f\u52a8\u6d88\u606f\u961f\u5217\u7684\u6301\u4e45\u5316\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u5728 RabbitMQ \u548c Kafka \u4e2dCAP\u7684\u6d88\u606f\u662f\u5982\u4f55\u6301\u4e45\u5316\u7684\u3002 \u9488\u5bf9\u4e8e RabbitMQ \u4e2d\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0cCAP \u4f7f\u7528\u7684\u662f\u5177\u6709\u6d88\u606f\u6301\u4e45\u5316\u529f\u80fd\u7684\u6d88\u8d39\u8005\u961f\u5217\uff0c\u4f46\u662f\u8fd9\u91cc\u9762\u53ef\u80fd\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u53c2\u52a0 2.2.1 \u7ae0\u8282\u3002 \u7531\u4e8e Kafka \u5929\u751f\u8bbe\u8ba1\u7684\u5c31\u662f\u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0c\u5728\u6240\u4ee5\u5728\u6d88\u606f\u8fdb\u5165\u5230Kafka\u4e4b\u540e\uff0cKafka\u4f1a\u4fdd\u8bc1\u6d88\u606f\u80fd\u591f\u6b63\u786e\u88ab\u6301\u4e45\u5316\u800c\u4e0d\u4e22\u5931\u3002","title":"\u53d1\u9001\u540e"},{"location":"user-guide/en/persistent/general/#_5","text":"\u5728 CAP \u542f\u52a8\u540e\uff0c\u4f1a\u5411\u6301\u4e45\u5316\u4ecb\u8d28\u4e2d\u751f\u6210\u4e24\u4e2a\u8868\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u540d\u79f0\u4e3a\uff1a Cap.Published Cap.Received \u3002","title":"\u6d88\u606f\u5b58\u50a8"},{"location":"user-guide/en/persistent/general/#_6","text":"Published \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string Received \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Group Group Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string","title":"\u5b58\u50a8\u683c\u5f0f"},{"location":"user-guide/en/persistent/general/#_7","text":"CAP \u5728\u8fdb\u884c\u6d88\u606f\u53d1\u9001\u5230\u65f6\u5019\uff0c\u4f1a\u5bf9\u539f\u59cb\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e2a\u4e8c\u6b21\u5305\u88c5\u5b58\u50a8\u5230 Content \u5b57\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u4e3a\u5305\u88c5 Content \u7684 Message \u5bf9\u8c61\u6570\u636e\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id CAP\u751f\u6210\u7684\u6d88\u606f\u7f16\u53f7 string Timestamp \u6d88\u606f\u521b\u5efa\u65f6\u95f4 string Content \u5185\u5bb9 string CallbackName \u56de\u8c03\u7684\u8ba2\u9605\u8005\u540d\u79f0 string \u5176\u4e2d Id \u5b57\u6bb5\uff0cCAP \u91c7\u7528\u7684 MongoDB \u4e2d\u7684 ObjectId \u5206\u5e03\u5f0fId\u751f\u6210\u7b97\u6cd5\u751f\u6210\u3002","title":"\u5305\u88c5\u5668\u5bf9\u8c61"},{"location":"user-guide/en/persistent/in-memory-storage/","text":"In-Memory Storage \u00b6 \u5185\u5b58\u6d88\u606f\u7684\u6301\u4e45\u5316\u5b58\u50a8\u5e38\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u5982\u679c\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u5b58\u50a8\u5219\u4f60\u4f1a\u5931\u53bb\u672c\u5730\u4e8b\u52a1\u6d88\u606f\u53ef\u9760\u6027\u4fdd\u8bc1\u3002 \u914d\u7f6e \u00b6 \u5982\u679c\u8981\u4f7f\u7528\u5185\u5b58\u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.InMemoryStorage \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryStorage (); // x.UseXXX ... }); } \u5185\u5b58\u4e2d\u7684\u53d1\u9001\u6210\u529f\u6d88\u606f\uff0cCAP \u5c06\u4f1a\u6bcf 5\u5206\u949f \u8fdb\u884c\u4e00\u6b21\u6e05\u7406\u3002 Publish with transaction \u00b6 In-Memory \u5b58\u50a8 \u4e0d\u652f\u6301 \u4e8b\u52a1\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002","title":"In-Memory"},{"location":"user-guide/en/persistent/in-memory-storage/#in-memory-storage","text":"\u5185\u5b58\u6d88\u606f\u7684\u6301\u4e45\u5316\u5b58\u50a8\u5e38\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u5982\u679c\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u5b58\u50a8\u5219\u4f60\u4f1a\u5931\u53bb\u672c\u5730\u4e8b\u52a1\u6d88\u606f\u53ef\u9760\u6027\u4fdd\u8bc1\u3002","title":"In-Memory Storage"},{"location":"user-guide/en/persistent/in-memory-storage/#_1","text":"\u5982\u679c\u8981\u4f7f\u7528\u5185\u5b58\u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.InMemoryStorage \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryStorage (); // x.UseXXX ... }); } \u5185\u5b58\u4e2d\u7684\u53d1\u9001\u6210\u529f\u6d88\u606f\uff0cCAP \u5c06\u4f1a\u6bcf 5\u5206\u949f \u8fdb\u884c\u4e00\u6b21\u6e05\u7406\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/en/persistent/in-memory-storage/#publish-with-transaction","text":"In-Memory \u5b58\u50a8 \u4e0d\u652f\u6301 \u4e8b\u52a1\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002","title":"Publish with transaction"},{"location":"user-guide/en/persistent/mongodb/","text":"MongoDB \u00b6 MongoDB \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u9762\u5411\u6587\u6863\u578b\u7684\u6570\u636e\u5e93\u7a0b\u5e8f\uff0c\u5b83\u88ab\u5f52\u4e3a NOSQL \u6570\u636e\u5e93\uff0cCAP \u4ece 2.3 \u7248\u672c\u5f00\u59cb\u652f\u6301 MongoDB \u4f5c\u4e3a\u6d88\u606f\u5b58\u50a8\u3002 MongoDB \u4ece 4.0 \u7248\u672c\u5f00\u59cb\u652f\u6301 ACID \u4e8b\u52a1\uff0c\u6240\u4ee5 CAP \u4e5f\u53ea\u652f\u6301 4.0 \u4ee5\u4e0a\u7684 MongoDB\uff0c\u5e76\u4e14 MongoDB \u9700\u8981\u90e8\u7f72\u4e3a\u96c6\u7fa4\uff0c\u56e0\u4e3a MongoDB \u7684 ACID \u4e8b\u52a1\u9700\u8981\u96c6\u7fa4\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u6709\u5173\u5f00\u53d1\u73af\u5883\u5982\u4f55\u5feb\u901f\u642d\u5efa MongoDB 4.0+ \u96c6\u7fa4\uff0c\u4f60\u53ef\u4ee5\u6211\u7684\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 MongoDB \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MongoDB \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMongoDB ( opt =>{ //MongoDBOptions }); // x.UseXXX ... }); } MongoDBOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT DatabaseName \u6570\u636e\u5e93\u540d\u79f0 string cap DatabaseConnection \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string mongodb://localhost:27017 ReceivedCollection \u63a5\u6536\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.received PublishedCollection \u53d1\u9001\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.published Publish with transaction \u00b6 \u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 CAP \u548c MongoDB \u8fdb\u884c\u672c\u5730\u4e8b\u52a1\u96c6\u6210\u3002 //NOTE: before your test, your need to create database and collection at first //\u6ce8\u610f\uff1aMongoDB \u4e0d\u80fd\u5728\u4e8b\u52a1\u4e2d\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5355\u72ec\u521b\u5efa\u5b83\u4eec\uff0c\u6a21\u62df\u4e00\u6761\u8bb0\u5f55\u63d2\u5165\u5219\u4f1a\u81ea\u52a8\u521b\u5efa //var mycollection = _client.GetDatabase(\"test\").GetCollection<BsonDocument>(\"test.collection\"); //mycollection.InsertOne(new BsonDocument { { \"test\", \"test\" } }); using ( var session = _client . StartTransaction ( _capBus , autoCommit : false )) { var collection = _client . GetDatabase ( \"test\" ). GetCollection < BsonDocument >( \"test.collection\" ); collection . InsertOne ( session , new BsonDocument { { \"hello\" , \"world\" } }); _capBus . Publish ( \"sample.rabbitmq.mongodb\" , DateTime . Now ); session . CommitTransaction (); }","title":"MongoDB"},{"location":"user-guide/en/persistent/mongodb/#mongodb","text":"MongoDB \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u9762\u5411\u6587\u6863\u578b\u7684\u6570\u636e\u5e93\u7a0b\u5e8f\uff0c\u5b83\u88ab\u5f52\u4e3a NOSQL \u6570\u636e\u5e93\uff0cCAP \u4ece 2.3 \u7248\u672c\u5f00\u59cb\u652f\u6301 MongoDB \u4f5c\u4e3a\u6d88\u606f\u5b58\u50a8\u3002 MongoDB \u4ece 4.0 \u7248\u672c\u5f00\u59cb\u652f\u6301 ACID \u4e8b\u52a1\uff0c\u6240\u4ee5 CAP \u4e5f\u53ea\u652f\u6301 4.0 \u4ee5\u4e0a\u7684 MongoDB\uff0c\u5e76\u4e14 MongoDB \u9700\u8981\u90e8\u7f72\u4e3a\u96c6\u7fa4\uff0c\u56e0\u4e3a MongoDB \u7684 ACID \u4e8b\u52a1\u9700\u8981\u96c6\u7fa4\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u6709\u5173\u5f00\u53d1\u73af\u5883\u5982\u4f55\u5feb\u901f\u642d\u5efa MongoDB 4.0+ \u96c6\u7fa4\uff0c\u4f60\u53ef\u4ee5\u6211\u7684\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u3002","title":"MongoDB"},{"location":"user-guide/en/persistent/mongodb/#_1","text":"\u8981\u4f7f\u7528 MongoDB \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MongoDB \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMongoDB ( opt =>{ //MongoDBOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/persistent/mongodb/#mongodboptions","text":"NAME DESCRIPTION TYPE DEFAULT DatabaseName \u6570\u636e\u5e93\u540d\u79f0 string cap DatabaseConnection \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string mongodb://localhost:27017 ReceivedCollection \u63a5\u6536\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.received PublishedCollection \u53d1\u9001\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.published","title":"MongoDBOptions"},{"location":"user-guide/en/persistent/mongodb/#publish-with-transaction","text":"\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 CAP \u548c MongoDB \u8fdb\u884c\u672c\u5730\u4e8b\u52a1\u96c6\u6210\u3002 //NOTE: before your test, your need to create database and collection at first //\u6ce8\u610f\uff1aMongoDB \u4e0d\u80fd\u5728\u4e8b\u52a1\u4e2d\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5355\u72ec\u521b\u5efa\u5b83\u4eec\uff0c\u6a21\u62df\u4e00\u6761\u8bb0\u5f55\u63d2\u5165\u5219\u4f1a\u81ea\u52a8\u521b\u5efa //var mycollection = _client.GetDatabase(\"test\").GetCollection<BsonDocument>(\"test.collection\"); //mycollection.InsertOne(new BsonDocument { { \"test\", \"test\" } }); using ( var session = _client . StartTransaction ( _capBus , autoCommit : false )) { var collection = _client . GetDatabase ( \"test\" ). GetCollection < BsonDocument >( \"test.collection\" ); collection . InsertOne ( session , new BsonDocument { { \"hello\" , \"world\" } }); _capBus . Publish ( \"sample.rabbitmq.mongodb\" , DateTime . Now ); session . CommitTransaction (); }","title":"Publish with transaction"},{"location":"user-guide/en/persistent/mysql/","text":"MySQL \u00b6 MySQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 MySQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 MySQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MySql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMySql ( opt =>{ //MySqlOptions }); // x.UseXXX ... }); } MySqlOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT TableNamePrefix Cap\u8868\u540d\u524d\u7f00 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string null Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new MySqlConnection ( AppDbContext . ConnectionString )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"MySQL"},{"location":"user-guide/en/persistent/mysql/#mysql","text":"MySQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 MySQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"MySQL"},{"location":"user-guide/en/persistent/mysql/#_1","text":"\u8981\u4f7f\u7528 MySQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MySql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMySql ( opt =>{ //MySqlOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/persistent/mysql/#mysqloptions","text":"NAME DESCRIPTION TYPE DEFAULT TableNamePrefix Cap\u8868\u540d\u524d\u7f00 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string null","title":"MySqlOptions"},{"location":"user-guide/en/persistent/mysql/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/en/persistent/mysql/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new MySqlConnection ( AppDbContext . ConnectionString )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/en/persistent/mysql/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/en/persistent/postgresql/","text":"Postgre SQL \u00b6 PostgreSQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5b83\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Postgre SQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 PostgreSQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.PostgreSql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //PostgreSqlOptions }); // x.UseXXX ... }); } PostgreSqlOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new NpgsqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"PostgreSql"},{"location":"user-guide/en/persistent/postgresql/#postgre-sql","text":"PostgreSQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5b83\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Postgre SQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"Postgre SQL"},{"location":"user-guide/en/persistent/postgresql/#_1","text":"\u8981\u4f7f\u7528 PostgreSQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.PostgreSql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //PostgreSqlOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/persistent/postgresql/#postgresqloptions","text":"NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string","title":"PostgreSqlOptions"},{"location":"user-guide/en/persistent/postgresql/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/en/persistent/postgresql/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new NpgsqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/en/persistent/postgresql/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/en/persistent/sqlserver/","text":"SQL Server \u00b6 SQL Server \u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SQL Server \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 SQL Server \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.SqlServer \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //SqlServerOptions }); // x.UseXXX ... }); } SqlServerOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string Cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new SqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"SQL Server"},{"location":"user-guide/en/persistent/sqlserver/#sql-server","text":"SQL Server \u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SQL Server \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"SQL Server"},{"location":"user-guide/en/persistent/sqlserver/#_1","text":"\u8981\u4f7f\u7528 SQL Server \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.SqlServer \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //SqlServerOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/persistent/sqlserver/#sqlserveroptions","text":"NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string Cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string","title":"SqlServerOptions"},{"location":"user-guide/en/persistent/sqlserver/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/en/persistent/sqlserver/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new SqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/en/persistent/sqlserver/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/en/samples/eshoponcontainers/","text":"eShopOnContainers \u00b6 eShopOnContainers is a sample application written in C# running on .NET Core using a microservice architecture, Domain Driven Design. .NET Core reference application, powered by Microsoft, based on a simplified microservices architecture and Docker containers. This reference application is cross-platform at the server and client side, thanks to .NET Core services capable of running on Linux or Windows containers depending on your Docker host, and to Xamarin for mobile apps running on Android, iOS or Windows/UWP plus any browser for the client web apps. The architecture proposes a microservice oriented architecture implementation with multiple autonomous microservices (each one owning its own data/db) and implementing different approaches within each microservice (simple CRUD vs. DDD/CQRS patterns) using Http as the communication protocol between the client apps and the microservices and supports asynchronous communication for data updates propagation across multiple services based on Integration Events and an Event Bus (a light message broker, to choose between RabbitMQ or Azure Service Bus, underneath) plus other features defined at the roadmap. eShopOnContainers with CAP \u00b6 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u770b\u5230\u5982\u4f55\u5728 eShopOnContainers \u4e2d\u4f7f\u7528 CAP\u3002 https://github.com/yang-xiaodong/eShopOnContainers","title":"eShopOnContainers"},{"location":"user-guide/en/samples/eshoponcontainers/#eshoponcontainers","text":"eShopOnContainers is a sample application written in C# running on .NET Core using a microservice architecture, Domain Driven Design. .NET Core reference application, powered by Microsoft, based on a simplified microservices architecture and Docker containers. This reference application is cross-platform at the server and client side, thanks to .NET Core services capable of running on Linux or Windows containers depending on your Docker host, and to Xamarin for mobile apps running on Android, iOS or Windows/UWP plus any browser for the client web apps. The architecture proposes a microservice oriented architecture implementation with multiple autonomous microservices (each one owning its own data/db) and implementing different approaches within each microservice (simple CRUD vs. DDD/CQRS patterns) using Http as the communication protocol between the client apps and the microservices and supports asynchronous communication for data updates propagation across multiple services based on Integration Events and an Event Bus (a light message broker, to choose between RabbitMQ or Azure Service Bus, underneath) plus other features defined at the roadmap.","title":"eShopOnContainers"},{"location":"user-guide/en/samples/eshoponcontainers/#eshoponcontainers-with-cap","text":"\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u770b\u5230\u5982\u4f55\u5728 eShopOnContainers \u4e2d\u4f7f\u7528 CAP\u3002 https://github.com/yang-xiaodong/eShopOnContainers","title":"eShopOnContainers with CAP"},{"location":"user-guide/en/samples/faq/","text":"FAQ \u00b6 Any IM group(e.g Tencent QQ group) to learn and chat about CAP? None for that. Better than wasting much time in IM group, I hope developers could be capable of independent thinking more, and solve problems yourselves with referenced documents, even create issues or send emails when errors are remaining present. Does it require certain different databases, one each for productor and resumer in CAP? Not requird differences necessary, a given advice is that using a special database for each program. Otherwise, look at Q&A below. How to use the same database for different applications? defining a prefix name of table in ConfigureServices method\u3002 codes exsample\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseKafka ( \"\" ); x . UseMySql ( opt => { opt . ConnectionString = \"connection string\" ; opt . TableNamePrefix = \"appone\" ; // different table name prefix here }); }); } Can CAP not use the database as event storage? I just want to sent the message Not yet. The purpose of CAP is that ensure consistency principle right in microservice or SOA architechtrues. The solution is based on ACID features of database, there is no sense about a single client wapper of message queue without database. If the consumer is abnormal, can I roll back the database executed sql that the producer has executed? Can't roll back, CAP is the ultimate consistency solution. You can imagine your scenario is to call a third party payment. If you are doing a third-party payment operation, after calling Alipay's interface successfully, and your own code is wrong, will Alipay roll back? If you don't roll back, what should you do? The same is true here.","title":"FAQ"},{"location":"user-guide/en/samples/faq/#faq","text":"Any IM group(e.g Tencent QQ group) to learn and chat about CAP? None for that. Better than wasting much time in IM group, I hope developers could be capable of independent thinking more, and solve problems yourselves with referenced documents, even create issues or send emails when errors are remaining present. Does it require certain different databases, one each for productor and resumer in CAP? Not requird differences necessary, a given advice is that using a special database for each program. Otherwise, look at Q&A below. How to use the same database for different applications? defining a prefix name of table in ConfigureServices method\u3002 codes exsample\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseKafka ( \"\" ); x . UseMySql ( opt => { opt . ConnectionString = \"connection string\" ; opt . TableNamePrefix = \"appone\" ; // different table name prefix here }); }); } Can CAP not use the database as event storage? I just want to sent the message Not yet. The purpose of CAP is that ensure consistency principle right in microservice or SOA architechtrues. The solution is based on ACID features of database, there is no sense about a single client wapper of message queue without database. If the consumer is abnormal, can I roll back the database executed sql that the producer has executed? Can't roll back, CAP is the ultimate consistency solution. You can imagine your scenario is to call a third party payment. If you are doing a third-party payment operation, after calling Alipay's interface successfully, and your own code is wrong, will Alipay roll back? If you don't roll back, what should you do? The same is true here.","title":"FAQ"},{"location":"user-guide/en/samples/github/","text":"Github \u4e0a\u7684\u793a\u4f8b \u00b6 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u627e\u5230\u76f8\u5173\u793a\u4f8b\u4ee3\u7801\uff1a https://github.com/dotnetcore/CAP/tree/master/samples","title":"Github"},{"location":"user-guide/en/samples/github/#github","text":"\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u627e\u5230\u76f8\u5173\u793a\u4f8b\u4ee3\u7801\uff1a https://github.com/dotnetcore/CAP/tree/master/samples","title":"Github \u4e0a\u7684\u793a\u4f8b"},{"location":"user-guide/en/transports/azure-service-bus/","text":"Azure Service Bus \u00b6 Azure \u670d\u52a1\u603b\u7ebf\u662f\u4e00\u79cd\u591a\u79df\u6237\u4e91\u6d88\u606f\u670d\u52a1\uff0c\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u4e4b\u95f4\u53d1\u9001\u4fe1\u606f\u3002 \u5f02\u6b65\u64cd\u4f5c\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u4e2d\u8f6c\u6d88\u606f\u4f20\u9001\u3001\u7ed3\u6784\u5316\u7684\u5148\u8fdb\u5148\u51fa (FIFO) \u6d88\u606f\u4f20\u9001\u4ee5\u53ca\u53d1\u5e03/\u8ba2\u9605\u529f\u80fd\u3002 CAP \u652f\u6301\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 Configuration \u00b6 \u5fc5\u8981\u6761\u4ef6 \u9488\u5bf9 Service Bus \u5b9a\u4ef7\u5c42, CAP \u8981\u6c42\u4f7f\u7528 \u201c\u6807\u51c6\u201d \u6216\u8005 \u201c\u9ad8\u7ea7\u201d \u4ee5\u652f\u6301 Topic \u529f\u80fd\u3002 \u8981\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.AzureServiceBus \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseAzureServiceBus ( opt => { //AzureServiceBusOptions }); // x.UseXXX ... }); } AzureServiceBus Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT ConnectionString Endpoint \u5730\u5740 string TopicPath Topic entity path string cap ManagementTokenProvider Token\u63d0\u4f9b ITokenProvider null","title":"Azure Service Bus"},{"location":"user-guide/en/transports/azure-service-bus/#azure-service-bus","text":"Azure \u670d\u52a1\u603b\u7ebf\u662f\u4e00\u79cd\u591a\u79df\u6237\u4e91\u6d88\u606f\u670d\u52a1\uff0c\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u4e4b\u95f4\u53d1\u9001\u4fe1\u606f\u3002 \u5f02\u6b65\u64cd\u4f5c\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u4e2d\u8f6c\u6d88\u606f\u4f20\u9001\u3001\u7ed3\u6784\u5316\u7684\u5148\u8fdb\u5148\u51fa (FIFO) \u6d88\u606f\u4f20\u9001\u4ee5\u53ca\u53d1\u5e03/\u8ba2\u9605\u529f\u80fd\u3002 CAP \u652f\u6301\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"Azure Service Bus"},{"location":"user-guide/en/transports/azure-service-bus/#configuration","text":"\u5fc5\u8981\u6761\u4ef6 \u9488\u5bf9 Service Bus \u5b9a\u4ef7\u5c42, CAP \u8981\u6c42\u4f7f\u7528 \u201c\u6807\u51c6\u201d \u6216\u8005 \u201c\u9ad8\u7ea7\u201d \u4ee5\u652f\u6301 Topic \u529f\u80fd\u3002 \u8981\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.AzureServiceBus \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseAzureServiceBus ( opt => { //AzureServiceBusOptions }); // x.UseXXX ... }); }","title":"Configuration"},{"location":"user-guide/en/transports/azure-service-bus/#azureservicebus-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT ConnectionString Endpoint \u5730\u5740 string TopicPath Topic entity path string cap ManagementTokenProvider Token\u63d0\u4f9b ITokenProvider null","title":"AzureServiceBus Options"},{"location":"user-guide/en/transports/general/","text":"Transports \u00b6 Transports move data from one place to another \u2013 between acquisition programs and pipelines, between pipelines and the entity database, and even between pipelines and external systems. Supported transports \u00b6 CAP supports several transport methods: RabbitMQ Kafka Azure Service Bus In-Memory Queue How to select a transport \u00b6 \ud83c\udff3\u200d\ud83c\udf08 RabbitMQ Kafka Azure Service Bus In-Memory \u5b9a\u4f4d \u53ef\u9760\u6d88\u606f\u4f20\u8f93 \u5b9e\u65f6\u6570\u636e\u5904\u7406 \u4e91 \u5185\u5b58\u578b\uff0c\u6d4b\u8bd5 \u5206\u5e03\u5f0f \u2714 \u2714 \u2714 \u274c \u6301\u4e45\u5316 \u2714 \u2714 \u2714 \u274c \u6027\u80fd Medium High Medium High Azure Service Bus vs RabbitMQ : http://geekswithblogs.net/michaelstephenson/archive/2012/08/12/150399.aspx Kafka vs RabbitMQ : https://stackoverflow.com/questions/42151544/is-there-any-reason-to-use-rabbitmq-over-kafka","title":"General"},{"location":"user-guide/en/transports/general/#transports","text":"Transports move data from one place to another \u2013 between acquisition programs and pipelines, between pipelines and the entity database, and even between pipelines and external systems.","title":"Transports"},{"location":"user-guide/en/transports/general/#supported-transports","text":"CAP supports several transport methods: RabbitMQ Kafka Azure Service Bus In-Memory Queue","title":"Supported transports"},{"location":"user-guide/en/transports/general/#how-to-select-a-transport","text":"\ud83c\udff3\u200d\ud83c\udf08 RabbitMQ Kafka Azure Service Bus In-Memory \u5b9a\u4f4d \u53ef\u9760\u6d88\u606f\u4f20\u8f93 \u5b9e\u65f6\u6570\u636e\u5904\u7406 \u4e91 \u5185\u5b58\u578b\uff0c\u6d4b\u8bd5 \u5206\u5e03\u5f0f \u2714 \u2714 \u2714 \u274c \u6301\u4e45\u5316 \u2714 \u2714 \u2714 \u274c \u6027\u80fd Medium High Medium High Azure Service Bus vs RabbitMQ : http://geekswithblogs.net/michaelstephenson/archive/2012/08/12/150399.aspx Kafka vs RabbitMQ : https://stackoverflow.com/questions/42151544/is-there-any-reason-to-use-rabbitmq-over-kafka","title":"How to select a transport"},{"location":"user-guide/en/transports/in-memory-queue/","text":"In-Memory Queue \u00b6 In Memory Queue \u4e3a\u57fa\u4e8e\u5185\u5b58\u7684\u6d88\u606f\u961f\u5217\uff0c\u8be5\u6269\u5c55\u7531 \u793e\u533a \u8fdb\u884c\u63d0\u4f9b\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 In Memory Queue \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package Savorboard.CAP.InMemoryMessageQueue \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryMessageQueue (); // x.UseXXX ... }); }","title":"In-Memory Queue"},{"location":"user-guide/en/transports/in-memory-queue/#in-memory-queue","text":"In Memory Queue \u4e3a\u57fa\u4e8e\u5185\u5b58\u7684\u6d88\u606f\u961f\u5217\uff0c\u8be5\u6269\u5c55\u7531 \u793e\u533a \u8fdb\u884c\u63d0\u4f9b\u3002","title":"In-Memory Queue"},{"location":"user-guide/en/transports/in-memory-queue/#_1","text":"\u8981\u4f7f\u7528 In Memory Queue \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package Savorboard.CAP.InMemoryMessageQueue \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryMessageQueue (); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/transports/kafka/","text":"Apache Kafka\u00ae \u00b6 Apache Kafka\u00ae \u662f\u4e00\u4e2a\u5f00\u6e90\u6d41\u5904\u7406\u8f6f\u4ef6\u5e73\u53f0\uff0c\u7531 LinkedIn \u5f00\u53d1\u5e76\u6350\u8d60\u7ed9 Apache Software Foundation\uff0c\u7528 Scala \u548c Java \u7f16\u5199\u3002 CAP \u652f\u6301\u4f7f\u7528 Apache Kafka\u00ae \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 Configuration \u00b6 \u8981\u4f7f\u7528 Kafka \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.Kafka \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseKafka ( opt =>{ //KafkaOptions }); // x.UseXXX ... }); } Kafka Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT Servers Broker \u5730\u5740 string ConnectionPoolSize \u7528\u6237\u540d int 10 Kafka MainConfig Options \u00b6 \u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f Kakfa \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 MainConfig \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( capOptions => { capOptions . UseKafka ( kafkaOption => { // kafka options. // kafkaOptions.MainConfig.Add(\"\", \"\"); }); }); MainConfig \u4e3a\u914d\u7f6e\u5b57\u5178\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u94fe\u63a5\u627e\u5230\u5176\u652f\u6301\u7684\u914d\u7f6e\u9879\u5217\u8868\u3002 https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md","title":"Apache Kafka\u00ae"},{"location":"user-guide/en/transports/kafka/#apache-kafka","text":"Apache Kafka\u00ae \u662f\u4e00\u4e2a\u5f00\u6e90\u6d41\u5904\u7406\u8f6f\u4ef6\u5e73\u53f0\uff0c\u7531 LinkedIn \u5f00\u53d1\u5e76\u6350\u8d60\u7ed9 Apache Software Foundation\uff0c\u7528 Scala \u548c Java \u7f16\u5199\u3002 CAP \u652f\u6301\u4f7f\u7528 Apache Kafka\u00ae \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"Apache Kafka\u00ae"},{"location":"user-guide/en/transports/kafka/#configuration","text":"\u8981\u4f7f\u7528 Kafka \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.Kafka \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseKafka ( opt =>{ //KafkaOptions }); // x.UseXXX ... }); }","title":"Configuration"},{"location":"user-guide/en/transports/kafka/#kafka-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT Servers Broker \u5730\u5740 string ConnectionPoolSize \u7528\u6237\u540d int 10","title":"Kafka Options"},{"location":"user-guide/en/transports/kafka/#kafka-mainconfig-options","text":"\u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f Kakfa \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 MainConfig \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( capOptions => { capOptions . UseKafka ( kafkaOption => { // kafka options. // kafkaOptions.MainConfig.Add(\"\", \"\"); }); }); MainConfig \u4e3a\u914d\u7f6e\u5b57\u5178\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u94fe\u63a5\u627e\u5230\u5176\u652f\u6301\u7684\u914d\u7f6e\u9879\u5217\u8868\u3002 https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md","title":"Kafka MainConfig Options"},{"location":"user-guide/en/transports/rabbitmq/","text":"RabbitMQ \u00b6 RabbitMQ\u662f\u5b9e\u73b0\u4e86\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff08AMQP\uff09\u7684\u5f00\u6e90\u6d88\u606f\u4ee3\u7406\u8f6f\u4ef6\uff08\u4ea6\u79f0\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\uff09\u3002RabbitMQ \u670d\u52a1\u5668\u662f\u7528 Erlang \u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u805a\u7c7b\u548c\u6545\u969c\u8f6c\u79fb\u662f\u6784\u5efa\u5728\u5f00\u6e90\u7684\u901a\u8baf\u5e73\u53f0\u6846\u67b6\u4e0a\u7684\u3002\u6240\u6709\u4e3b\u8981\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u6709\u4e0e\u4ee3\u7406\u63a5\u53e3\u901a\u8baf\u7684\u5ba2\u6237\u7aef\u5e93\u3002 CAP \u652f\u6301\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.RabbitMQ \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseRabbitMQ ( opt => { //RabbitMQOptions }); // x.UseXXX ... }); } RabbitMQ Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 RabbitMQ \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT HostName \u5bbf\u4e3b\u5730\u5740 string localhost UserName \u7528\u6237\u540d string guest Password \u5bc6\u7801 string guest VirtualHost \u865a\u62df\u4e3b\u673a string / Port \u7aef\u53e3\u53f7 int -1 TopicExchangeName CAP\u9ed8\u8ba4Exchange\u540d\u79f0 string cap.default.topic QueueMessageExpires \u961f\u5217\u4e2d\u6d88\u606f\u81ea\u52a8\u5220\u9664\u65f6\u95f4 int (10\u5929) \u6beb\u79d2 ConnectionFactory Options \u00b6 \u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f ConnectionFactory \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 ConnectionFactoryOptions \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( x => { x . UseRabbitMQ ( o => { o . HostName = \"localhost\" ; o . ConnectionFactoryOptions = opt => { //rabbitmq client ConnectionFactory config }; }); });","title":"RabbitMQ"},{"location":"user-guide/en/transports/rabbitmq/#rabbitmq","text":"RabbitMQ\u662f\u5b9e\u73b0\u4e86\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff08AMQP\uff09\u7684\u5f00\u6e90\u6d88\u606f\u4ee3\u7406\u8f6f\u4ef6\uff08\u4ea6\u79f0\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\uff09\u3002RabbitMQ \u670d\u52a1\u5668\u662f\u7528 Erlang \u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u805a\u7c7b\u548c\u6545\u969c\u8f6c\u79fb\u662f\u6784\u5efa\u5728\u5f00\u6e90\u7684\u901a\u8baf\u5e73\u53f0\u6846\u67b6\u4e0a\u7684\u3002\u6240\u6709\u4e3b\u8981\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u6709\u4e0e\u4ee3\u7406\u63a5\u53e3\u901a\u8baf\u7684\u5ba2\u6237\u7aef\u5e93\u3002 CAP \u652f\u6301\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"RabbitMQ"},{"location":"user-guide/en/transports/rabbitmq/#_1","text":"\u8981\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.RabbitMQ \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseRabbitMQ ( opt => { //RabbitMQOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/en/transports/rabbitmq/#rabbitmq-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 RabbitMQ \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT HostName \u5bbf\u4e3b\u5730\u5740 string localhost UserName \u7528\u6237\u540d string guest Password \u5bc6\u7801 string guest VirtualHost \u865a\u62df\u4e3b\u673a string / Port \u7aef\u53e3\u53f7 int -1 TopicExchangeName CAP\u9ed8\u8ba4Exchange\u540d\u79f0 string cap.default.topic QueueMessageExpires \u961f\u5217\u4e2d\u6d88\u606f\u81ea\u52a8\u5220\u9664\u65f6\u95f4 int (10\u5929) \u6beb\u79d2","title":"RabbitMQ Options"},{"location":"user-guide/en/transports/rabbitmq/#connectionfactory-options","text":"\u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f ConnectionFactory \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 ConnectionFactoryOptions \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( x => { x . UseRabbitMQ ( o => { o . HostName = \"localhost\" ; o . ConnectionFactoryOptions = opt => { //rabbitmq client ConnectionFactory config }; }); });","title":"ConnectionFactory Options"},{"location":"user-guide/zh/cap/configuration/","text":"\u914d\u7f6e \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u5728\u5411IoC\u5bb9\u5668\u4e2d\u6ce8\u518cCAP\u670d\u52a1\u7684\u65f6\u5019\u6307\u5b9a\u914d\u7f6e\u3002 services . AddCap ( config => { // config.XXX }); \u5176\u4e2d services \u4ee3\u8868\u7684\u662f IServiceCollection \u63a5\u53e3\u5bf9\u8c61\uff0c\u5b83\u4f4d\u4e8e Microsoft.Extensions.DependencyInjection \u4e0b\u9762\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u5fae\u8f6f\u7684IoC\u5bb9\u5668\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u67e5\u770b ASP.NET Core \u8fd9\u91cc\u7684\u6587\u6863 \u6765\u4e86\u89e3\u5982\u4f55\u66ff\u6362\u9ed8\u8ba4\u7684\u5bb9\u5668\u5b9e\u73b0\u3002 \u4ec0\u4e48\u662f\u6700\u4f4e\u914d\u7f6e\uff1f \u00b6 \u6700\u7b80\u5355\u7684\u56de\u7b54\u5c31\u662f\uff0c\u81f3\u5c11\u4f60\u8981\u914d\u7f6e\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u548c\u4e00\u4e2a\u4e8b\u4ef6\u5b58\u50a8\uff0c\u5982\u679c\u4f60\u60f3\u5feb\u901f\u5f00\u59cb\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\uff1a services . AddCap ( config => { config . UseInMemoryQueue (); config . UseInmemoryStorage (); }); \u6709\u5173\u5177\u4f53\u7684\u6d88\u606f\u961f\u5217\u7684\u914d\u7f6e\u548c\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u548c Persistent \u7ae0\u8282\u4e2d\u5177\u4f53\u7ec4\u4ef6\u63d0\u4f9b\u7684\u914d\u7f6e\u9879\u3002 CAP \u4e2d\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e \u00b6 \u5728 AddCap \u4e2d CapOptions \u5bf9\u8c61\u662f\u7528\u6765\u5b58\u50a8\u914d\u7f6e\u76f8\u5173\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u5177\u6709\u4e00\u4e9b\u9ed8\u8ba4\u503c\uff0c\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u3002 DefaultGroup \u00b6 \u9ed8\u8ba4\u503c\uff1acap.queue.{\u7a0b\u5e8f\u96c6\u540d\u79f0} \u9ed8\u8ba4\u7684\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u5b57\uff0c\u5728\u4e0d\u540c\u7684 Transports \u4e2d\u5bf9\u5e94\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u6b64\u503c\u6765\u81ea\u5b9a\u4e49\u4e0d\u540c Transports \u4e2d\u7684\u540d\u5b57\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u770b\u3002 \u5728 RabbitMQ \u4e2d\u6620\u5c04\u5230 Queue Names \u3002 \u5728 Apache Kafka \u4e2d\u6620\u5c04\u5230 Topic Name\u3002 \u5728 Azure Service Bus \u4e2d\u6620\u5c04\u5230 Subscription Name\u3002 Version \u00b6 \u9ed8\u8ba4\u503c\uff1av1 \u8fd9\u662f\u5728CAP v2.4 \u7248\u672c\u4e2d\u5f15\u5165\u7684\u65b0\u914d\u7f6e\u9879\uff0c\u7528\u4e8e\u7ed9\u6d88\u606f\u6307\u5b9a\u7248\u672c\u6765\u9694\u79bb\u4e0d\u540c\u7248\u672c\u670d\u52a1\u7684\u6d88\u606f\uff0c\u5e38\u7528\u4e8eA/B\u6d4b\u8bd5\u6216\u8005\u591a\u670d\u52a1\u7248\u672c\u7684\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u5176\u5e94\u7528\u573a\u666f\uff1a \u4e1a\u52a1\u5feb\u901f\u8fed\u4ee3\uff0c\u9700\u8981\u5411\u524d\u517c\u5bb9 \u7531\u4e8e\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\uff0c\u5728\u5404\u4e2a\u670d\u52a1\u96c6\u6210\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4e3a\u4e86\u9002\u5e94\u65b0\u5f15\u5165\u7684\u9700\u6c42\uff0c\u4f1a\u6dfb\u52a0\u6216\u8005\u4fee\u6539\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u4f60\u662f\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8fd9\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e86\u5e76\u4e14\u6b63\u5728\u670d\u52a1\u5ba2\u6237\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u529f\u80fd\u5728\u4e0a\u7ebf\u7684\u65f6\u5019\u548c\u65e7\u7684\u6570\u636e\u7ed3\u6784\u53d1\u751f\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6539\u53d8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u80fd\u628a\u6d88\u606f\u961f\u5217\u548c\u6301\u4e45\u5316\u7684\u6d88\u606f\u5168\u90e8\u6e05\u7a7a\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u663e\u7136\u662f\u81f4\u547d\u7684\u3002 \u591a\u4e2a\u7248\u672c\u7684\u670d\u52a1\u7aef \u6709\u4e9b\u65f6\u5019\uff0cApp\u7684\u670d\u52a1\u7aef\u9700\u8981\u63d0\u4f9b\u591a\u5957\u63a5\u53e3\uff0c\u6765\u652f\u6301\u4e0d\u540c\u7248\u672c\u7684App\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7248\u672c\u7684App\u76f8\u540c\u7684\u63a5\u53e3\u548c\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u670d\u52a1\u7aef\u63d0\u4f9b\u4e0d\u7528\u7684\u8def\u7531\u5730\u5740\u6765\u9002\u914d\u4e0d\u540c\u7248\u672c\u7684App\u8c03\u7528\u3002 \u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6301\u4e45\u5316\u8868/\u96c6\u5408 \u5e0c\u671b\u591a\u4e2a\u4e0d\u540c\u5b9e\u4f8b\u7684\u7a0b\u5e8f\u53ef\u4ee5\u516c\u7528\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u5728 2.4 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u8868\u540d\u6765\u9694\u79bb\u4e0d\u540c\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u8868\uff0c\u5373\u5728CAP\u914d\u7f6e\u7684\u65f6\u5019\u901a\u8fc7\u914d\u7f6e\u4e0d\u540c\u7684\u8868\u540d\u524d\u7f00\u6765\u5b9e\u73b0\u3002 \u67e5\u770b\u535a\u5ba2\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Version \u7684\u4fe1\u606f\uff1a https://www.cnblogs.com/savorboard/p/cap-2-4.html FailedRetryInterval \u00b6 \u9ed8\u8ba4\u503c\uff1a60 \u79d2 \u5728\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u5728\u6d88\u606f\u6d88\u8d39\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6d88\u8d39\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u6d88\u8d39\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u91cd\u8bd5 & \u95f4\u9694 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91cd\u8bd5\u5c06\u5728\u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u5931\u8d25\u7684 4\u5206\u949f\u540e \u5f00\u59cb\uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u8bbe\u7f6e\u6d88\u606f\u72b6\u6001\u5ef6\u8fdf\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u3002 \u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u7684\u8fc7\u7a0b\u4e2d\u5931\u8d25\u4f1a\u7acb\u5373\u91cd\u8bd5 3 \u6b21\uff0c\u5728 3 \u6b21\u4ee5\u540e\u5c06\u8fdb\u5165\u91cd\u8bd5\u8f6e\u8be2\uff0c\u6b64\u65f6 FailedRetryInterval \u914d\u7f6e\u624d\u4f1a\u751f\u6548\u3002 FailedRetryCount \u00b6 \u9ed8\u8ba4\u503c\uff1a50 \u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u8fbe\u5230\u6b64\u8bbe\u7f6e\u503c\u65f6\uff0c\u5c06\u4e0d\u4f1a\u518d\u7ee7\u7eed\u91cd\u8bd5\uff0c\u901a\u8fc7\u6539\u53d8\u6b64\u53c2\u6570\u6765\u8bbe\u7f6e\u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002 FailedThresholdCallback \u00b6 \u9ed8\u8ba4\u503c\uff1aNULL \u7c7b\u578b\uff1a Action<MessageType, string, string> T1 : Message Type T2 : Message Name T3 : Message Content \u91cd\u8bd5\u9608\u503c\u7684\u5931\u8d25\u56de\u8c03\u3002\u5f53\u91cd\u8bd5\u8fbe\u5230 FailedRetryCount \u8bbe\u7f6e\u7684\u503c\u7684\u65f6\u5019\uff0c\u5c06\u8c03\u7528\u6b64 Action \u56de\u8c03\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u56de\u8c03\u6765\u63a5\u6536\u5931\u8d25\u8fbe\u5230\u6700\u5927\u7684\u901a\u77e5\uff0c\u4ee5\u505a\u51fa\u4eba\u5de5\u4ecb\u5165\u3002\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u6216\u8005\u77ed\u4fe1\u3002 SucceedMessageExpiredAfter \u00b6 \u9ed8\u8ba4\u503c\uff1a24*3600 \u79d2\uff081\u5929\u540e\uff09 \u6210\u529f\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff08\u79d2\uff09\u3002 \u5f53\u6d88\u606f\u53d1\u9001\u6216\u8005\u6d88\u8d39\u6210\u529f\u65f6\u5019\uff0c\u5728\u65f6\u95f4\u8fbe\u5230 SucceedMessageExpiredAfter \u79d2\u65f6\u5019\u5c06\u4f1a\u4ece Persistent \u4e2d\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u503c\u6765\u8bbe\u7f6e\u8fc7\u671f\u7684\u65f6\u95f4\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/zh/cap/configuration/#_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u5728\u5411IoC\u5bb9\u5668\u4e2d\u6ce8\u518cCAP\u670d\u52a1\u7684\u65f6\u5019\u6307\u5b9a\u914d\u7f6e\u3002 services . AddCap ( config => { // config.XXX }); \u5176\u4e2d services \u4ee3\u8868\u7684\u662f IServiceCollection \u63a5\u53e3\u5bf9\u8c61\uff0c\u5b83\u4f4d\u4e8e Microsoft.Extensions.DependencyInjection \u4e0b\u9762\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u5fae\u8f6f\u7684IoC\u5bb9\u5668\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u67e5\u770b ASP.NET Core \u8fd9\u91cc\u7684\u6587\u6863 \u6765\u4e86\u89e3\u5982\u4f55\u66ff\u6362\u9ed8\u8ba4\u7684\u5bb9\u5668\u5b9e\u73b0\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/zh/cap/configuration/#_2","text":"\u6700\u7b80\u5355\u7684\u56de\u7b54\u5c31\u662f\uff0c\u81f3\u5c11\u4f60\u8981\u914d\u7f6e\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u548c\u4e00\u4e2a\u4e8b\u4ef6\u5b58\u50a8\uff0c\u5982\u679c\u4f60\u60f3\u5feb\u901f\u5f00\u59cb\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u914d\u7f6e\uff1a services . AddCap ( config => { config . UseInMemoryQueue (); config . UseInmemoryStorage (); }); \u6709\u5173\u5177\u4f53\u7684\u6d88\u606f\u961f\u5217\u7684\u914d\u7f6e\u548c\u5b58\u50a8\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u548c Persistent \u7ae0\u8282\u4e2d\u5177\u4f53\u7ec4\u4ef6\u63d0\u4f9b\u7684\u914d\u7f6e\u9879\u3002","title":"\u4ec0\u4e48\u662f\u6700\u4f4e\u914d\u7f6e\uff1f"},{"location":"user-guide/zh/cap/configuration/#cap","text":"\u5728 AddCap \u4e2d CapOptions \u5bf9\u8c61\u662f\u7528\u6765\u5b58\u50a8\u914d\u7f6e\u76f8\u5173\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4eec\u90fd\u5177\u6709\u4e00\u4e9b\u9ed8\u8ba4\u503c\uff0c\u6709\u4e9b\u65f6\u5019\u4f60\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u3002","title":"CAP \u4e2d\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e"},{"location":"user-guide/zh/cap/configuration/#defaultgroup","text":"\u9ed8\u8ba4\u503c\uff1acap.queue.{\u7a0b\u5e8f\u96c6\u540d\u79f0} \u9ed8\u8ba4\u7684\u6d88\u8d39\u8005\u7ec4\u7684\u540d\u5b57\uff0c\u5728\u4e0d\u540c\u7684 Transports \u4e2d\u5bf9\u5e94\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u6b64\u503c\u6765\u81ea\u5b9a\u4e49\u4e0d\u540c Transports \u4e2d\u7684\u540d\u5b57\uff0c\u4ee5\u4fbf\u4e8e\u67e5\u770b\u3002 \u5728 RabbitMQ \u4e2d\u6620\u5c04\u5230 Queue Names \u3002 \u5728 Apache Kafka \u4e2d\u6620\u5c04\u5230 Topic Name\u3002 \u5728 Azure Service Bus \u4e2d\u6620\u5c04\u5230 Subscription Name\u3002","title":"DefaultGroup"},{"location":"user-guide/zh/cap/configuration/#version","text":"\u9ed8\u8ba4\u503c\uff1av1 \u8fd9\u662f\u5728CAP v2.4 \u7248\u672c\u4e2d\u5f15\u5165\u7684\u65b0\u914d\u7f6e\u9879\uff0c\u7528\u4e8e\u7ed9\u6d88\u606f\u6307\u5b9a\u7248\u672c\u6765\u9694\u79bb\u4e0d\u540c\u7248\u672c\u670d\u52a1\u7684\u6d88\u606f\uff0c\u5e38\u7528\u4e8eA/B\u6d4b\u8bd5\u6216\u8005\u591a\u670d\u52a1\u7248\u672c\u7684\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u5176\u5e94\u7528\u573a\u666f\uff1a \u4e1a\u52a1\u5feb\u901f\u8fed\u4ee3\uff0c\u9700\u8981\u5411\u524d\u517c\u5bb9 \u7531\u4e8e\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\uff0c\u5728\u5404\u4e2a\u670d\u52a1\u96c6\u6210\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u7684\u6570\u636e\u7ed3\u6784\u5e76\u4e0d\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6709\u4e9b\u65f6\u5019\u6211\u4eec\u4e3a\u4e86\u9002\u5e94\u65b0\u5f15\u5165\u7684\u9700\u6c42\uff0c\u4f1a\u6dfb\u52a0\u6216\u8005\u4fee\u6539\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3002\u5982\u679c\u4f60\u662f\u4e00\u5957\u5168\u65b0\u7684\u7cfb\u7edf\u8fd9\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e86\u5e76\u4e14\u6b63\u5728\u670d\u52a1\u5ba2\u6237\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u65b0\u7684\u529f\u80fd\u5728\u4e0a\u7ebf\u7684\u65f6\u5019\u548c\u65e7\u7684\u6570\u636e\u7ed3\u6784\u53d1\u751f\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6539\u53d8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u80fd\u628a\u6d88\u606f\u961f\u5217\u548c\u6301\u4e45\u5316\u7684\u6d88\u606f\u5168\u90e8\u6e05\u7a7a\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u5bf9\u4e8e\u751f\u4ea7\u73af\u5883\u6765\u8bf4\u663e\u7136\u662f\u81f4\u547d\u7684\u3002 \u591a\u4e2a\u7248\u672c\u7684\u670d\u52a1\u7aef \u6709\u4e9b\u65f6\u5019\uff0cApp\u7684\u670d\u52a1\u7aef\u9700\u8981\u63d0\u4f9b\u591a\u5957\u63a5\u53e3\uff0c\u6765\u652f\u6301\u4e0d\u540c\u7248\u672c\u7684App\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7248\u672c\u7684App\u76f8\u540c\u7684\u63a5\u53e3\u548c\u670d\u52a1\u7aef\u4ea4\u4e92\u7684\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u60c5\u51b5\u4e0b\u670d\u52a1\u7aef\u63d0\u4f9b\u4e0d\u7528\u7684\u8def\u7531\u5730\u5740\u6765\u9002\u914d\u4e0d\u540c\u7248\u672c\u7684App\u8c03\u7528\u3002 \u4e0d\u540c\u5b9e\u4f8b\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u6301\u4e45\u5316\u8868/\u96c6\u5408 \u5e0c\u671b\u591a\u4e2a\u4e0d\u540c\u5b9e\u4f8b\u7684\u7a0b\u5e8f\u53ef\u4ee5\u516c\u7528\u76f8\u540c\u7684\u6570\u636e\u5e93\uff0c\u5728 2.4 \u4e4b\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684\u8868\u540d\u6765\u9694\u79bb\u4e0d\u540c\u5b9e\u4f8b\u7684\u6570\u636e\u5e93\u8868\uff0c\u5373\u5728CAP\u914d\u7f6e\u7684\u65f6\u5019\u901a\u8fc7\u914d\u7f6e\u4e0d\u540c\u7684\u8868\u540d\u524d\u7f00\u6765\u5b9e\u73b0\u3002 \u67e5\u770b\u535a\u5ba2\u6765\u4e86\u89e3\u66f4\u591a\u5173\u4e8e Version \u7684\u4fe1\u606f\uff1a https://www.cnblogs.com/savorboard/p/cap-2-4.html","title":"Version"},{"location":"user-guide/zh/cap/configuration/#failedretryinterval","text":"\u9ed8\u8ba4\u503c\uff1a60 \u79d2 \u5728\u6d88\u606f\u53d1\u9001\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u5728\u6d88\u606f\u6d88\u8d39\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6d88\u8d39\u5931\u8d25\uff0cCAP\u5c06\u4f1a\u5bf9\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u6d88\u8d39\uff0c\u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u6bcf\u6b21\u91cd\u8bd5\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u91cd\u8bd5 & \u95f4\u9694 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91cd\u8bd5\u5c06\u5728\u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u5931\u8d25\u7684 4\u5206\u949f\u540e \u5f00\u59cb\uff0c\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u8bbe\u7f6e\u6d88\u606f\u72b6\u6001\u5ef6\u8fdf\u5bfc\u81f4\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u3002 \u53d1\u9001\u548c\u6d88\u8d39\u6d88\u606f\u7684\u8fc7\u7a0b\u4e2d\u5931\u8d25\u4f1a\u7acb\u5373\u91cd\u8bd5 3 \u6b21\uff0c\u5728 3 \u6b21\u4ee5\u540e\u5c06\u8fdb\u5165\u91cd\u8bd5\u8f6e\u8be2\uff0c\u6b64\u65f6 FailedRetryInterval \u914d\u7f6e\u624d\u4f1a\u751f\u6548\u3002","title":"FailedRetryInterval"},{"location":"user-guide/zh/cap/configuration/#failedretrycount","text":"\u9ed8\u8ba4\u503c\uff1a50 \u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002\u5f53\u8fbe\u5230\u6b64\u8bbe\u7f6e\u503c\u65f6\uff0c\u5c06\u4e0d\u4f1a\u518d\u7ee7\u7eed\u91cd\u8bd5\uff0c\u901a\u8fc7\u6539\u53d8\u6b64\u53c2\u6570\u6765\u8bbe\u7f6e\u91cd\u8bd5\u7684\u6700\u5927\u6b21\u6570\u3002","title":"FailedRetryCount"},{"location":"user-guide/zh/cap/configuration/#failedthresholdcallback","text":"\u9ed8\u8ba4\u503c\uff1aNULL \u7c7b\u578b\uff1a Action<MessageType, string, string> T1 : Message Type T2 : Message Name T3 : Message Content \u91cd\u8bd5\u9608\u503c\u7684\u5931\u8d25\u56de\u8c03\u3002\u5f53\u91cd\u8bd5\u8fbe\u5230 FailedRetryCount \u8bbe\u7f6e\u7684\u503c\u7684\u65f6\u5019\uff0c\u5c06\u8c03\u7528\u6b64 Action \u56de\u8c03\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u56de\u8c03\u6765\u63a5\u6536\u5931\u8d25\u8fbe\u5230\u6700\u5927\u7684\u901a\u77e5\uff0c\u4ee5\u505a\u51fa\u4eba\u5de5\u4ecb\u5165\u3002\u4f8b\u5982\u53d1\u9001\u90ae\u4ef6\u6216\u8005\u77ed\u4fe1\u3002","title":"FailedThresholdCallback"},{"location":"user-guide/zh/cap/configuration/#succeedmessageexpiredafter","text":"\u9ed8\u8ba4\u503c\uff1a24*3600 \u79d2\uff081\u5929\u540e\uff09 \u6210\u529f\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff08\u79d2\uff09\u3002 \u5f53\u6d88\u606f\u53d1\u9001\u6216\u8005\u6d88\u8d39\u6210\u529f\u65f6\u5019\uff0c\u5728\u65f6\u95f4\u8fbe\u5230 SucceedMessageExpiredAfter \u79d2\u65f6\u5019\u5c06\u4f1a\u4ece Persistent \u4e2d\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u6b64\u503c\u6765\u8bbe\u7f6e\u8fc7\u671f\u7684\u65f6\u95f4\u3002","title":"SucceedMessageExpiredAfter"},{"location":"user-guide/zh/cap/idempotence/","text":"Idempotence \u00b6 \u5e42\u7b49\u6027\uff08\u4f60\u53ef\u4ee5\u5728 Wikipedia \u8bfb\u5230\u5173\u4e8e\u5e42\u7b49\u6027\u7684\u5b9a\u4e49\uff09\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5e42\u7b49\u65f6\uff0c\u4e00\u822c\u662f\u6307\u53ef\u4ee5\u91cd\u590d\u5904\u7406\u4f20\u6bd2\u7684\u6d88\u606f\uff0c\u800c\u4e0d\u662f\u4ea7\u751f\u610f\u5916\u7684\u7ed3\u679c\u3002 \u4ea4\u4ed8\u4fdd\u8bc1 \u00b6 \u5728\u8bf4\u5e42\u7b49\u6027\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8bf4\u4e0b\u5173\u4e8e\u6d88\u8d39\u7aef\u7684\u6d88\u606f\u4ea4\u4ed8\u3002 \u7531\u4e8eCAP\u4e0d\u662f\u4f7f\u7528\u7684 MS DTC \u6216\u5176\u4ed6\u7c7b\u578b\u76842PC\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\uff0c\u6240\u4ee5\u5b58\u5728\u81f3\u5c11\u6d88\u606f\u4e25\u683c\u4ea4\u4ed8\u4e00\u6b21\u7684\u95ee\u9898\uff0c\u5177\u4f53\u7684\u8bf4\u5728\u57fa\u4e8e\u6d88\u606f\u7684\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e00\u4e0b\u4e09\u79cd\u53ef\u80fd\uff1a Exactly Once(*) \uff08\u4ec5\u6709\u4e00\u6b21\uff09 At Most Once \uff08\u6700\u591a\u4e00\u6b21\uff09 At Least Once \uff08\u6700\u5c11\u4e00\u6b21\uff09 \u5e26 * \u53f7\u8868\u793a\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u3002 At Most Once \u00b6 \u6700\u591a\u4e00\u6b21\u4ea4\u4ed8\u4fdd\u8bc1\uff0c\u6db5\u76d6\u4e86\u4fdd\u8bc1\u4e00\u6b21\u6216\u6839\u672c\u4e0d\u63a5\u6536\u6240\u6709\u6d88\u606f\u7684\u60c5\u51b5\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u4f20\u9012\u4fdd\u8bc1\u53ef\u80fd\u6765\u81ea\u4f60\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u4f60\u7684\u4ee3\u7801\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\u5176\u64cd\u4f5c\uff1a 1. \u4ece\u961f\u5217\u79fb\u9664\u6d88\u606f 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u5c06\u6d88\u606f\u53d1\u56de\u5230\u961f\u5217\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u5de5\u4f5c\u4e8b\u52a1\u5c06\u88ab\u63d0\u4ea4\u3002 \u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\u5e76\u4e0d\u80fd\u603b\u662f\u6210\u529f\uff0c\u6bd4\u5982\u5728 1 \u4e4b\u540e\u51fa\u73b0\u5f02\u5e38\uff0c\u6216\u8005\u662f\u4f60\u5728\u5c06\u6d88\u606f\u653e\u56de\u5230\u961f\u5217\u4e2d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u7531\u6216\u8005\u5b95\u673a\u91cd\u542f\u7b49\u60c5\u51b5\u3002 \u4f7f\u7528\u8fd9\u4e2a\u534f\u8bae\uff0c\u4f60\u5c06\u5192\u7740\u4e22\u5931\u6d88\u606f\u7684\u98ce\u9669\uff0c\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u5c31\u6ca1\u6709\u5173\u7cfb\u3002 At Least Once \u00b6 \u8fd9\u4e2a\u4ea4\u4ed8\u4fdd\u8bc1\u5305\u542b\u4f60\u6536\u5230\u81f3\u5c11\u4e00\u6b21\u7684\u6d88\u606f\uff0c\u5f53\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u53ef\u80fd\u4f1a\u6536\u5230\u591a\u6b21\u6d88\u606f\u3002 \u5b83\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u6211\u4eec\u6267\u884c\u6b65\u9aa4\u7684\u987a\u5e8f\uff0c\u5b83\u8981\u6c42\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u652f\u6301\u4e8b\u52a1\u6216ACK\u673a\u5236\uff0c\u6bd4\u5982\u4f20\u7edf\u7684 begin-commit-rollback \u534f\u8bae\uff08MSMQ\u662f\u8fd9\u6837\uff09\uff0c\u6216\u8005\u662f receive-ack-nack \u534f\u8bae\uff08RabbitMQ\uff0cAzure Service Bus\u7b49\u662f\u8fd9\u6837\u7684\uff09\u3002 \u5927\u81f4\u6b65\u9aa4\u5982\u4e0b: 1. \u62a2\u5360\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u5220\u9664\u6d88\u606f No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u91ca\u653e\u62a2\u5360\u7684\u6d88\u606f \u5f53\u51fa\u73b0\u5931\u8d25\u6216\u8005\u62a2\u5360\u6d88\u606f\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u80fd\u591f\u518d\u6b21\u63a5\u6536\u5230\u6d88\u606f\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5de5\u4f5c\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\u3002 \u4ec0\u4e48\u662f \u201c\u5de5\u4f5c\u4e8b\u52a1\u201d ? \u00b6 \u4e0a\u9762\u6240\u8bf4\u7684\u201c\u5de5\u4f5c\u4e8b\u52a1\u201d\u5e76\u4e0d\u662f\u7279\u6307\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e8b\u52a1\uff0c\u8fd9\u91cc\u7684\u5de5\u4f5c\u4e8b\u52a1\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4ee3\u7801\u7684\u539f\u5b50\u6027\u3002 \u6bd4\u5982\u5b83\u53ef\u4ee5\u662f\u4f20\u7edf\u7684RDMS\u4e8b\u52a1\uff0c\u4e5f\u6216\u8005\u662f MongoDB \u4e8b\u52a1\u6216\u8005\u662f\u4e00\u4e2a\u4ea4\u6613\u7b49\u3002 \u5728\u8fd9\u91cc\u5b83\u4ee3\u8868\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u662f\u4e00\u4e2a\u6982\u5ff5\u6027\u7684\u4e8b\u5b9e\u4ee5\u652f\u6301\u524d\u9762\u63d0\u5230\u7684\u4ec5\u4ea4\u4ed8\u4e00\u6b21\u7684\u8fd9\u79cd\u95ee\u9898\u3002 \u901a\u5e38\uff0c\u4e0d\u53ef\u80fd\u505a\u5230\u6d88\u606f\u7684\u4e8b\u52a1\u548c\u5de5\u4f5c\u4e8b\u52a1\u6765\u5f62\u6210\u539f\u5b50\u6027\u8fdb\u884c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002 CAP \u4e2d\u7684\u5e42\u7b49\u6027 \u00b6 \u5728CAP\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u7684\u4ea4\u4ed8\u4fdd\u8bc1\u4e3a At Least Once\u3002 \u7531\u4e8e\u6211\u4eec\u5177\u6709\u4e34\u65f6\u5b58\u50a8\u4ecb\u8d28\uff08\u6570\u636e\u5e93\u8868\uff09\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u505a\u5230 At Most Once, \u4f46\u662f\u4e3a\u4e86\u4e25\u683c\u4fdd\u8bc1\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\u76f8\u5173\u529f\u80fd\u6216\u914d\u7f6e\u3002 \u4e3a\u4ec0\u4e48\u6ca1\u6709\u5b9e\u73b0\u5e42\u7b49\uff1f \u00b6 1\u3001\u6d88\u606f\u5199\u5165\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6b64\u65f6\u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u4e86 \u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u7684\u539f\u56e0\u6709\u975e\u5e38\u591a\uff0c\u6211\u5982\u679c\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u573a\u666f\u76f2\u76ee\u8fdb\u884c\u91cd\u8bd5\u6216\u8005\u4e0d\u8fdb\u884c\u91cd\u8bd5\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u9009\u62e9\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u6d88\u8d39\u8005\u4e3a\u6263\u6b3e\u670d\u52a1\uff0c\u5982\u679c\u662f\u6267\u884c\u6263\u6b3e\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u5199\u6263\u6b3e\u65e5\u5fd7\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u6b64\u65f6CAP\u4f1a\u5224\u65ad\u4e3a\u6d88\u8d39\u8005\u6267\u884c\u5931\u8d25\uff0c\u8fdb\u884c\u91cd\u8bd5\u3002\u5982\u679c\u5ba2\u6237\u7aef\u81ea\u5df1\u6ca1\u6709\u4fdd\u8bc1\u5e42\u7b49\u6027\uff0c\u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\uff0c\u8fd9\u91cc\u52bf\u5fc5\u4f1a\u9020\u6210\u591a\u6b21\u6263\u6b3e\u51fa\u73b0\u4e25\u91cd\u540e\u679c\u3002 2\u3001\u6267\u884cConsumer\u65b9\u6cd5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u53c8\u6536\u5230\u4e86\u540c\u6837\u7684\u6d88\u606f \u6b64\u5904\u573a\u666f\u4e5f\u662f\u53ef\u80fd\u5b58\u5728\u7684\uff0c\u5047\u5982\u5f00\u59cb\u7684\u65f6\u5019Consumer\u5df2\u7ecf\u6267\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5982 Broker \u5b95\u673a\u6062\u590d\u7b49\uff0c\u53c8\u6536\u5230\u4e86\u76f8\u540c\u7684\u6d88\u606f\uff0cCAP \u5728\u6536\u5230Broker\u6d88\u606f\u540e\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u65b0\u7684\u6d88\u606f\uff0c\u4f1a\u5bf9 Consumer\u518d\u6b21\u6267\u884c\uff0c\u7531\u4e8e\u662f\u65b0\u6d88\u606f\uff0c\u6b64\u65f6 CAP \u4e5f\u662f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u7684\u3002 3\u3001\u76ee\u524d\u7684\u6570\u636e\u5b58\u50a8\u6a21\u5f0f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49 \u7531\u4e8eCAP\u5b58\u6d88\u606f\u7684\u8868\u5bf9\u4e8e\u6210\u529f\u6d88\u8d39\u7684\u6d88\u606f\u4f1a\u4e8e1\u4e2a\u5c0f\u65f6\u540e\u5220\u9664\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u4e00\u4e9b\u5386\u53f2\u6027\u6d88\u606f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u64cd\u4f5c\u3002 \u5386\u53f2\u6027\u6307\u7684\u662f\uff0c\u5047\u5982 Broker\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u7ef4\u62a4\u4e86\u6216\u8005\u662f\u4eba\u5de5\u5904\u7406\u7684\u4e00\u4e9b\u6d88\u606f\u3002 4\u3001\u4e1a\u754c\u505a\u6cd5 \u8bb8\u591a\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u6846\u67b6\u90fd\u662f\u8981\u6c42 \u7528\u6237 \u6765\u4fdd\u8bc1\u5e42\u7b49\u6027\u64cd\u4f5c\u7684\uff0c\u6bd4\u5982 ENode, RocketMQ \u7b49\u7b49... \u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cCAP\u53ef\u4ee5\u505a\u4e00\u4e9b\u6bd4\u8f83\u4e0d\u4e25\u683c\u7684\u5e42\u7b49\uff0c\u4f46\u662f\u4e25\u683c\u7684\u5e42\u7b49\u65e0\u6cd5\u505a\u5230\u7684\u3002 \u4ee5\u81ea\u7136\u7684\u65b9\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f \u00b6 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6d88\u606f\u88ab\u6267\u884c\u591a\u6b21\u800c\u4e0d\u4f1a\u4ea7\u751f\u610f\u5916\u7ed3\u679c\u662f\u5f88\u81ea\u7136\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u91c7\u7528\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5e26\u7684\u4e00\u4e9b\u5e42\u7b49\u529f\u80fd\u3002\u6bd4\u5982\uff1a \u6570\u636e\u5e93\u63d0\u4f9b\u7684 INSERT ON DUPLICATE KEY UPDATE \u6216\u8005\u662f\u91c7\u53d6\u7c7b\u578b\u7684\u7a0b\u5e8f\u5224\u65ad\u884c\u4e3a\u3002 \u663e\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f \u00b6 \u53e6\u5916\u4e00\u79cd\u5904\u7406\u5e42\u7b49\u6027\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u6d88\u606f\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\u4f20\u9012ID\uff0c\u7136\u540e\u7531\u5355\u72ec\u7684\u6d88\u606f\u8ddf\u8e2a\u5668\u6765\u5904\u7406\u3002 \u6bd4\u5982\u4f60\u4f7f\u7528\u5177\u6709\u4e8b\u52a1\u6570\u636e\u5b58\u50a8\u7684 IMessageTracker \u6765\u8ddf\u8e2a\u6d88\u606fID\uff0c\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a readonly IMessageTracker _messageTracker ; public SomeMessageHandler ( IMessageTracker messageTracker ) { _messageTracker = messageTracker ; } [CapSubscribe] public async Task Handle ( SomeMessage message ) { if ( await _messageTracker . HasProcessed ( message . Id )) { return ; } // do the work here // ... // remember that this message has been processed await _messageTracker . MarkAsProcessed ( messageId ); } \u81f3\u4e8e IMessageTracker \u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982Redis\u6216\u8005\u6570\u636e\u5e93\u7b49\u5b58\u50a8\u6d88\u606fId\u548c\u5bf9\u5e94\u7684\u5904\u7406\u72b6\u6001\u3002","title":"\u5e42\u7b49\u6027"},{"location":"user-guide/zh/cap/idempotence/#idempotence","text":"\u5e42\u7b49\u6027\uff08\u4f60\u53ef\u4ee5\u5728 Wikipedia \u8bfb\u5230\u5173\u4e8e\u5e42\u7b49\u6027\u7684\u5b9a\u4e49\uff09\uff0c\u5f53\u6211\u4eec\u8c08\u8bba\u5e42\u7b49\u65f6\uff0c\u4e00\u822c\u662f\u6307\u53ef\u4ee5\u91cd\u590d\u5904\u7406\u4f20\u6bd2\u7684\u6d88\u606f\uff0c\u800c\u4e0d\u662f\u4ea7\u751f\u610f\u5916\u7684\u7ed3\u679c\u3002","title":"Idempotence"},{"location":"user-guide/zh/cap/idempotence/#_1","text":"\u5728\u8bf4\u5e42\u7b49\u6027\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u8bf4\u4e0b\u5173\u4e8e\u6d88\u8d39\u7aef\u7684\u6d88\u606f\u4ea4\u4ed8\u3002 \u7531\u4e8eCAP\u4e0d\u662f\u4f7f\u7528\u7684 MS DTC \u6216\u5176\u4ed6\u7c7b\u578b\u76842PC\u5206\u5e03\u5f0f\u4e8b\u52a1\u673a\u5236\uff0c\u6240\u4ee5\u5b58\u5728\u81f3\u5c11\u6d88\u606f\u4e25\u683c\u4ea4\u4ed8\u4e00\u6b21\u7684\u95ee\u9898\uff0c\u5177\u4f53\u7684\u8bf4\u5728\u57fa\u4e8e\u6d88\u606f\u7684\u7cfb\u7edf\u4e2d\uff0c\u5b58\u5728\u4e00\u4e0b\u4e09\u79cd\u53ef\u80fd\uff1a Exactly Once(*) \uff08\u4ec5\u6709\u4e00\u6b21\uff09 At Most Once \uff08\u6700\u591a\u4e00\u6b21\uff09 At Least Once \uff08\u6700\u5c11\u4e00\u6b21\uff09 \u5e26 * \u53f7\u8868\u793a\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5f88\u96be\u8fbe\u5230\u3002","title":"\u4ea4\u4ed8\u4fdd\u8bc1"},{"location":"user-guide/zh/cap/idempotence/#at-most-once","text":"\u6700\u591a\u4e00\u6b21\u4ea4\u4ed8\u4fdd\u8bc1\uff0c\u6db5\u76d6\u4e86\u4fdd\u8bc1\u4e00\u6b21\u6216\u6839\u672c\u4e0d\u63a5\u6536\u6240\u6709\u6d88\u606f\u7684\u60c5\u51b5\u3002 \u8fd9\u79cd\u7c7b\u578b\u7684\u4f20\u9012\u4fdd\u8bc1\u53ef\u80fd\u6765\u81ea\u4f60\u7684\u6d88\u606f\u7cfb\u7edf\uff0c\u4f60\u7684\u4ee3\u7801\u6309\u4ee5\u4e0b\u987a\u5e8f\u6267\u884c\u5176\u64cd\u4f5c\uff1a 1. \u4ece\u961f\u5217\u79fb\u9664\u6d88\u606f 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u5c06\u6d88\u606f\u53d1\u56de\u5230\u961f\u5217\u3002 \u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u5de5\u4f5c\u4e8b\u52a1\u5c06\u88ab\u63d0\u4ea4\u3002 \u7136\u800c\uff0c\u6709\u4e9b\u65f6\u5019\u5e76\u4e0d\u80fd\u603b\u662f\u6210\u529f\uff0c\u6bd4\u5982\u5728 1 \u4e4b\u540e\u51fa\u73b0\u5f02\u5e38\uff0c\u6216\u8005\u662f\u4f60\u5728\u5c06\u6d88\u606f\u653e\u56de\u5230\u961f\u5217\u4e2d\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u7531\u6216\u8005\u5b95\u673a\u91cd\u542f\u7b49\u60c5\u51b5\u3002 \u4f7f\u7528\u8fd9\u4e2a\u534f\u8bae\uff0c\u4f60\u5c06\u5192\u7740\u4e22\u5931\u6d88\u606f\u7684\u98ce\u9669\uff0c\u5982\u679c\u53ef\u4ee5\u63a5\u53d7\uff0c\u90a3\u5c31\u6ca1\u6709\u5173\u7cfb\u3002","title":"At Most Once"},{"location":"user-guide/zh/cap/idempotence/#at-least-once","text":"\u8fd9\u4e2a\u4ea4\u4ed8\u4fdd\u8bc1\u5305\u542b\u4f60\u6536\u5230\u81f3\u5c11\u4e00\u6b21\u7684\u6d88\u606f\uff0c\u5f53\u51fa\u73b0\u6545\u969c\u65f6\uff0c\u53ef\u80fd\u4f1a\u6536\u5230\u591a\u6b21\u6d88\u606f\u3002 \u5b83\u9700\u8981\u7a0d\u5fae\u6539\u53d8\u6211\u4eec\u6267\u884c\u6b65\u9aa4\u7684\u987a\u5e8f\uff0c\u5b83\u8981\u6c42\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u652f\u6301\u4e8b\u52a1\u6216ACK\u673a\u5236\uff0c\u6bd4\u5982\u4f20\u7edf\u7684 begin-commit-rollback \u534f\u8bae\uff08MSMQ\u662f\u8fd9\u6837\uff09\uff0c\u6216\u8005\u662f receive-ack-nack \u534f\u8bae\uff08RabbitMQ\uff0cAzure Service Bus\u7b49\u662f\u8fd9\u6837\u7684\uff09\u3002 \u5927\u81f4\u6b65\u9aa4\u5982\u4e0b: 1. \u62a2\u5360\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002 2. \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u4e8b\u52a1 3. \u5904\u7406\u6d88\u606f ( \u4f60\u7684\u4ee3\u7801 ) 4. \u662f\u5426\u6210\u529f ? Yes: 1. \u63d0\u4ea4\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u5220\u9664\u6d88\u606f No: 1. \u56de\u6eda\u5de5\u4f5c\u4e8b\u52a1 2. \u4ece\u961f\u5217\u91ca\u653e\u62a2\u5360\u7684\u6d88\u606f \u5f53\u51fa\u73b0\u5931\u8d25\u6216\u8005\u62a2\u5360\u6d88\u606f\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u80fd\u591f\u518d\u6b21\u63a5\u6536\u5230\u6d88\u606f\u4ee5\u4fdd\u8bc1\u6211\u4eec\u5de5\u4f5c\u4e8b\u52a1\u63d0\u4ea4\u6210\u529f\u3002","title":"At Least Once"},{"location":"user-guide/zh/cap/idempotence/#_2","text":"\u4e0a\u9762\u6240\u8bf4\u7684\u201c\u5de5\u4f5c\u4e8b\u52a1\u201d\u5e76\u4e0d\u662f\u7279\u6307\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e8b\u52a1\uff0c\u8fd9\u91cc\u7684\u5de5\u4f5c\u4e8b\u52a1\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\u6267\u884c\u4ee3\u7801\u7684\u539f\u5b50\u6027\u3002 \u6bd4\u5982\u5b83\u53ef\u4ee5\u662f\u4f20\u7edf\u7684RDMS\u4e8b\u52a1\uff0c\u4e5f\u6216\u8005\u662f MongoDB \u4e8b\u52a1\u6216\u8005\u662f\u4e00\u4e2a\u4ea4\u6613\u7b49\u3002 \u5728\u8fd9\u91cc\u5b83\u4ee3\u8868\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u662f\u4e00\u4e2a\u6982\u5ff5\u6027\u7684\u4e8b\u5b9e\u4ee5\u652f\u6301\u524d\u9762\u63d0\u5230\u7684\u4ec5\u4ea4\u4ed8\u4e00\u6b21\u7684\u8fd9\u79cd\u95ee\u9898\u3002 \u901a\u5e38\uff0c\u4e0d\u53ef\u80fd\u505a\u5230\u6d88\u606f\u7684\u4e8b\u52a1\u548c\u5de5\u4f5c\u4e8b\u52a1\u6765\u5f62\u6210\u539f\u5b50\u6027\u8fdb\u884c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u3002","title":"\u4ec0\u4e48\u662f \u201c\u5de5\u4f5c\u4e8b\u52a1\u201d ?"},{"location":"user-guide/zh/cap/idempotence/#cap","text":"\u5728CAP\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u7684\u4ea4\u4ed8\u4fdd\u8bc1\u4e3a At Least Once\u3002 \u7531\u4e8e\u6211\u4eec\u5177\u6709\u4e34\u65f6\u5b58\u50a8\u4ecb\u8d28\uff08\u6570\u636e\u5e93\u8868\uff09\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u505a\u5230 At Most Once, \u4f46\u662f\u4e3a\u4e86\u4e25\u683c\u4fdd\u8bc1\u6d88\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\u76f8\u5173\u529f\u80fd\u6216\u914d\u7f6e\u3002","title":"CAP \u4e2d\u7684\u5e42\u7b49\u6027"},{"location":"user-guide/zh/cap/idempotence/#_3","text":"1\u3001\u6d88\u606f\u5199\u5165\u6210\u529f\u4e86\uff0c\u4f46\u662f\u6b64\u65f6\u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u4e86 \u6267\u884cConsumer\u65b9\u6cd5\u5931\u8d25\u7684\u539f\u56e0\u6709\u975e\u5e38\u591a\uff0c\u6211\u5982\u679c\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u573a\u666f\u76f2\u76ee\u8fdb\u884c\u91cd\u8bd5\u6216\u8005\u4e0d\u8fdb\u884c\u91cd\u8bd5\u90fd\u662f\u4e0d\u6b63\u786e\u7684\u9009\u62e9\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5047\u5982\u6d88\u8d39\u8005\u4e3a\u6263\u6b3e\u670d\u52a1\uff0c\u5982\u679c\u662f\u6267\u884c\u6263\u6b3e\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u5199\u6263\u6b3e\u65e5\u5fd7\u7684\u65f6\u5019\u5931\u8d25\u4e86\uff0c\u6b64\u65f6CAP\u4f1a\u5224\u65ad\u4e3a\u6d88\u8d39\u8005\u6267\u884c\u5931\u8d25\uff0c\u8fdb\u884c\u91cd\u8bd5\u3002\u5982\u679c\u5ba2\u6237\u7aef\u81ea\u5df1\u6ca1\u6709\u4fdd\u8bc1\u5e42\u7b49\u6027\uff0c\u6846\u67b6\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\uff0c\u8fd9\u91cc\u52bf\u5fc5\u4f1a\u9020\u6210\u591a\u6b21\u6263\u6b3e\u51fa\u73b0\u4e25\u91cd\u540e\u679c\u3002 2\u3001\u6267\u884cConsumer\u65b9\u6cd5\u6210\u529f\u4e86\uff0c\u4f46\u662f\u53c8\u6536\u5230\u4e86\u540c\u6837\u7684\u6d88\u606f \u6b64\u5904\u573a\u666f\u4e5f\u662f\u53ef\u80fd\u5b58\u5728\u7684\uff0c\u5047\u5982\u5f00\u59cb\u7684\u65f6\u5019Consumer\u5df2\u7ecf\u6267\u884c\u6210\u529f\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5982 Broker \u5b95\u673a\u6062\u590d\u7b49\uff0c\u53c8\u6536\u5230\u4e86\u76f8\u540c\u7684\u6d88\u606f\uff0cCAP \u5728\u6536\u5230Broker\u6d88\u606f\u540e\u4f1a\u8ba4\u4e3a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u65b0\u7684\u6d88\u606f\uff0c\u4f1a\u5bf9 Consumer\u518d\u6b21\u6267\u884c\uff0c\u7531\u4e8e\u662f\u65b0\u6d88\u606f\uff0c\u6b64\u65f6 CAP \u4e5f\u662f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u7684\u3002 3\u3001\u76ee\u524d\u7684\u6570\u636e\u5b58\u50a8\u6a21\u5f0f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49 \u7531\u4e8eCAP\u5b58\u6d88\u606f\u7684\u8868\u5bf9\u4e8e\u6210\u529f\u6d88\u8d39\u7684\u6d88\u606f\u4f1a\u4e8e1\u4e2a\u5c0f\u65f6\u540e\u5220\u9664\uff0c\u6240\u4ee5\u5982\u679c\u5bf9\u4e8e\u4e00\u4e9b\u5386\u53f2\u6027\u6d88\u606f\u65e0\u6cd5\u505a\u5230\u5e42\u7b49\u64cd\u4f5c\u3002 \u5386\u53f2\u6027\u6307\u7684\u662f\uff0c\u5047\u5982 Broker\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u7ef4\u62a4\u4e86\u6216\u8005\u662f\u4eba\u5de5\u5904\u7406\u7684\u4e00\u4e9b\u6d88\u606f\u3002 4\u3001\u4e1a\u754c\u505a\u6cd5 \u8bb8\u591a\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u6846\u67b6\u90fd\u662f\u8981\u6c42 \u7528\u6237 \u6765\u4fdd\u8bc1\u5e42\u7b49\u6027\u64cd\u4f5c\u7684\uff0c\u6bd4\u5982 ENode, RocketMQ \u7b49\u7b49... \u4ece\u5b9e\u73b0\u7684\u89d2\u5ea6\u6765\u8bf4\uff0cCAP\u53ef\u4ee5\u505a\u4e00\u4e9b\u6bd4\u8f83\u4e0d\u4e25\u683c\u7684\u5e42\u7b49\uff0c\u4f46\u662f\u4e25\u683c\u7684\u5e42\u7b49\u65e0\u6cd5\u505a\u5230\u7684\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5b9e\u73b0\u5e42\u7b49\uff1f"},{"location":"user-guide/zh/cap/idempotence/#_4","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u6d88\u606f\u88ab\u6267\u884c\u591a\u6b21\u800c\u4e0d\u4f1a\u4ea7\u751f\u610f\u5916\u7ed3\u679c\u662f\u5f88\u81ea\u7136\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u91c7\u7528\u64cd\u4f5c\u5bf9\u8c61\u81ea\u5e26\u7684\u4e00\u4e9b\u5e42\u7b49\u529f\u80fd\u3002\u6bd4\u5982\uff1a \u6570\u636e\u5e93\u63d0\u4f9b\u7684 INSERT ON DUPLICATE KEY UPDATE \u6216\u8005\u662f\u91c7\u53d6\u7c7b\u578b\u7684\u7a0b\u5e8f\u5224\u65ad\u884c\u4e3a\u3002","title":"\u4ee5\u81ea\u7136\u7684\u65b9\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f"},{"location":"user-guide/zh/cap/idempotence/#_5","text":"\u53e6\u5916\u4e00\u79cd\u5904\u7406\u5e42\u7b49\u6027\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u6d88\u606f\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\u4f20\u9012ID\uff0c\u7136\u540e\u7531\u5355\u72ec\u7684\u6d88\u606f\u8ddf\u8e2a\u5668\u6765\u5904\u7406\u3002 \u6bd4\u5982\u4f60\u4f7f\u7528\u5177\u6709\u4e8b\u52a1\u6570\u636e\u5b58\u50a8\u7684 IMessageTracker \u6765\u8ddf\u8e2a\u6d88\u606fID\uff0c\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a readonly IMessageTracker _messageTracker ; public SomeMessageHandler ( IMessageTracker messageTracker ) { _messageTracker = messageTracker ; } [CapSubscribe] public async Task Handle ( SomeMessage message ) { if ( await _messageTracker . HasProcessed ( message . Id )) { return ; } // do the work here // ... // remember that this message has been processed await _messageTracker . MarkAsProcessed ( messageId ); } \u81f3\u4e8e IMessageTracker \u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982Redis\u6216\u8005\u6570\u636e\u5e93\u7b49\u5b58\u50a8\u6d88\u606fId\u548c\u5bf9\u5e94\u7684\u5904\u7406\u72b6\u6001\u3002","title":"\u663e\u5f0f\u5904\u7406\u5e42\u7b49\u6d88\u606f"},{"location":"user-guide/zh/cap/license/","text":"License \u00b6 MIT License Copyright \u00a9 2016 - 2019 Savorboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"user-guide/zh/cap/license/#license","text":"MIT License Copyright \u00a9 2016 - 2019 Savorboard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"user-guide/zh/cap/messaging/","text":"\u6d88\u606f \u00b6 \u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u79f0\u4e4b\u4e3a Message ( \u6d88\u606f )\u3002 \u6d88\u606f\u8c03\u5ea6 \u00b6 CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u53d1\u9001\u5230 Transport, \u7531 Transport \u8fdb\u884c\u8fd0\u8f93\u3002 \u5f53\u4f60\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u65f6\uff0cCAP\u5c06\u4f1a\u5c06\u6d88\u606f\u8c03\u5ea6\u5230\u76f8\u5e94\u7684 Transport\u4e2d\u53bb\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6279\u91cf\u53d1\u9001\u6d88\u606f\u3002 \u6709\u5173 Transports \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u3002 \u6d88\u606f\u5b58\u50a8 \u00b6 CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c Persistent\uff08\u6301\u4e45\u5316\uff09\uff0c \u6709\u5173 Persistent \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Persistent \u7ae0\u8282\u3002 \u6d88\u606f\u91cd\u8bd5 \u00b6 \u91cd\u8bd5\u5728\u6574\u4e2aCAP\u67b6\u6784\u8bbe\u8ba1\u4e2d\u5177\u6709\u91cd\u8981\u4f5c\u7528\uff0cCAP \u4e2d\u4f1a\u9488\u5bf9\u53d1\u9001\u5931\u8d25\u6216\u8005\u6267\u884c\u5931\u8d25\u7684\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u3002\u5728\u6574\u4e2a CAP \u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u6709\u4ee5\u4e0b\u51e0\u5904\u91c7\u7528\u7684\u91cd\u8bd5\u7b56\u7565\u3002 1\u3001 \u53d1\u9001\u91cd\u8bd5 \u5728\u6d88\u606f\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u51fa\u73b0 Broker \u5b95\u673a\u6216\u8005\u8fde\u63a5\u5931\u8d25\u7684\u60c5\u51b5\u4ea6\u6216\u8005\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u65f6\u5019 CAP \u4f1a\u5bf9\u53d1\u9001\u7684\u91cd\u8bd5\uff0c\u7b2c\u4e00\u6b21\u91cd\u8bd5\u6b21\u6570\u4e3a 3\uff0c4\u5206\u949f\u540e\u4ee5\u540e\u6bcf\u5206\u949f\u91cd\u8bd5\u4e00\u6b21\uff0c\u8fdb\u884c\u6b21\u6570 +1\uff0c\u5f53\u603b\u6b21\u6570\u8fbe\u523050\u6b21\u540e\uff0cCAP\u5c06\u4e0d\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 CapOptions \u4e2d\u8bbe\u7f6eFailedRetryCount\u6765\u8c03\u6574\u9ed8\u8ba4\u91cd\u8bd5\u7684\u603b\u6b21\u6570\u3002 \u5f53\u5931\u8d25\u603b\u6b21\u6570\u8fbe\u5230\u9ed8\u8ba4\u5931\u8d25\u603b\u6b21\u6570\u540e\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u91cd\u8bd5\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 Dashboard \u4e2d\u67e5\u770b\u6d88\u606f\u5931\u8d25\u7684\u539f\u56e0\uff0c\u7136\u540e\u8fdb\u884c\u4eba\u5de5\u91cd\u8bd5\u5904\u7406\u3002 2\u3001 \u6d88\u8d39\u91cd\u8bd5 \u5f53 Consumer \u63a5\u6536\u5230\u6d88\u606f\u65f6\uff0c\u4f1a\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\uff0c\u5728\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\u3002\u8fd9\u4e2a\u91cd\u8bd5\u7b56\u7565\u548c\u4e0a\u9762\u7684 \u53d1\u9001\u91cd\u8bd5 \u662f\u76f8\u540c\u7684\u3002 \u6d88\u606f\u6570\u636e\u6e05\u7406 \u00b6 \u6570\u636e\u5e93\u6d88\u606f\u8868\u4e2d\u5177\u6709\u4e00\u4e2a ExpiresAt \u5b57\u6bb5\u8868\u793a\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u6d88\u606f\u53d1\u9001\u6210\u529f\u6216\u8005\u6d88\u8d39\u6210\u529f\u540e\uff0cCAP\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Successed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 1\u5c0f\u65f6 \u540e\u8fc7\u671f\uff0c\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Failed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 15\u5929 \u540e\u8fc7\u671f\u3002 CAP \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u6bcf\u9694\u4e00\u4e2a\u5c0f\u65f6\u5c06\u6d88\u606f\u8868\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\u5220\u9664\uff0c\u907f\u514d\u6570\u636e\u91cf\u8fc7\u591a\u5bfc\u81f4\u6027\u80fd\u7684\u964d\u4f4e\u3002\u6e05\u7406\u89c4\u5219\u4e3a ExpiresAt \u4e0d\u4e3a\u7a7a\u5e76\u4e14\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u7684\u6570\u636e\u3002 \u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e3aFailed\u7684\u6d88\u606f\uff08\u6b63\u5e38\u60c5\u51b5\u4ed6\u4eec\u5df2\u7ecf\u88ab\u91cd\u8bd5\u4e86 50 \u6b21\uff09\uff0c\u5982\u679c\u4f6015\u5929\u6ca1\u6709\u4eba\u5de5\u4ecb\u5165\u5904\u7406\uff0c\u540c\u6837\u4f1a\u88ab\u6e05\u7406\u6389\u3002","title":"\u6d88\u606f"},{"location":"user-guide/zh/cap/messaging/#_1","text":"\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u79f0\u4e4b\u4e3a Message ( \u6d88\u606f )\u3002","title":"\u6d88\u606f"},{"location":"user-guide/zh/cap/messaging/#_2","text":"CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u53d1\u9001\u5230 Transport, \u7531 Transport \u8fdb\u884c\u8fd0\u8f93\u3002 \u5f53\u4f60\u4f7f\u7528 ICapPublisher \u63a5\u53e3\u53d1\u9001\u65f6\uff0cCAP\u5c06\u4f1a\u5c06\u6d88\u606f\u8c03\u5ea6\u5230\u76f8\u5e94\u7684 Transport\u4e2d\u53bb\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6279\u91cf\u53d1\u9001\u6d88\u606f\u3002 \u6709\u5173 Transports \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Transports \u7ae0\u8282\u3002","title":"\u6d88\u606f\u8c03\u5ea6"},{"location":"user-guide/zh/cap/messaging/#_3","text":"CAP \u63a5\u6536\u5230\u6d88\u606f\u4e4b\u540e\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c Persistent\uff08\u6301\u4e45\u5316\uff09\uff0c \u6709\u5173 Persistent \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u4ee5\u67e5\u770b Persistent \u7ae0\u8282\u3002","title":"\u6d88\u606f\u5b58\u50a8"},{"location":"user-guide/zh/cap/messaging/#_4","text":"\u91cd\u8bd5\u5728\u6574\u4e2aCAP\u67b6\u6784\u8bbe\u8ba1\u4e2d\u5177\u6709\u91cd\u8981\u4f5c\u7528\uff0cCAP \u4e2d\u4f1a\u9488\u5bf9\u53d1\u9001\u5931\u8d25\u6216\u8005\u6267\u884c\u5931\u8d25\u7684\u6d88\u606f\u8fdb\u884c\u91cd\u8bd5\u3002\u5728\u6574\u4e2a CAP \u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u6709\u4ee5\u4e0b\u51e0\u5904\u91c7\u7528\u7684\u91cd\u8bd5\u7b56\u7565\u3002 1\u3001 \u53d1\u9001\u91cd\u8bd5 \u5728\u6d88\u606f\u53d1\u9001\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u51fa\u73b0 Broker \u5b95\u673a\u6216\u8005\u8fde\u63a5\u5931\u8d25\u7684\u60c5\u51b5\u4ea6\u6216\u8005\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u65f6\u5019 CAP \u4f1a\u5bf9\u53d1\u9001\u7684\u91cd\u8bd5\uff0c\u7b2c\u4e00\u6b21\u91cd\u8bd5\u6b21\u6570\u4e3a 3\uff0c4\u5206\u949f\u540e\u4ee5\u540e\u6bcf\u5206\u949f\u91cd\u8bd5\u4e00\u6b21\uff0c\u8fdb\u884c\u6b21\u6570 +1\uff0c\u5f53\u603b\u6b21\u6570\u8fbe\u523050\u6b21\u540e\uff0cCAP\u5c06\u4e0d\u5bf9\u5176\u8fdb\u884c\u91cd\u8bd5\u3002 \u4f60\u53ef\u4ee5\u5728 CapOptions \u4e2d\u8bbe\u7f6eFailedRetryCount\u6765\u8c03\u6574\u9ed8\u8ba4\u91cd\u8bd5\u7684\u603b\u6b21\u6570\u3002 \u5f53\u5931\u8d25\u603b\u6b21\u6570\u8fbe\u5230\u9ed8\u8ba4\u5931\u8d25\u603b\u6b21\u6570\u540e\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u91cd\u8bd5\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 Dashboard \u4e2d\u67e5\u770b\u6d88\u606f\u5931\u8d25\u7684\u539f\u56e0\uff0c\u7136\u540e\u8fdb\u884c\u4eba\u5de5\u91cd\u8bd5\u5904\u7406\u3002 2\u3001 \u6d88\u8d39\u91cd\u8bd5 \u5f53 Consumer \u63a5\u6536\u5230\u6d88\u606f\u65f6\uff0c\u4f1a\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\uff0c\u5728\u6267\u884c\u6d88\u8d39\u8005\u65b9\u6cd5\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\u3002\u8fd9\u4e2a\u91cd\u8bd5\u7b56\u7565\u548c\u4e0a\u9762\u7684 \u53d1\u9001\u91cd\u8bd5 \u662f\u76f8\u540c\u7684\u3002","title":"\u6d88\u606f\u91cd\u8bd5"},{"location":"user-guide/zh/cap/messaging/#_5","text":"\u6570\u636e\u5e93\u6d88\u606f\u8868\u4e2d\u5177\u6709\u4e00\u4e2a ExpiresAt \u5b57\u6bb5\u8868\u793a\u6d88\u606f\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5f53\u6d88\u606f\u53d1\u9001\u6210\u529f\u6216\u8005\u6d88\u8d39\u6210\u529f\u540e\uff0cCAP\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Successed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 1\u5c0f\u65f6 \u540e\u8fc7\u671f\uff0c\u4f1a\u5c06\u6d88\u606f\u72b6\u6001\u4e3a Failed \u7684 ExpiresAt \u8bbe\u7f6e\u4e3a 15\u5929 \u540e\u8fc7\u671f\u3002 CAP \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u6bcf\u9694\u4e00\u4e2a\u5c0f\u65f6\u5c06\u6d88\u606f\u8868\u7684\u6570\u636e\u8fdb\u884c\u6e05\u7406\u5220\u9664\uff0c\u907f\u514d\u6570\u636e\u91cf\u8fc7\u591a\u5bfc\u81f4\u6027\u80fd\u7684\u964d\u4f4e\u3002\u6e05\u7406\u89c4\u5219\u4e3a ExpiresAt \u4e0d\u4e3a\u7a7a\u5e76\u4e14\u5c0f\u4e8e\u5f53\u524d\u65f6\u95f4\u7684\u6570\u636e\u3002 \u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u4e3aFailed\u7684\u6d88\u606f\uff08\u6b63\u5e38\u60c5\u51b5\u4ed6\u4eec\u5df2\u7ecf\u88ab\u91cd\u8bd5\u4e86 50 \u6b21\uff09\uff0c\u5982\u679c\u4f6015\u5929\u6ca1\u6709\u4eba\u5de5\u4ecb\u5165\u5904\u7406\uff0c\u540c\u6837\u4f1a\u88ab\u6e05\u7406\u6389\u3002","title":"\u6d88\u606f\u6570\u636e\u6e05\u7406"},{"location":"user-guide/zh/cap/sagas/","text":"Sagas \u00b6 Sagas (also known in the literature as \"process managers\") are stateful services. You can think of them as state machines whose transitions are driven by messages. Sagas on CAP \u00b6 TODO","title":"Sagas"},{"location":"user-guide/zh/cap/sagas/#sagas","text":"Sagas (also known in the literature as \"process managers\") are stateful services. You can think of them as state machines whose transitions are driven by messages.","title":"Sagas"},{"location":"user-guide/zh/cap/sagas/#sagas-on-cap","text":"TODO","title":"Sagas on CAP"},{"location":"user-guide/zh/cap/serialization/","text":"\u5e8f\u5217\u5316 \u00b6 CAP \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6d88\u606f\u672c\u8eab\u7684\u5e8f\u5217\u5316\uff0c\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d CAP \u4f7f\u7528 json \u5bf9\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u5185\u5bb9\u5e8f\u5217\u5316 \u00b6 CAP \u652f\u6301\u5bf9\u6d88\u606f\u7684 Content \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49 IContentSerializer \u63a5\u53e3\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u76ee\u524d\u7531\u4e8e\u6d88\u606f\u5bf9\u8c61\u9700\u8981\u8fdb\u884c\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u6240\u4ee5\u53ea\u652f\u6301 string \u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u4f8b\u5316\u3002 class MyContentSerializer : IContentSerializer { public T DeSerialize < T >( string messageObjStr ) { } public object DeSerialize ( string content , Type type ) { } public string Serialize < T >( T messageObj ) { } } \u6d88\u606f\u9002\u914d\u5668 \u00b6 \u5728\u5f02\u6784\u7cfb\u7edf\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u548c\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u901a\u8baf\uff0c\u4f46\u662f\u5176\u4ed6\u7cfb\u7edf\u4f7f\u7528\u7684\u6d88\u606f\u5bf9\u8c61\u53ef\u80fd\u548c CAP \u7684 \u5305\u88c5\u5668\u5bf9\u8c61 \u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5bf9\u6d88\u606f\u8fdb\u884c\u81ea\u5b9a\u4e49\u9002\u914d\u3002 CAP \u63d0\u4f9b\u4e86 IMessagePacker \u63a5\u53e3\u7528\u4e8e\u5bf9 \u5305\u88c5\u5668\u5bf9\u8c61 \u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u81ea\u5b9a\u4e49\u7684 MessagePacker \u901a\u5e38\u662f\u5c06 CapMessage \u8fdb\u884c\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u4e1a\u52a1\u5bf9\u8c61\u3002 \u4f7f\u7528\u65b9\u6cd5\uff1a class MyMessagePacker : IMessagePacker { private readonly IContentSerializer _serializer ; public DefaultMessagePacker ( IContentSerializer serializer ) { _serializer = serializer ; } public string Pack ( CapMessage obj ) { var myStructure = new { Id = obj . Id , Body = obj . Content , Date = obj . Timestamp , Callback = obj . CallbackName }; return _serializer . Serialize ( myStructure ); } public CapMessage UnPack ( string packingMessage ) { var myStructure = _serializer . DeSerialize < MyStructure >( packingMessage ); return new CapMessageDto { Id = myStructure . Id , Timestamp = myStructure . Date , Content = myStructure . Body , CallbackName = myStructure . Callback }; } } \u63a5\u4e0b\u6765\uff0c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 MyMessagePacker \u5230\u670d\u52a1\u4e2d\u3002 services . AddCap ( x =>{ }). AddMessagePacker < MyMessagePacker >();","title":"\u5e8f\u5217\u5316"},{"location":"user-guide/zh/cap/serialization/#_1","text":"CAP \u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6d88\u606f\u672c\u8eab\u7684\u5e8f\u5217\u5316\uff0c\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d CAP \u4f7f\u7528 json \u5bf9\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\u3002","title":"\u5e8f\u5217\u5316"},{"location":"user-guide/zh/cap/serialization/#_2","text":"CAP \u652f\u6301\u5bf9\u6d88\u606f\u7684 Content \u5b57\u6bb5\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49 IContentSerializer \u63a5\u53e3\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002 \u76ee\u524d\u7531\u4e8e\u6d88\u606f\u5bf9\u8c61\u9700\u8981\u8fdb\u884c\u6570\u636e\u5e93\u5b58\u50a8\uff0c\u6240\u4ee5\u53ea\u652f\u6301 string \u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u4f8b\u5316\u3002 class MyContentSerializer : IContentSerializer { public T DeSerialize < T >( string messageObjStr ) { } public object DeSerialize ( string content , Type type ) { } public string Serialize < T >( T messageObj ) { } }","title":"\u5185\u5bb9\u5e8f\u5217\u5316"},{"location":"user-guide/zh/cap/serialization/#_3","text":"\u5728\u5f02\u6784\u7cfb\u7edf\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u548c\u5176\u4ed6\u7cfb\u7edf\u8fdb\u884c\u901a\u8baf\uff0c\u4f46\u662f\u5176\u4ed6\u7cfb\u7edf\u4f7f\u7528\u7684\u6d88\u606f\u5bf9\u8c61\u53ef\u80fd\u548c CAP \u7684 \u5305\u88c5\u5668\u5bf9\u8c61 \u4e0d\u4e00\u6837\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5bf9\u6d88\u606f\u8fdb\u884c\u81ea\u5b9a\u4e49\u9002\u914d\u3002 CAP \u63d0\u4f9b\u4e86 IMessagePacker \u63a5\u53e3\u7528\u4e8e\u5bf9 \u5305\u88c5\u5668\u5bf9\u8c61 \u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u81ea\u5b9a\u4e49\u7684 MessagePacker \u901a\u5e38\u662f\u5c06 CapMessage \u8fdb\u884c\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u7684\u4e1a\u52a1\u5bf9\u8c61\u3002 \u4f7f\u7528\u65b9\u6cd5\uff1a class MyMessagePacker : IMessagePacker { private readonly IContentSerializer _serializer ; public DefaultMessagePacker ( IContentSerializer serializer ) { _serializer = serializer ; } public string Pack ( CapMessage obj ) { var myStructure = new { Id = obj . Id , Body = obj . Content , Date = obj . Timestamp , Callback = obj . CallbackName }; return _serializer . Serialize ( myStructure ); } public CapMessage UnPack ( string packingMessage ) { var myStructure = _serializer . DeSerialize < MyStructure >( packingMessage ); return new CapMessageDto { Id = myStructure . Id , Timestamp = myStructure . Date , Content = myStructure . Body , CallbackName = myStructure . Callback }; } } \u63a5\u4e0b\u6765\uff0c\u914d\u7f6e\u81ea\u5b9a\u4e49\u7684 MyMessagePacker \u5230\u670d\u52a1\u4e2d\u3002 services . AddCap ( x =>{ }). AddMessagePacker < MyMessagePacker >();","title":"\u6d88\u606f\u9002\u914d\u5668"},{"location":"user-guide/zh/cap/transactions/","text":"\u4e8b\u52a1 \u00b6 \u5206\u5e03\u5f0f\u4e8b\u52a1? \u00b6 CAP \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u4e8e DTC \u6216\u8005 2PC \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u76f8\u53cd\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9047\u5230\u7684\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u6d89\u53ca\u901a\u8baf\u7684\u5f00\u9500\uff0c\u4f7f\u7528\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c06\u975e\u5e38\u6602\u8d35\uff0c\u5728\u6027\u80fd\u65b9\u9762\u4e5f\u540c\u6837\u5982\u6b64\u3002\u53e6\u5916\u7531\u4e8e\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u540c\u6837\u53d7**CAP\u5b9a\u7406**\u7684\u7ea6\u675f\uff0c\u5f53\u53d1\u751f\u7f51\u7edc\u5206\u533a\u65f6\u5b83\u5c06\u4e0d\u5f97\u4e0d\u653e\u5f03\u53ef\u7528\u6027(CAP\u4e2d\u7684A)\u3002 \u9488\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5904\u7406\uff0cCAP \u91c7\u7528\u7684\u662f\u201c\u5f02\u6b65\u786e\u4fdd\u201d\u8fd9\u79cd\u65b9\u6848\u3002 \u5f02\u6b65\u786e\u4fdd \u00b6 \u5f02\u6b65\u786e\u4fdd\u8fd9\u79cd\u65b9\u6848\u53c8\u53eb\u505a\u672c\u5730\u6d88\u606f\u8868\uff0c\u8fd9\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u65b9\u6848\uff0c\u65b9\u6848\u6700\u521d\u6765\u6e90\u4e8e eBay\uff0c\u53c2\u8003\u8d44\u6599\u89c1\u6bb5\u672b\u94fe\u63a5\u3002\u8fd9\u79cd\u65b9\u6848\u76ee\u524d\u4e5f\u662f\u4f01\u4e1a\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u65b9\u6848\u4e4b\u4e00\u3002 \u76f8\u5bf9\u4e8e TCC \u6216\u8005 2PC/3PC \u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u6765\u8bf4\u662f\u6700\u7b80\u5355\u7684\uff0c\u800c\u4e14\u5b83\u662f\u53bb\u4e2d\u5fc3\u5316\u7684\u3002\u5728TCC \u6216\u8005 2PC \u7684\u65b9\u6848\u4e2d\uff0c\u5fc5\u987b\u5177\u6709\u4e8b\u52a1\u534f\u8c03\u5668\u6765\u5904\u7406\u6bcf\u4e2a\u4e0d\u540c\u670d\u52a1\u4e4b\u95f4\u7684\u72b6\u6001\uff0c\u800c\u6b64\u79cd\u65b9\u6848\u4e0d\u9700\u8981\u4e8b\u52a1\u534f\u8c03\u5668\u3002 \u53e6\u5916 2PC/TCC \u8fd9\u79cd\u65b9\u6848\u5982\u679c\u670d\u52a1\u4f9d\u8d56\u8fc7\u591a\uff0c\u4f1a\u5e26\u6765\u7ba1\u7406\u590d\u6742\u6027\u589e\u52a0\u548c\u7a33\u5b9a\u6027\u98ce\u9669\u589e\u5927\u7684\u95ee\u9898\u3002\u8bd5\u60f3\u5982\u679c\u6211\u4eec\u5f3a\u4f9d\u8d56 10 \u4e2a\u670d\u52a1\uff0c9 \u4e2a\u90fd\u6267\u884c\u6210\u529f\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u6267\u884c\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u524d\u9762 9 \u4e2a\u90fd\u8981\u56de\u6eda\u6389\uff1f\u8fd9\u4e2a\u6210\u672c\u8fd8\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u8bf4 2PC \u6216\u8005 TCC \u8fd9\u79cd\u65b9\u6848\u4e0d\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u6709\u5176\u76f8\u5bf9\u4f18\u52bf\u7684\u4f7f\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u4e86\u3002 \u4e2d\u6587\uff1a http://www.cnblogs.com/savorboard/p/base-an-acid-alternative.html \u82f1\u6587\uff1a http://queue.acm.org/detail.cfm?id=1394128","title":"\u4f20\u8f93"},{"location":"user-guide/zh/cap/transactions/#_1","text":"","title":"\u4e8b\u52a1"},{"location":"user-guide/zh/cap/transactions/#_2","text":"CAP \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u4e8e DTC \u6216\u8005 2PC \u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u76f8\u53cd\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3\u5728\u5206\u5e03\u5f0f\u4e8b\u52a1\u9047\u5230\u7684\u95ee\u9898\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u6d89\u53ca\u901a\u8baf\u7684\u5f00\u9500\uff0c\u4f7f\u7528\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u5c06\u975e\u5e38\u6602\u8d35\uff0c\u5728\u6027\u80fd\u65b9\u9762\u4e5f\u540c\u6837\u5982\u6b64\u3002\u53e6\u5916\u7531\u4e8e\u57fa\u4e8e2PC\u6216DTC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u540c\u6837\u53d7**CAP\u5b9a\u7406**\u7684\u7ea6\u675f\uff0c\u5f53\u53d1\u751f\u7f51\u7edc\u5206\u533a\u65f6\u5b83\u5c06\u4e0d\u5f97\u4e0d\u653e\u5f03\u53ef\u7528\u6027(CAP\u4e2d\u7684A)\u3002 \u9488\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u5904\u7406\uff0cCAP \u91c7\u7528\u7684\u662f\u201c\u5f02\u6b65\u786e\u4fdd\u201d\u8fd9\u79cd\u65b9\u6848\u3002","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1?"},{"location":"user-guide/zh/cap/transactions/#_3","text":"\u5f02\u6b65\u786e\u4fdd\u8fd9\u79cd\u65b9\u6848\u53c8\u53eb\u505a\u672c\u5730\u6d88\u606f\u8868\uff0c\u8fd9\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u65b9\u6848\uff0c\u65b9\u6848\u6700\u521d\u6765\u6e90\u4e8e eBay\uff0c\u53c2\u8003\u8d44\u6599\u89c1\u6bb5\u672b\u94fe\u63a5\u3002\u8fd9\u79cd\u65b9\u6848\u76ee\u524d\u4e5f\u662f\u4f01\u4e1a\u4e2d\u4f7f\u7528\u6700\u591a\u7684\u65b9\u6848\u4e4b\u4e00\u3002 \u76f8\u5bf9\u4e8e TCC \u6216\u8005 2PC/3PC \u6765\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u5bf9\u4e8e\u5206\u5e03\u5f0f\u4e8b\u52a1\u6765\u8bf4\u662f\u6700\u7b80\u5355\u7684\uff0c\u800c\u4e14\u5b83\u662f\u53bb\u4e2d\u5fc3\u5316\u7684\u3002\u5728TCC \u6216\u8005 2PC \u7684\u65b9\u6848\u4e2d\uff0c\u5fc5\u987b\u5177\u6709\u4e8b\u52a1\u534f\u8c03\u5668\u6765\u5904\u7406\u6bcf\u4e2a\u4e0d\u540c\u670d\u52a1\u4e4b\u95f4\u7684\u72b6\u6001\uff0c\u800c\u6b64\u79cd\u65b9\u6848\u4e0d\u9700\u8981\u4e8b\u52a1\u534f\u8c03\u5668\u3002 \u53e6\u5916 2PC/TCC \u8fd9\u79cd\u65b9\u6848\u5982\u679c\u670d\u52a1\u4f9d\u8d56\u8fc7\u591a\uff0c\u4f1a\u5e26\u6765\u7ba1\u7406\u590d\u6742\u6027\u589e\u52a0\u548c\u7a33\u5b9a\u6027\u98ce\u9669\u589e\u5927\u7684\u95ee\u9898\u3002\u8bd5\u60f3\u5982\u679c\u6211\u4eec\u5f3a\u4f9d\u8d56 10 \u4e2a\u670d\u52a1\uff0c9 \u4e2a\u90fd\u6267\u884c\u6210\u529f\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u6267\u884c\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u524d\u9762 9 \u4e2a\u90fd\u8981\u56de\u6eda\u6389\uff1f\u8fd9\u4e2a\u6210\u672c\u8fd8\u662f\u975e\u5e38\u9ad8\u7684\u3002 \u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u8bf4 2PC \u6216\u8005 TCC \u8fd9\u79cd\u65b9\u6848\u4e0d\u597d\uff0c\u56e0\u4e3a\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u6709\u5176\u76f8\u5bf9\u4f18\u52bf\u7684\u4f7f\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u8fc7\u591a\u4ecb\u7ecd\u4e86\u3002 \u4e2d\u6587\uff1a http://www.cnblogs.com/savorboard/p/base-an-acid-alternative.html \u82f1\u6587\uff1a http://queue.acm.org/detail.cfm?id=1394128","title":"\u5f02\u6b65\u786e\u4fdd"},{"location":"user-guide/zh/cap/upgrade-guides/","text":"\u5347\u7ea7\u6307\u5bfc \u00b6 \u8bf7\u53c2\u9605 Github Release \u9875\u9762\uff1a https://github.com/dotnetcore/CAP/releases","title":"\u5347\u7ea7\u6307\u5bfc"},{"location":"user-guide/zh/cap/upgrade-guides/#_1","text":"\u8bf7\u53c2\u9605 Github Release \u9875\u9762\uff1a https://github.com/dotnetcore/CAP/releases","title":"\u5347\u7ea7\u6307\u5bfc"},{"location":"user-guide/zh/getting-started/contributing/","text":"\u8d21\u732e \u00b6 One of the easiest ways to contribute is to participate in discussions and discuss issues. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues Submitting Changes \u00b6 You can also contribute by submitting pull requests with code changes. Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before the changes are merged into the repository. Additional Resources \u00b6 Filtering issues and pull requests Using search to filter issues and pull requests","title":"\u8d21\u732e"},{"location":"user-guide/zh/getting-started/contributing/#_1","text":"One of the easiest ways to contribute is to participate in discussions and discuss issues. If you have any question or problems, please report them on the CAP repository: Report Issue Active Issues","title":"\u8d21\u732e"},{"location":"user-guide/zh/getting-started/contributing/#submitting-changes","text":"You can also contribute by submitting pull requests with code changes. Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before the changes are merged into the repository.","title":"Submitting Changes"},{"location":"user-guide/zh/getting-started/contributing/#additional-resources","text":"Filtering issues and pull requests Using search to filter issues and pull requests","title":"Additional Resources"},{"location":"user-guide/zh/getting-started/introduction/","text":"\u4ecb\u7ecd \u00b6 CAP \u662f\u4e00\u4e2aEventBus\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u5728\u5fae\u670d\u52a1\u6216\u8005SOA\u7cfb\u7edf\u4e2d\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\u4e00\u4e2a\u6846\u67b6\u3002\u5b83\u6709\u52a9\u4e8e\u521b\u5efa\u53ef\u6269\u5c55\uff0c\u53ef\u9760\u5e76\u4e14\u6613\u4e8e\u66f4\u6539\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u3002 \u5728\u5fae\u8f6f\u7684 eShopOnContainer \u5fae\u670d\u52a1\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 CAP \u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 EventBus\u3002 \u4ec0\u4e48\u662f EventBus\uff1f An Eventbus is a mechanism that allows different components to communicate with each other without knowing about each other. A component can send an Event to the Eventbus without knowing who will pick it up or how many others will pick it up. Components can also listen to Events on an Eventbus, without knowing who sent the Events. That way, components can communicate without depending on each other. Also, it is very easy to substitute a component. As long as the new component understands the Events that are being sent and received, the other components will never know. \u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684 Service Bus \u6216\u8005 Event Bus\uff0c CAP \u62e5\u6709\u81ea\u5df1\u7684\u7279\u8272\uff0c\u5b83\u4e0d\u8981\u6c42\u4f7f\u7528\u8005\u53d1\u9001\u6d88\u606f\u6216\u8005\u5904\u7406\u6d88\u606f\u7684\u65f6\u5019\u5b9e\u73b0\u6216\u8005\u7ee7\u627f\u4efb\u4f55\u63a5\u53e3\uff0c\u62e5\u6709\u975e\u5e38\u9ad8\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4e00\u76f4\u575a\u4fe1\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u6240\u4ee5CAP\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u4e14\u62e5\u6709\u8f7b\u91cf\u7ea7\u3002 CAP \u91c7\u7528\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u4f60\u6709\u8bb8\u591a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c\u5305\u62ec\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\uff0c\u5e8f\u5217\u5316\u65b9\u5f0f\u7b49\uff0c\u7cfb\u7edf\u7684\u8bb8\u591a\u5143\u7d20\u5185\u5bb9\u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002 \u76f8\u5173\u89c6\u9891 \u00b6 Video: bilibili \u6559\u7a0b Video: Youtube \u6559\u7a0b Video: \u817e\u8baf\u89c6\u9891\u6559\u7a0b \u76f8\u5173\u6587\u7ae0 \u00b6 Article: CAP \u4ecb\u7ecd\u53ca\u4f7f\u7528 Article: CAP 2.5 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.4 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.3 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027\u7528 Article: .NET Core Community \u9996\u4e2a\u5343\u661f\u9879\u76ee\u8bde\u751f\uff1aCAP","title":"\u4ecb\u7ecd"},{"location":"user-guide/zh/getting-started/introduction/#_1","text":"CAP \u662f\u4e00\u4e2aEventBus\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u5728\u5fae\u670d\u52a1\u6216\u8005SOA\u7cfb\u7edf\u4e2d\u89e3\u51b3\u5206\u5e03\u5f0f\u4e8b\u52a1\u95ee\u9898\u7684\u4e00\u4e2a\u6846\u67b6\u3002\u5b83\u6709\u52a9\u4e8e\u521b\u5efa\u53ef\u6269\u5c55\uff0c\u53ef\u9760\u5e76\u4e14\u6613\u4e8e\u66f4\u6539\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u3002 \u5728\u5fae\u8f6f\u7684 eShopOnContainer \u5fae\u670d\u52a1\u793a\u4f8b\u9879\u76ee\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 CAP \u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u53ef\u7528\u7684 EventBus\u3002 \u4ec0\u4e48\u662f EventBus\uff1f An Eventbus is a mechanism that allows different components to communicate with each other without knowing about each other. A component can send an Event to the Eventbus without knowing who will pick it up or how many others will pick it up. Components can also listen to Events on an Eventbus, without knowing who sent the Events. That way, components can communicate without depending on each other. Also, it is very easy to substitute a component. As long as the new component understands the Events that are being sent and received, the other components will never know. \u76f8\u5bf9\u4e8e\u5176\u4ed6\u7684 Service Bus \u6216\u8005 Event Bus\uff0c CAP \u62e5\u6709\u81ea\u5df1\u7684\u7279\u8272\uff0c\u5b83\u4e0d\u8981\u6c42\u4f7f\u7528\u8005\u53d1\u9001\u6d88\u606f\u6216\u8005\u5904\u7406\u6d88\u606f\u7684\u65f6\u5019\u5b9e\u73b0\u6216\u8005\u7ee7\u627f\u4efb\u4f55\u63a5\u53e3\uff0c\u62e5\u6709\u975e\u5e38\u9ad8\u7684\u7075\u6d3b\u6027\u3002\u6211\u4eec\u4e00\u76f4\u575a\u4fe1\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u6240\u4ee5CAP\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff0c\u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u4e14\u62e5\u6709\u8f7b\u91cf\u7ea7\u3002 CAP \u91c7\u7528\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u5ea6\u7684\u53ef\u6269\u5c55\u6027\u3002\u4f60\u6709\u8bb8\u591a\u9009\u9879\u53ef\u4ee5\u9009\u62e9\uff0c\u5305\u62ec\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\uff0c\u5e8f\u5217\u5316\u65b9\u5f0f\u7b49\uff0c\u7cfb\u7edf\u7684\u8bb8\u591a\u5143\u7d20\u5185\u5bb9\u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002","title":"\u4ecb\u7ecd"},{"location":"user-guide/zh/getting-started/introduction/#_2","text":"Video: bilibili \u6559\u7a0b Video: Youtube \u6559\u7a0b Video: \u817e\u8baf\u89c6\u9891\u6559\u7a0b","title":"\u76f8\u5173\u89c6\u9891"},{"location":"user-guide/zh/getting-started/introduction/#_3","text":"Article: CAP \u4ecb\u7ecd\u53ca\u4f7f\u7528 Article: CAP 2.5 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.4 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027 Article: CAP 2.3 \u7248\u672c\u4e2d\u7684\u65b0\u7279\u6027\u7528 Article: .NET Core Community \u9996\u4e2a\u5343\u661f\u9879\u76ee\u8bde\u751f\uff1aCAP","title":"\u76f8\u5173\u6587\u7ae0"},{"location":"user-guide/zh/getting-started/quick-start/","text":"\u5feb\u901f\u5f00\u59cb \u00b6 \u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CAP \u6784\u5efa\u5fae\u670d\u52a1\u4e8b\u4ef6\u603b\u7ebf\u67b6\u6784\uff0c\u5b83\u6bd4\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff0c\u5b83\u63d0\u4f9b\u4e86\u54ea\u4e9b\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\u3002 \u5b89\u88c5 \u00b6 PM > Install-Package DotNetCore . CAP \u5728 Asp.Net Core \u4e2d\u96c6\u6210 \u00b6 \u4ee5\u4fbf\u4e8e\u5feb\u901f\u542f\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u4e8b\u4ef6\u5b58\u50a8\u548c\u6d88\u606f\u961f\u5217\u3002 PM > Install-Package DotNetCore . CAP . InMemoryStorage PM > Install-Package Savorboard . CAP . InMemoryMessageQueue \u5728 Startup.cs \u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseInMemoryStorage (); x . UseInMemoryMessageQueue (); }); } \u53d1\u9001\u6d88\u606f \u00b6 public class PublishController : Controller { [Route(\"~/send\")] public IActionResult SendMessage ([ FromService ] ICapPublisher capBus ) { capBus . Publish ( \"test.show.time\" , DateTime . Now ); return Ok (); } } \u5904\u7406\u6d88\u606f \u00b6 public class ConsumerController : Controller { [NonAction] [CapSubscribe(\"test.show.time\")] public void ReceiveMessage ( DateTime time ) { Console . WriteLine ( \"message time is:\" + time ); } } \u6458\u8981 \u00b6 \u76f8\u5bf9\u4e8e\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\uff0c\u5f02\u6b65\u6d88\u606f\u4f20\u9012\u6700\u5f3a\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u53ef\u9760\u6027\uff0c\u7cfb\u7edf\u7684\u4e00\u4e2a\u90e8\u5206\u4e2d\u7684\u6545\u969c\u4e0d\u4f1a\u4f20\u64ad\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002 \u5728 CAP \u5185\u90e8\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c\u5b58\u50a8\uff0c\u4ee5\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6027\uff0c\u5e76\u914d\u5408\u91cd\u8bd5\u7b49\u7b56\u7565\u4ee5\u8fbe\u5230\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u6570\u636e\u6700\u7ec8\u4e00\u81f4\u6027\u3002","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"user-guide/zh/getting-started/quick-start/#_1","text":"\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 CAP \u6784\u5efa\u5fae\u670d\u52a1\u4e8b\u4ef6\u603b\u7ebf\u67b6\u6784\uff0c\u5b83\u6bd4\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\u63d0\u4f9b\u4e86\u54ea\u4e9b\u4f18\u52bf\uff0c\u5b83\u63d0\u4f9b\u4e86\u54ea\u4e9b\u5f00\u7bb1\u5373\u7528\u7684\u529f\u80fd\u3002","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"user-guide/zh/getting-started/quick-start/#_2","text":"PM > Install-Package DotNetCore . CAP","title":"\u5b89\u88c5"},{"location":"user-guide/zh/getting-started/quick-start/#aspnet-core","text":"\u4ee5\u4fbf\u4e8e\u5feb\u901f\u542f\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u4e8b\u4ef6\u5b58\u50a8\u548c\u6d88\u606f\u961f\u5217\u3002 PM > Install-Package DotNetCore . CAP . InMemoryStorage PM > Install-Package Savorboard . CAP . InMemoryMessageQueue \u5728 Startup.cs \u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseInMemoryStorage (); x . UseInMemoryMessageQueue (); }); }","title":"\u5728 Asp.Net Core \u4e2d\u96c6\u6210"},{"location":"user-guide/zh/getting-started/quick-start/#_3","text":"public class PublishController : Controller { [Route(\"~/send\")] public IActionResult SendMessage ([ FromService ] ICapPublisher capBus ) { capBus . Publish ( \"test.show.time\" , DateTime . Now ); return Ok (); } }","title":"\u53d1\u9001\u6d88\u606f"},{"location":"user-guide/zh/getting-started/quick-start/#_4","text":"public class ConsumerController : Controller { [NonAction] [CapSubscribe(\"test.show.time\")] public void ReceiveMessage ( DateTime time ) { Console . WriteLine ( \"message time is:\" + time ); } }","title":"\u5904\u7406\u6d88\u606f"},{"location":"user-guide/zh/getting-started/quick-start/#_5","text":"\u76f8\u5bf9\u4e8e\u76f4\u63a5\u96c6\u6210\u6d88\u606f\u961f\u5217\uff0c\u5f02\u6b65\u6d88\u606f\u4f20\u9012\u6700\u5f3a\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\u662f\u53ef\u9760\u6027\uff0c\u7cfb\u7edf\u7684\u4e00\u4e2a\u90e8\u5206\u4e2d\u7684\u6545\u969c\u4e0d\u4f1a\u4f20\u64ad\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u5d29\u6e83\u3002 \u5728 CAP \u5185\u90e8\u4f1a\u5c06\u6d88\u606f\u8fdb\u884c\u5b58\u50a8\uff0c\u4ee5\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6027\uff0c\u5e76\u914d\u5408\u91cd\u8bd5\u7b49\u7b56\u7565\u4ee5\u8fbe\u5230\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684\u6570\u636e\u6700\u7ec8\u4e00\u81f4\u6027\u3002","title":"\u6458\u8981"},{"location":"user-guide/zh/monitoring/consul/","text":"Consul \u00b6 Consul is a distributed service mesh to connect, secure, and configure services across any runtime platform and public or private cloud.","title":"Consul"},{"location":"user-guide/zh/monitoring/consul/#consul","text":"Consul is a distributed service mesh to connect, secure, and configure services across any runtime platform and public or private cloud.","title":"Consul"},{"location":"user-guide/zh/monitoring/dashboard/","text":"Dashboard \u00b6 CAP \u539f\u751f\u63d0\u4f9b\u4e86 Dashboard \u4f9b\u67e5\u770b\u6d88\u606f\uff0c\u5229\u7528 Dashboard \u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u67e5\u770b\u548c\u7ba1\u7406\u6d88\u606f\u3002 \u542f\u7528 Dashboard \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u542f\u52a8Dashboard\u4e2d\u95f4\u4ef6\uff0c\u8981\u5f00\u542fDashboard\u529f\u80fd\u4f60\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a services . AddCap ( x => { //... // Register Dashboard x . UseDashboard (); }); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee http://localhost:xxx/cap \u8fd9\u4e2a\u5730\u5740\u6253\u5f00Dashboard\u3002 Dashboard \u914d\u7f6e\u9879 \u00b6 PathMatch \u9ed8\u8ba4\u503c\uff1a'/cap' \u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6b64\u914d\u7f6e\u9879\u6765\u66f4\u6539Dashboard\u7684\u8bbf\u95ee\u8def\u5f84\u3002 StatsPollingInterval \u9ed8\u8ba4\u503c\uff1a2000 \u6beb\u79d2 \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6eDashboard \u524d\u7aef \u83b7\u53d6\u72b6\u6001\u63a5\u53e3(/stats)\u7684\u8f6e\u8be2\u65f6\u95f4 Authorization \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u8bbf\u95ee Dashboard \u65f6\u7684\u6388\u6743\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5141\u8bb8\u5c40\u57df\u7f51\u8bbf\u95ee\uff0c\u5f53\u4f60\u7684\u5e94\u7528\u60f3\u63d0\u4f9b\u5916\u7f51\u8bbf\u95ee\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6b64\u914d\u7f6e\u6765\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u89c4\u5219\u3002\u8be6\u7ec6\u53c2\u770b\u4e0b\u4e00\u8282 \u81ea\u5b9a\u4e49\u8ba4\u8bc1 \u00b6 \u901a\u8fc7\u5b9e\u73b0 IDashboardAuthorizationFilter \u63a5\u53e3\u53ef\u4ee5\u81ea\u5b9a\u4e49Dashboard\u8ba4\u8bc1\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u901a\u8fc7\u4eceurl\u8bf7\u6c42\u53c2\u6570\u4e2d\u8bfb\u53d6 accesskey \u5224\u65ad\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u3002 public class TestAuthorizationFilter : IDashboardAuthorizationFilter { public bool Authorize ( DashboardContext context ) { if ( context . Request . GetQuery ( \"accesskey\" )== \"xxxxxx\" ){ return true ; } return false ; } } \u7136\u540e\u5728\u4fee\u6539\u6ce8\u518c Dashboard \u65f6\u5019\u914d\u7f6e\u6b64\u8fc7\u6ee4\u5bf9\u8c61\u3002 services . AddCap ( x => { //... // Register Dashboard x . UseDashboard ( opt => { opt . Authorization = new [] { new TestAuthorizationFilter ()}; }); });","title":"Dashboard"},{"location":"user-guide/zh/monitoring/dashboard/#dashboard","text":"CAP \u539f\u751f\u63d0\u4f9b\u4e86 Dashboard \u4f9b\u67e5\u770b\u6d88\u606f\uff0c\u5229\u7528 Dashboard \u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u67e5\u770b\u548c\u7ba1\u7406\u6d88\u606f\u3002","title":"Dashboard"},{"location":"user-guide/zh/monitoring/dashboard/#dashboard_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u542f\u52a8Dashboard\u4e2d\u95f4\u4ef6\uff0c\u8981\u5f00\u542fDashboard\u529f\u80fd\u4f60\u9700\u8981\u5728\u914d\u7f6e\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a services . AddCap ( x => { //... // Register Dashboard x . UseDashboard (); }); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee http://localhost:xxx/cap \u8fd9\u4e2a\u5730\u5740\u6253\u5f00Dashboard\u3002","title":"\u542f\u7528 Dashboard"},{"location":"user-guide/zh/monitoring/dashboard/#dashboard_2","text":"PathMatch \u9ed8\u8ba4\u503c\uff1a'/cap' \u4f60\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u6b64\u914d\u7f6e\u9879\u6765\u66f4\u6539Dashboard\u7684\u8bbf\u95ee\u8def\u5f84\u3002 StatsPollingInterval \u9ed8\u8ba4\u503c\uff1a2000 \u6beb\u79d2 \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6eDashboard \u524d\u7aef \u83b7\u53d6\u72b6\u6001\u63a5\u53e3(/stats)\u7684\u8f6e\u8be2\u65f6\u95f4 Authorization \u6b64\u914d\u7f6e\u9879\u7528\u6765\u914d\u7f6e\u8bbf\u95ee Dashboard \u65f6\u7684\u6388\u6743\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5141\u8bb8\u5c40\u57df\u7f51\u8bbf\u95ee\uff0c\u5f53\u4f60\u7684\u5e94\u7528\u60f3\u63d0\u4f9b\u5916\u7f51\u8bbf\u95ee\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6b64\u914d\u7f6e\u6765\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u89c4\u5219\u3002\u8be6\u7ec6\u53c2\u770b\u4e0b\u4e00\u8282","title":"Dashboard \u914d\u7f6e\u9879"},{"location":"user-guide/zh/monitoring/dashboard/#_1","text":"\u901a\u8fc7\u5b9e\u73b0 IDashboardAuthorizationFilter \u63a5\u53e3\u53ef\u4ee5\u81ea\u5b9a\u4e49Dashboard\u8ba4\u8bc1\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u4ee3\u7801\uff0c\u901a\u8fc7\u4eceurl\u8bf7\u6c42\u53c2\u6570\u4e2d\u8bfb\u53d6 accesskey \u5224\u65ad\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u3002 public class TestAuthorizationFilter : IDashboardAuthorizationFilter { public bool Authorize ( DashboardContext context ) { if ( context . Request . GetQuery ( \"accesskey\" )== \"xxxxxx\" ){ return true ; } return false ; } } \u7136\u540e\u5728\u4fee\u6539\u6ce8\u518c Dashboard \u65f6\u5019\u914d\u7f6e\u6b64\u8fc7\u6ee4\u5bf9\u8c61\u3002 services . AddCap ( x => { //... // Register Dashboard x . UseDashboard ( opt => { opt . Authorization = new [] { new TestAuthorizationFilter ()}; }); });","title":"\u81ea\u5b9a\u4e49\u8ba4\u8bc1"},{"location":"user-guide/zh/monitoring/diagnostics/","text":"Diagnostics \u00b6 Diagnostics \u63d0\u4f9b\u4e00\u7ec4\u529f\u80fd\u4f7f\u6211\u4eec\u80fd\u591f\u5f88\u65b9\u4fbf\u7684\u53ef\u4ee5\u8bb0\u5f55\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d1\u751f\u7684\u5173\u952e\u6027\u64cd\u4f5c\u4ee5\u53ca\u4ed6\u4eec\u7684\u6267\u884c\u65f6\u95f4\u7b49\uff0c\u4f7f\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u627e\u7279\u522b\u662f\u751f\u4ea7\u73af\u5883\u4e2d\u51fa\u73b0\u95ee\u9898\u6240\u5728\u7684\u6839\u672c\u539f\u56e0\u3002 CAP \u4e2d\u7684 Diagnostics \u00b6 \u5728 CAP \u4e2d\uff0c\u5bf9 DiagnosticSource \u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u76d1\u542c\u5668\u540d\u79f0\u4e3a CapDiagnosticListener \u3002 Diagnostics \u63d0\u4f9b\u5bf9\u5916\u63d0\u4f9b\u7684\u4e8b\u4ef6\u4fe1\u606f\u6709\uff1a \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u524d \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u540e \u6d88\u606f\u6301\u4e45\u5316\u5f02\u5e38 \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u524d \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u540e \u6d88\u606f\u5411MQ\u53d1\u9001\u5f02\u5e38 \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u524d \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u524d \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u5f02\u5e38 \u76f8\u5173\u6d89\u53ca\u5230\u7684\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u5728 DotNetCore.CAP.Diagnostics \u547d\u540d\u7a7a\u95f4\u4e0b\u770b\u5230\u3002","title":"Diagnostics"},{"location":"user-guide/zh/monitoring/diagnostics/#diagnostics","text":"Diagnostics \u63d0\u4f9b\u4e00\u7ec4\u529f\u80fd\u4f7f\u6211\u4eec\u80fd\u591f\u5f88\u65b9\u4fbf\u7684\u53ef\u4ee5\u8bb0\u5f55\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53d1\u751f\u7684\u5173\u952e\u6027\u64cd\u4f5c\u4ee5\u53ca\u4ed6\u4eec\u7684\u6267\u884c\u65f6\u95f4\u7b49\uff0c\u4f7f\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u627e\u7279\u522b\u662f\u751f\u4ea7\u73af\u5883\u4e2d\u51fa\u73b0\u95ee\u9898\u6240\u5728\u7684\u6839\u672c\u539f\u56e0\u3002","title":"Diagnostics"},{"location":"user-guide/zh/monitoring/diagnostics/#cap-diagnostics","text":"\u5728 CAP \u4e2d\uff0c\u5bf9 DiagnosticSource \u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u76d1\u542c\u5668\u540d\u79f0\u4e3a CapDiagnosticListener \u3002 Diagnostics \u63d0\u4f9b\u5bf9\u5916\u63d0\u4f9b\u7684\u4e8b\u4ef6\u4fe1\u606f\u6709\uff1a \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u524d \u6d88\u606f\u6301\u4e45\u5316\u4e4b\u540e \u6d88\u606f\u6301\u4e45\u5316\u5f02\u5e38 \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u524d \u6d88\u606f\u5411MQ\u53d1\u9001\u4e4b\u540e \u6d88\u606f\u5411MQ\u53d1\u9001\u5f02\u5e38 \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u524d \u6d88\u606f\u4eceMQ\u6d88\u8d39\u4fdd\u5b58\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u524d \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u4e4b\u540e \u8ba2\u9605\u8005\u65b9\u6cd5\u6267\u884c\u5f02\u5e38 \u76f8\u5173\u6d89\u53ca\u5230\u7684\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u5728 DotNetCore.CAP.Diagnostics \u547d\u540d\u7a7a\u95f4\u4e0b\u770b\u5230\u3002","title":"CAP \u4e2d\u7684 Diagnostics"},{"location":"user-guide/zh/monitoring/health-checks/","text":"\u5065\u5eb7\u68c0\u67e5 \u00b6 TODO","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"user-guide/zh/monitoring/health-checks/#_1","text":"TODO","title":"\u5065\u5eb7\u68c0\u67e5"},{"location":"user-guide/zh/monitoring/metrics/","text":"Metrics \u00b6 TODO:","title":"Metrics"},{"location":"user-guide/zh/monitoring/metrics/#metrics","text":"TODO:","title":"Metrics"},{"location":"user-guide/zh/persistent/general/","text":"\u57fa\u672c \u00b6 CAP \u9700\u8981\u4f7f\u7528\u5177\u6709\u6301\u4e45\u5316\u529f\u80fd\u7684\u5b58\u50a8\u4ecb\u8d28\u6765\u5b58\u50a8\u4e8b\u4ef6\u6d88\u606f\uff0c\u4f8b\u5982\u901a\u8fc7\u6570\u636e\u5e93\u6216\u8005\u5176\u4ed6NoSql\u8bbe\u65bd\u3002CAP \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5e94\u5bf9\u4e00\u5207\u73af\u5883\u6216\u8005\u7f51\u7edc\u5f02\u5e38\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u7684\u60c5\u51b5\uff0c\u6d88\u606f\u7684\u53ef\u9760\u6027\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u57fa\u77f3\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6d88\u606f\u90fd\u4e0d\u80fd\u4e22\u5931\u3002 \u6301\u4e45\u5316 \u00b6 \u53d1\u9001\u524d \u00b6 \u5728\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d\uff0cCAP\u4f7f\u7528\u672c\u5730\u6570\u636e\u5e93\u8868\u5bf9\u6d88\u606f\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u6d88\u606f\u961f\u5217\u51fa\u73b0\u5f02\u5e38\u6216\u8005\u7f51\u7edc\u9519\u8bef\u65f6\u5019\u6d88\u606f\u662f\u6ca1\u6709\u4e22\u5931\u7684\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u79cd\u673a\u5236\u7684\u53ef\u9760\u6027\uff0cCAP\u4f7f\u7528\u548c\u4e1a\u52a1\u4ee3\u7801\u76f8\u540c\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u6765\u4fdd\u8bc1\u4e1a\u52a1\u64cd\u4f5c\u548cCAP\u7684\u6d88\u606f\u5728\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\u662f\u5f3a\u4e00\u81f4\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8fdb\u884c\u6d88\u606f\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u65b9\u53d1\u751f\u5f02\u5e38\u60c5\u51b5\u6570\u636e\u5e93\u90fd\u4f1a\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002 \u53d1\u9001\u540e \u00b6 \u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u540e\uff0cCAP\u4f1a\u542f\u52a8\u6d88\u606f\u961f\u5217\u7684\u6301\u4e45\u5316\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u5728 RabbitMQ \u548c Kafka \u4e2dCAP\u7684\u6d88\u606f\u662f\u5982\u4f55\u6301\u4e45\u5316\u7684\u3002 \u9488\u5bf9\u4e8e RabbitMQ \u4e2d\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0cCAP \u4f7f\u7528\u7684\u662f\u5177\u6709\u6d88\u606f\u6301\u4e45\u5316\u529f\u80fd\u7684\u6d88\u8d39\u8005\u961f\u5217\uff0c\u4f46\u662f\u8fd9\u91cc\u9762\u53ef\u80fd\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u53c2\u52a0 2.2.1 \u7ae0\u8282\u3002 \u7531\u4e8e Kafka \u5929\u751f\u8bbe\u8ba1\u7684\u5c31\u662f\u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0c\u5728\u6240\u4ee5\u5728\u6d88\u606f\u8fdb\u5165\u5230Kafka\u4e4b\u540e\uff0cKafka\u4f1a\u4fdd\u8bc1\u6d88\u606f\u80fd\u591f\u6b63\u786e\u88ab\u6301\u4e45\u5316\u800c\u4e0d\u4e22\u5931\u3002 \u6d88\u606f\u5b58\u50a8 \u00b6 \u5728 CAP \u542f\u52a8\u540e\uff0c\u4f1a\u5411\u6301\u4e45\u5316\u4ecb\u8d28\u4e2d\u751f\u6210\u4e24\u4e2a\u8868\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u540d\u79f0\u4e3a\uff1a Cap.Published Cap.Received \u3002 \u5b58\u50a8\u683c\u5f0f \u00b6 Published \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string Received \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Group Group Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string \u5305\u88c5\u5668\u5bf9\u8c61 \u00b6 CAP \u5728\u8fdb\u884c\u6d88\u606f\u53d1\u9001\u5230\u65f6\u5019\uff0c\u4f1a\u5bf9\u539f\u59cb\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e2a\u4e8c\u6b21\u5305\u88c5\u5b58\u50a8\u5230 Content \u5b57\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u4e3a\u5305\u88c5 Content \u7684 Message \u5bf9\u8c61\u6570\u636e\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id CAP\u751f\u6210\u7684\u6d88\u606f\u7f16\u53f7 string Timestamp \u6d88\u606f\u521b\u5efa\u65f6\u95f4 string Content \u5185\u5bb9 string CallbackName \u56de\u8c03\u7684\u8ba2\u9605\u8005\u540d\u79f0 string \u5176\u4e2d Id \u5b57\u6bb5\uff0cCAP \u91c7\u7528\u7684 MongoDB \u4e2d\u7684 ObjectId \u5206\u5e03\u5f0fId\u751f\u6210\u7b97\u6cd5\u751f\u6210\u3002","title":"\u7b80\u4ecb"},{"location":"user-guide/zh/persistent/general/#_1","text":"CAP \u9700\u8981\u4f7f\u7528\u5177\u6709\u6301\u4e45\u5316\u529f\u80fd\u7684\u5b58\u50a8\u4ecb\u8d28\u6765\u5b58\u50a8\u4e8b\u4ef6\u6d88\u606f\uff0c\u4f8b\u5982\u901a\u8fc7\u6570\u636e\u5e93\u6216\u8005\u5176\u4ed6NoSql\u8bbe\u65bd\u3002CAP \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5e94\u5bf9\u4e00\u5207\u73af\u5883\u6216\u8005\u7f51\u7edc\u5f02\u5e38\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u7684\u60c5\u51b5\uff0c\u6d88\u606f\u7684\u53ef\u9760\u6027\u662f\u5206\u5e03\u5f0f\u4e8b\u52a1\u7684\u57fa\u77f3\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u6d88\u606f\u90fd\u4e0d\u80fd\u4e22\u5931\u3002","title":"\u57fa\u672c"},{"location":"user-guide/zh/persistent/general/#_2","text":"","title":"\u6301\u4e45\u5316"},{"location":"user-guide/zh/persistent/general/#_3","text":"\u5728\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u524d\uff0cCAP\u4f7f\u7528\u672c\u5730\u6570\u636e\u5e93\u8868\u5bf9\u6d88\u606f\u8fdb\u884c\u6301\u4e45\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u6d88\u606f\u961f\u5217\u51fa\u73b0\u5f02\u5e38\u6216\u8005\u7f51\u7edc\u9519\u8bef\u65f6\u5019\u6d88\u606f\u662f\u6ca1\u6709\u4e22\u5931\u7684\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u79cd\u673a\u5236\u7684\u53ef\u9760\u6027\uff0cCAP\u4f7f\u7528\u548c\u4e1a\u52a1\u4ee3\u7801\u76f8\u540c\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u6765\u4fdd\u8bc1\u4e1a\u52a1\u64cd\u4f5c\u548cCAP\u7684\u6d88\u606f\u5728\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\u662f\u5f3a\u4e00\u81f4\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8fdb\u884c\u6d88\u606f\u6301\u4e45\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4efb\u4f55\u4e00\u65b9\u53d1\u751f\u5f02\u5e38\u60c5\u51b5\u6570\u636e\u5e93\u90fd\u4f1a\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002","title":"\u53d1\u9001\u524d"},{"location":"user-guide/zh/persistent/general/#_4","text":"\u6d88\u606f\u8fdb\u5165\u5230\u6d88\u606f\u961f\u5217\u4e4b\u540e\uff0cCAP\u4f1a\u542f\u52a8\u6d88\u606f\u961f\u5217\u7684\u6301\u4e45\u5316\u529f\u80fd\uff0c\u6211\u4eec\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u5728 RabbitMQ \u548c Kafka \u4e2dCAP\u7684\u6d88\u606f\u662f\u5982\u4f55\u6301\u4e45\u5316\u7684\u3002 \u9488\u5bf9\u4e8e RabbitMQ \u4e2d\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0cCAP \u4f7f\u7528\u7684\u662f\u5177\u6709\u6d88\u606f\u6301\u4e45\u5316\u529f\u80fd\u7684\u6d88\u8d39\u8005\u961f\u5217\uff0c\u4f46\u662f\u8fd9\u91cc\u9762\u53ef\u80fd\u6709\u4f8b\u5916\u60c5\u51b5\uff0c\u53c2\u52a0 2.2.1 \u7ae0\u8282\u3002 \u7531\u4e8e Kafka \u5929\u751f\u8bbe\u8ba1\u7684\u5c31\u662f\u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u7684\u6d88\u606f\u6301\u4e45\u5316\uff0c\u5728\u6240\u4ee5\u5728\u6d88\u606f\u8fdb\u5165\u5230Kafka\u4e4b\u540e\uff0cKafka\u4f1a\u4fdd\u8bc1\u6d88\u606f\u80fd\u591f\u6b63\u786e\u88ab\u6301\u4e45\u5316\u800c\u4e0d\u4e22\u5931\u3002","title":"\u53d1\u9001\u540e"},{"location":"user-guide/zh/persistent/general/#_5","text":"\u5728 CAP \u542f\u52a8\u540e\uff0c\u4f1a\u5411\u6301\u4e45\u5316\u4ecb\u8d28\u4e2d\u751f\u6210\u4e24\u4e2a\u8868\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u540d\u79f0\u4e3a\uff1a Cap.Published Cap.Received \u3002","title":"\u6d88\u606f\u5b58\u50a8"},{"location":"user-guide/zh/persistent/general/#_6","text":"Published \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string Received \u8868\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id Message Id int Version Message Version string Name Topic Name string Group Group Name string Content Json Content string Added Added Time DateTime ExpiresAt Expire time DateTime Retries Retry times int StatusName Status Name string","title":"\u5b58\u50a8\u683c\u5f0f"},{"location":"user-guide/zh/persistent/general/#_7","text":"CAP \u5728\u8fdb\u884c\u6d88\u606f\u53d1\u9001\u5230\u65f6\u5019\uff0c\u4f1a\u5bf9\u539f\u59cb\u6d88\u606f\u5bf9\u8c61\u8fdb\u884c\u4e00\u4e2a\u4e8c\u6b21\u5305\u88c5\u5b58\u50a8\u5230 Content \u5b57\u6bb5\u4e2d\uff0c\u4ee5\u4e0b\u4e3a\u5305\u88c5 Content \u7684 Message \u5bf9\u8c61\u6570\u636e\u7ed3\u6784\uff1a NAME DESCRIPTION TYPE Id CAP\u751f\u6210\u7684\u6d88\u606f\u7f16\u53f7 string Timestamp \u6d88\u606f\u521b\u5efa\u65f6\u95f4 string Content \u5185\u5bb9 string CallbackName \u56de\u8c03\u7684\u8ba2\u9605\u8005\u540d\u79f0 string \u5176\u4e2d Id \u5b57\u6bb5\uff0cCAP \u91c7\u7528\u7684 MongoDB \u4e2d\u7684 ObjectId \u5206\u5e03\u5f0fId\u751f\u6210\u7b97\u6cd5\u751f\u6210\u3002","title":"\u5305\u88c5\u5668\u5bf9\u8c61"},{"location":"user-guide/zh/persistent/in-memory-storage/","text":"In-Memory Storage \u00b6 \u5185\u5b58\u6d88\u606f\u7684\u6301\u4e45\u5316\u5b58\u50a8\u5e38\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u5982\u679c\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u5b58\u50a8\u5219\u4f60\u4f1a\u5931\u53bb\u672c\u5730\u4e8b\u52a1\u6d88\u606f\u53ef\u9760\u6027\u4fdd\u8bc1\u3002 \u914d\u7f6e \u00b6 \u5982\u679c\u8981\u4f7f\u7528\u5185\u5b58\u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.InMemoryStorage \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryStorage (); // x.UseXXX ... }); } \u5185\u5b58\u4e2d\u7684\u53d1\u9001\u6210\u529f\u6d88\u606f\uff0cCAP \u5c06\u4f1a\u6bcf 5\u5206\u949f \u8fdb\u884c\u4e00\u6b21\u6e05\u7406\u3002 Publish with transaction \u00b6 In-Memory \u5b58\u50a8 \u4e0d\u652f\u6301 \u4e8b\u52a1\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002","title":"In-Memory"},{"location":"user-guide/zh/persistent/in-memory-storage/#in-memory-storage","text":"\u5185\u5b58\u6d88\u606f\u7684\u6301\u4e45\u5316\u5b58\u50a8\u5e38\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\uff0c\u5982\u679c\u4f7f\u7528\u57fa\u4e8e\u5185\u5b58\u7684\u5b58\u50a8\u5219\u4f60\u4f1a\u5931\u53bb\u672c\u5730\u4e8b\u52a1\u6d88\u606f\u53ef\u9760\u6027\u4fdd\u8bc1\u3002","title":"In-Memory Storage"},{"location":"user-guide/zh/persistent/in-memory-storage/#_1","text":"\u5982\u679c\u8981\u4f7f\u7528\u5185\u5b58\u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.InMemoryStorage \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryStorage (); // x.UseXXX ... }); } \u5185\u5b58\u4e2d\u7684\u53d1\u9001\u6210\u529f\u6d88\u606f\uff0cCAP \u5c06\u4f1a\u6bcf 5\u5206\u949f \u8fdb\u884c\u4e00\u6b21\u6e05\u7406\u3002","title":"\u914d\u7f6e"},{"location":"user-guide/zh/persistent/in-memory-storage/#publish-with-transaction","text":"In-Memory \u5b58\u50a8 \u4e0d\u652f\u6301 \u4e8b\u52a1\u65b9\u5f0f\u53d1\u9001\u6d88\u606f\u3002","title":"Publish with transaction"},{"location":"user-guide/zh/persistent/mongodb/","text":"MongoDB \u00b6 MongoDB \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u9762\u5411\u6587\u6863\u578b\u7684\u6570\u636e\u5e93\u7a0b\u5e8f\uff0c\u5b83\u88ab\u5f52\u4e3a NOSQL \u6570\u636e\u5e93\uff0cCAP \u4ece 2.3 \u7248\u672c\u5f00\u59cb\u652f\u6301 MongoDB \u4f5c\u4e3a\u6d88\u606f\u5b58\u50a8\u3002 MongoDB \u4ece 4.0 \u7248\u672c\u5f00\u59cb\u652f\u6301 ACID \u4e8b\u52a1\uff0c\u6240\u4ee5 CAP \u4e5f\u53ea\u652f\u6301 4.0 \u4ee5\u4e0a\u7684 MongoDB\uff0c\u5e76\u4e14 MongoDB \u9700\u8981\u90e8\u7f72\u4e3a\u96c6\u7fa4\uff0c\u56e0\u4e3a MongoDB \u7684 ACID \u4e8b\u52a1\u9700\u8981\u96c6\u7fa4\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u6709\u5173\u5f00\u53d1\u73af\u5883\u5982\u4f55\u5feb\u901f\u642d\u5efa MongoDB 4.0+ \u96c6\u7fa4\uff0c\u4f60\u53ef\u4ee5\u6211\u7684\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 MongoDB \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MongoDB \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMongoDB ( opt =>{ //MongoDBOptions }); // x.UseXXX ... }); } MongoDBOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT DatabaseName \u6570\u636e\u5e93\u540d\u79f0 string cap DatabaseConnection \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string mongodb://localhost:27017 ReceivedCollection \u63a5\u6536\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.received PublishedCollection \u53d1\u9001\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.published Publish with transaction \u00b6 \u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 CAP \u548c MongoDB \u8fdb\u884c\u672c\u5730\u4e8b\u52a1\u96c6\u6210\u3002 //NOTE: before your test, your need to create database and collection at first //\u6ce8\u610f\uff1aMongoDB \u4e0d\u80fd\u5728\u4e8b\u52a1\u4e2d\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5355\u72ec\u521b\u5efa\u5b83\u4eec\uff0c\u6a21\u62df\u4e00\u6761\u8bb0\u5f55\u63d2\u5165\u5219\u4f1a\u81ea\u52a8\u521b\u5efa //var mycollection = _client.GetDatabase(\"test\").GetCollection<BsonDocument>(\"test.collection\"); //mycollection.InsertOne(new BsonDocument { { \"test\", \"test\" } }); using ( var session = _client . StartTransaction ( _capBus , autoCommit : false )) { var collection = _client . GetDatabase ( \"test\" ). GetCollection < BsonDocument >( \"test.collection\" ); collection . InsertOne ( session , new BsonDocument { { \"hello\" , \"world\" } }); _capBus . Publish ( \"sample.rabbitmq.mongodb\" , DateTime . Now ); session . CommitTransaction (); }","title":"MongoDB"},{"location":"user-guide/zh/persistent/mongodb/#mongodb","text":"MongoDB \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u9762\u5411\u6587\u6863\u578b\u7684\u6570\u636e\u5e93\u7a0b\u5e8f\uff0c\u5b83\u88ab\u5f52\u4e3a NOSQL \u6570\u636e\u5e93\uff0cCAP \u4ece 2.3 \u7248\u672c\u5f00\u59cb\u652f\u6301 MongoDB \u4f5c\u4e3a\u6d88\u606f\u5b58\u50a8\u3002 MongoDB \u4ece 4.0 \u7248\u672c\u5f00\u59cb\u652f\u6301 ACID \u4e8b\u52a1\uff0c\u6240\u4ee5 CAP \u4e5f\u53ea\u652f\u6301 4.0 \u4ee5\u4e0a\u7684 MongoDB\uff0c\u5e76\u4e14 MongoDB \u9700\u8981\u90e8\u7f72\u4e3a\u96c6\u7fa4\uff0c\u56e0\u4e3a MongoDB \u7684 ACID \u4e8b\u52a1\u9700\u8981\u96c6\u7fa4\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u6709\u5173\u5f00\u53d1\u73af\u5883\u5982\u4f55\u5feb\u901f\u642d\u5efa MongoDB 4.0+ \u96c6\u7fa4\uff0c\u4f60\u53ef\u4ee5\u6211\u7684\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u3002","title":"MongoDB"},{"location":"user-guide/zh/persistent/mongodb/#_1","text":"\u8981\u4f7f\u7528 MongoDB \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MongoDB \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMongoDB ( opt =>{ //MongoDBOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/persistent/mongodb/#mongodboptions","text":"NAME DESCRIPTION TYPE DEFAULT DatabaseName \u6570\u636e\u5e93\u540d\u79f0 string cap DatabaseConnection \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string mongodb://localhost:27017 ReceivedCollection \u63a5\u6536\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.received PublishedCollection \u53d1\u9001\u6d88\u606f\u96c6\u5408\u540d\u79f0 string cap.published","title":"MongoDBOptions"},{"location":"user-guide/zh/persistent/mongodb/#publish-with-transaction","text":"\u4e0b\u9762\u7684\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528 CAP \u548c MongoDB \u8fdb\u884c\u672c\u5730\u4e8b\u52a1\u96c6\u6210\u3002 //NOTE: before your test, your need to create database and collection at first //\u6ce8\u610f\uff1aMongoDB \u4e0d\u80fd\u5728\u4e8b\u52a1\u4e2d\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u5355\u72ec\u521b\u5efa\u5b83\u4eec\uff0c\u6a21\u62df\u4e00\u6761\u8bb0\u5f55\u63d2\u5165\u5219\u4f1a\u81ea\u52a8\u521b\u5efa //var mycollection = _client.GetDatabase(\"test\").GetCollection<BsonDocument>(\"test.collection\"); //mycollection.InsertOne(new BsonDocument { { \"test\", \"test\" } }); using ( var session = _client . StartTransaction ( _capBus , autoCommit : false )) { var collection = _client . GetDatabase ( \"test\" ). GetCollection < BsonDocument >( \"test.collection\" ); collection . InsertOne ( session , new BsonDocument { { \"hello\" , \"world\" } }); _capBus . Publish ( \"sample.rabbitmq.mongodb\" , DateTime . Now ); session . CommitTransaction (); }","title":"Publish with transaction"},{"location":"user-guide/zh/persistent/mysql/","text":"MySQL \u00b6 MySQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 MySQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 MySQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MySql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMySql ( opt =>{ //MySqlOptions }); // x.UseXXX ... }); } MySqlOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT TableNamePrefix Cap\u8868\u540d\u524d\u7f00 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string null Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new MySqlConnection ( AppDbContext . ConnectionString )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"MySQL"},{"location":"user-guide/zh/persistent/mysql/#mysql","text":"MySQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 MySQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"MySQL"},{"location":"user-guide/zh/persistent/mysql/#_1","text":"\u8981\u4f7f\u7528 MySQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.MySql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseMySql ( opt =>{ //MySqlOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/persistent/mysql/#mysqloptions","text":"NAME DESCRIPTION TYPE DEFAULT TableNamePrefix Cap\u8868\u540d\u524d\u7f00 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string null","title":"MySqlOptions"},{"location":"user-guide/zh/persistent/mysql/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/zh/persistent/mysql/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new MySqlConnection ( AppDbContext . ConnectionString )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/zh/persistent/mysql/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/zh/persistent/postgresql/","text":"Postgre SQL \u00b6 PostgreSQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5b83\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Postgre SQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 PostgreSQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.PostgreSql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //PostgreSqlOptions }); // x.UseXXX ... }); } PostgreSqlOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new NpgsqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"PostgreSql"},{"location":"user-guide/zh/persistent/postgresql/#postgre-sql","text":"PostgreSQL \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5b83\u5df2\u7ecf\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Postgre SQL \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"Postgre SQL"},{"location":"user-guide/zh/persistent/postgresql/#_1","text":"\u8981\u4f7f\u7528 PostgreSQL \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.PostgreSql \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //PostgreSqlOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/persistent/postgresql/#postgresqloptions","text":"NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string","title":"PostgreSqlOptions"},{"location":"user-guide/zh/persistent/postgresql/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/zh/persistent/postgresql/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new NpgsqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/zh/persistent/postgresql/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/zh/persistent/sqlserver/","text":"SQL Server \u00b6 SQL Server \u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SQL Server \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 SQL Server \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.SqlServer \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //SqlServerOptions }); // x.UseXXX ... }); } SqlServerOptions \u00b6 NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string Cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string Publish with transaction \u00b6 ADO.NET with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var connection = new SqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } } EntityFramework with transaction \u00b6 private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"SQL Server"},{"location":"user-guide/zh/persistent/sqlserver/#sql-server","text":"SQL Server \u662f\u7531\u5fae\u8f6f\u5f00\u53d1\u7684\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 SQL Server \u6765\u4f5c\u4e3a CAP \u6d88\u606f\u7684\u6301\u4e45\u5316\u3002","title":"SQL Server"},{"location":"user-guide/zh/persistent/sqlserver/#_1","text":"\u8981\u4f7f\u7528 SQL Server \u5b58\u50a8\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.SqlServer \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UsePostgreSql ( opt =>{ //SqlServerOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/persistent/sqlserver/#sqlserveroptions","text":"NAME DESCRIPTION TYPE DEFAULT Schema \u6570\u636e\u5e93\u67b6\u6784 string Cap ConnectionString \u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32 string","title":"SqlServerOptions"},{"location":"user-guide/zh/persistent/sqlserver/#publish-with-transaction","text":"","title":"Publish with transaction"},{"location":"user-guide/zh/persistent/sqlserver/#adonet-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var connection = new SqlConnection ( \"ConnectionString\" )) { using ( var transaction = connection . BeginTransaction ( _capBus , autoCommit : false )) { //your business code connection . Execute ( \"insert into test(name) values('test')\" , transaction : ( IDbTransaction ) transaction . DbTransaction ); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); transaction . Commit (); } }","title":"ADO.NET with transaction"},{"location":"user-guide/zh/persistent/sqlserver/#entityframework-with-transaction","text":"private readonly ICapPublisher _capBus ; using ( var trans = dbContext . Database . BeginTransaction ( _capBus , autoCommit : false )) { dbContext . Persons . Add ( new Person () { Name = \"ef.transaction\" }); _capBus . Publish ( \"sample.rabbitmq.mysql\" , DateTime . Now ); dbContext . SaveChanges (); trans . Commit (); }","title":"EntityFramework with transaction"},{"location":"user-guide/zh/samples/eshoponcontainers/","text":"eShopOnContainers \u00b6 eShopOnContainers is a sample application written in C# running on .NET Core using a microservice architecture, Domain Driven Design. .NET Core reference application, powered by Microsoft, based on a simplified microservices architecture and Docker containers. This reference application is cross-platform at the server and client side, thanks to .NET Core services capable of running on Linux or Windows containers depending on your Docker host, and to Xamarin for mobile apps running on Android, iOS or Windows/UWP plus any browser for the client web apps. The architecture proposes a microservice oriented architecture implementation with multiple autonomous microservices (each one owning its own data/db) and implementing different approaches within each microservice (simple CRUD vs. DDD/CQRS patterns) using Http as the communication protocol between the client apps and the microservices and supports asynchronous communication for data updates propagation across multiple services based on Integration Events and an Event Bus (a light message broker, to choose between RabbitMQ or Azure Service Bus, underneath) plus other features defined at the roadmap. eShopOnContainers with CAP \u00b6 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u770b\u5230\u5982\u4f55\u5728 eShopOnContainers \u4e2d\u4f7f\u7528 CAP\u3002 https://github.com/yang-xiaodong/eShopOnContainers","title":"eShopOnContainers"},{"location":"user-guide/zh/samples/eshoponcontainers/#eshoponcontainers","text":"eShopOnContainers is a sample application written in C# running on .NET Core using a microservice architecture, Domain Driven Design. .NET Core reference application, powered by Microsoft, based on a simplified microservices architecture and Docker containers. This reference application is cross-platform at the server and client side, thanks to .NET Core services capable of running on Linux or Windows containers depending on your Docker host, and to Xamarin for mobile apps running on Android, iOS or Windows/UWP plus any browser for the client web apps. The architecture proposes a microservice oriented architecture implementation with multiple autonomous microservices (each one owning its own data/db) and implementing different approaches within each microservice (simple CRUD vs. DDD/CQRS patterns) using Http as the communication protocol between the client apps and the microservices and supports asynchronous communication for data updates propagation across multiple services based on Integration Events and an Event Bus (a light message broker, to choose between RabbitMQ or Azure Service Bus, underneath) plus other features defined at the roadmap.","title":"eShopOnContainers"},{"location":"user-guide/zh/samples/eshoponcontainers/#eshoponcontainers-with-cap","text":"\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u770b\u5230\u5982\u4f55\u5728 eShopOnContainers \u4e2d\u4f7f\u7528 CAP\u3002 https://github.com/yang-xiaodong/eShopOnContainers","title":"eShopOnContainers with CAP"},{"location":"user-guide/zh/samples/faq/","text":"FAQ \u00b6 Any IM group(e.g Tencent QQ group) to learn and chat about CAP? None for that. Better than wasting much time in IM group, I hope developers could be capable of independent thinking more, and solve problems yourselves with referenced documents, even create issues or send emails when errors are remaining present. Does it require certain different databases, one each for productor and resumer in CAP? Not requird differences necessary, a given advice is that using a special database for each program. Otherwise, look at Q&A below. How to use the same database for different applications? defining a prefix name of table in ConfigureServices method\u3002 codes exsample\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseKafka ( \"\" ); x . UseMySql ( opt => { opt . ConnectionString = \"connection string\" ; opt . TableNamePrefix = \"appone\" ; // different table name prefix here }); }); } Can CAP not use the database as event storage? I just want to sent the message Not yet. The purpose of CAP is that ensure consistency principle right in microservice or SOA architechtrues. The solution is based on ACID features of database, there is no sense about a single client wapper of message queue without database. If the consumer is abnormal, can I roll back the database executed sql that the producer has executed? Can't roll back, CAP is the ultimate consistency solution. You can imagine your scenario is to call a third party payment. If you are doing a third-party payment operation, after calling Alipay's interface successfully, and your own code is wrong, will Alipay roll back? If you don't roll back, what should you do? The same is true here.","title":"FAQ"},{"location":"user-guide/zh/samples/faq/#faq","text":"Any IM group(e.g Tencent QQ group) to learn and chat about CAP? None for that. Better than wasting much time in IM group, I hope developers could be capable of independent thinking more, and solve problems yourselves with referenced documents, even create issues or send emails when errors are remaining present. Does it require certain different databases, one each for productor and resumer in CAP? Not requird differences necessary, a given advice is that using a special database for each program. Otherwise, look at Q&A below. How to use the same database for different applications? defining a prefix name of table in ConfigureServices method\u3002 codes exsample\uff1a public void ConfigureServices ( IServiceCollection services ) { services . AddCap ( x => { x . UseKafka ( \"\" ); x . UseMySql ( opt => { opt . ConnectionString = \"connection string\" ; opt . TableNamePrefix = \"appone\" ; // different table name prefix here }); }); } Can CAP not use the database as event storage? I just want to sent the message Not yet. The purpose of CAP is that ensure consistency principle right in microservice or SOA architechtrues. The solution is based on ACID features of database, there is no sense about a single client wapper of message queue without database. If the consumer is abnormal, can I roll back the database executed sql that the producer has executed? Can't roll back, CAP is the ultimate consistency solution. You can imagine your scenario is to call a third party payment. If you are doing a third-party payment operation, after calling Alipay's interface successfully, and your own code is wrong, will Alipay roll back? If you don't roll back, what should you do? The same is true here.","title":"FAQ"},{"location":"user-guide/zh/samples/github/","text":"Github \u4e0a\u7684\u793a\u4f8b \u00b6 \u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u627e\u5230\u76f8\u5173\u793a\u4f8b\u4ee3\u7801\uff1a https://github.com/dotnetcore/CAP/tree/master/samples","title":"Github"},{"location":"user-guide/zh/samples/github/#github","text":"\u4f60\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u5730\u5740\u627e\u5230\u76f8\u5173\u793a\u4f8b\u4ee3\u7801\uff1a https://github.com/dotnetcore/CAP/tree/master/samples","title":"Github \u4e0a\u7684\u793a\u4f8b"},{"location":"user-guide/zh/transports/azure-service-bus/","text":"Azure Service Bus \u00b6 Azure \u670d\u52a1\u603b\u7ebf\u662f\u4e00\u79cd\u591a\u79df\u6237\u4e91\u6d88\u606f\u670d\u52a1\uff0c\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u4e4b\u95f4\u53d1\u9001\u4fe1\u606f\u3002 \u5f02\u6b65\u64cd\u4f5c\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u4e2d\u8f6c\u6d88\u606f\u4f20\u9001\u3001\u7ed3\u6784\u5316\u7684\u5148\u8fdb\u5148\u51fa (FIFO) \u6d88\u606f\u4f20\u9001\u4ee5\u53ca\u53d1\u5e03/\u8ba2\u9605\u529f\u80fd\u3002 CAP \u652f\u6301\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 Configuration \u00b6 \u5fc5\u8981\u6761\u4ef6 \u9488\u5bf9 Service Bus \u5b9a\u4ef7\u5c42, CAP \u8981\u6c42\u4f7f\u7528 \u201c\u6807\u51c6\u201d \u6216\u8005 \u201c\u9ad8\u7ea7\u201d \u4ee5\u652f\u6301 Topic \u529f\u80fd\u3002 \u8981\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.AzureServiceBus \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseAzureServiceBus ( opt => { //AzureServiceBusOptions }); // x.UseXXX ... }); } AzureServiceBus Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT ConnectionString Endpoint \u5730\u5740 string TopicPath Topic entity path string cap ManagementTokenProvider Token\u63d0\u4f9b ITokenProvider null","title":"Azure Service Bus"},{"location":"user-guide/zh/transports/azure-service-bus/#azure-service-bus","text":"Azure \u670d\u52a1\u603b\u7ebf\u662f\u4e00\u79cd\u591a\u79df\u6237\u4e91\u6d88\u606f\u670d\u52a1\uff0c\u53ef\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u548c\u670d\u52a1\u4e4b\u95f4\u53d1\u9001\u4fe1\u606f\u3002 \u5f02\u6b65\u64cd\u4f5c\u53ef\u5b9e\u73b0\u7075\u6d3b\u7684\u4e2d\u8f6c\u6d88\u606f\u4f20\u9001\u3001\u7ed3\u6784\u5316\u7684\u5148\u8fdb\u5148\u51fa (FIFO) \u6d88\u606f\u4f20\u9001\u4ee5\u53ca\u53d1\u5e03/\u8ba2\u9605\u529f\u80fd\u3002 CAP \u652f\u6301\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"Azure Service Bus"},{"location":"user-guide/zh/transports/azure-service-bus/#configuration","text":"\u5fc5\u8981\u6761\u4ef6 \u9488\u5bf9 Service Bus \u5b9a\u4ef7\u5c42, CAP \u8981\u6c42\u4f7f\u7528 \u201c\u6807\u51c6\u201d \u6216\u8005 \u201c\u9ad8\u7ea7\u201d \u4ee5\u652f\u6301 Topic \u529f\u80fd\u3002 \u8981\u4f7f\u7528 Azure Service Bus \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.AzureServiceBus \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseAzureServiceBus ( opt => { //AzureServiceBusOptions }); // x.UseXXX ... }); }","title":"Configuration"},{"location":"user-guide/zh/transports/azure-service-bus/#azureservicebus-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT ConnectionString Endpoint \u5730\u5740 string TopicPath Topic entity path string cap ManagementTokenProvider Token\u63d0\u4f9b ITokenProvider null","title":"AzureServiceBus Options"},{"location":"user-guide/zh/transports/general/","text":"Transports \u00b6 Transports move data from one place to another \u2013 between acquisition programs and pipelines, between pipelines and the entity database, and even between pipelines and external systems. Supported transports \u00b6 CAP supports several transport methods: RabbitMQ Kafka Azure Service Bus In-Memory Queue How to select a transport \u00b6 \ud83c\udff3\u200d\ud83c\udf08 RabbitMQ Kafka Azure Service Bus In-Memory \u5b9a\u4f4d \u53ef\u9760\u6d88\u606f\u4f20\u8f93 \u5b9e\u65f6\u6570\u636e\u5904\u7406 \u4e91 \u5185\u5b58\u578b\uff0c\u6d4b\u8bd5 \u5206\u5e03\u5f0f \u2714 \u2714 \u2714 \u274c \u6301\u4e45\u5316 \u2714 \u2714 \u2714 \u274c \u6027\u80fd Medium High Medium High Azure Service Bus vs RabbitMQ : http://geekswithblogs.net/michaelstephenson/archive/2012/08/12/150399.aspx Kafka vs RabbitMQ : https://stackoverflow.com/questions/42151544/is-there-any-reason-to-use-rabbitmq-over-kafka","title":"\u7b80\u4ecb"},{"location":"user-guide/zh/transports/general/#transports","text":"Transports move data from one place to another \u2013 between acquisition programs and pipelines, between pipelines and the entity database, and even between pipelines and external systems.","title":"Transports"},{"location":"user-guide/zh/transports/general/#supported-transports","text":"CAP supports several transport methods: RabbitMQ Kafka Azure Service Bus In-Memory Queue","title":"Supported transports"},{"location":"user-guide/zh/transports/general/#how-to-select-a-transport","text":"\ud83c\udff3\u200d\ud83c\udf08 RabbitMQ Kafka Azure Service Bus In-Memory \u5b9a\u4f4d \u53ef\u9760\u6d88\u606f\u4f20\u8f93 \u5b9e\u65f6\u6570\u636e\u5904\u7406 \u4e91 \u5185\u5b58\u578b\uff0c\u6d4b\u8bd5 \u5206\u5e03\u5f0f \u2714 \u2714 \u2714 \u274c \u6301\u4e45\u5316 \u2714 \u2714 \u2714 \u274c \u6027\u80fd Medium High Medium High Azure Service Bus vs RabbitMQ : http://geekswithblogs.net/michaelstephenson/archive/2012/08/12/150399.aspx Kafka vs RabbitMQ : https://stackoverflow.com/questions/42151544/is-there-any-reason-to-use-rabbitmq-over-kafka","title":"How to select a transport"},{"location":"user-guide/zh/transports/in-memory-queue/","text":"In-Memory Queue \u00b6 In Memory Queue \u4e3a\u57fa\u4e8e\u5185\u5b58\u7684\u6d88\u606f\u961f\u5217\uff0c\u8be5\u6269\u5c55\u7531 \u793e\u533a \u8fdb\u884c\u63d0\u4f9b\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 In Memory Queue \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package Savorboard.CAP.InMemoryMessageQueue \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryMessageQueue (); // x.UseXXX ... }); }","title":"In-Memory Queue"},{"location":"user-guide/zh/transports/in-memory-queue/#in-memory-queue","text":"In Memory Queue \u4e3a\u57fa\u4e8e\u5185\u5b58\u7684\u6d88\u606f\u961f\u5217\uff0c\u8be5\u6269\u5c55\u7531 \u793e\u533a \u8fdb\u884c\u63d0\u4f9b\u3002","title":"In-Memory Queue"},{"location":"user-guide/zh/transports/in-memory-queue/#_1","text":"\u8981\u4f7f\u7528 In Memory Queue \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package Savorboard.CAP.InMemoryMessageQueue \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseInMemoryMessageQueue (); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/transports/kafka/","text":"Apache Kafka\u00ae \u00b6 Apache Kafka\u00ae \u662f\u4e00\u4e2a\u5f00\u6e90\u6d41\u5904\u7406\u8f6f\u4ef6\u5e73\u53f0\uff0c\u7531 LinkedIn \u5f00\u53d1\u5e76\u6350\u8d60\u7ed9 Apache Software Foundation\uff0c\u7528 Scala \u548c Java \u7f16\u5199\u3002 CAP \u652f\u6301\u4f7f\u7528 Apache Kafka\u00ae \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 Configuration \u00b6 \u8981\u4f7f\u7528 Kafka \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.Kafka \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseKafka ( opt =>{ //KafkaOptions }); // x.UseXXX ... }); } Kafka Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT Servers Broker \u5730\u5740 string ConnectionPoolSize \u7528\u6237\u540d int 10 Kafka MainConfig Options \u00b6 \u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f Kakfa \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 MainConfig \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( capOptions => { capOptions . UseKafka ( kafkaOption => { // kafka options. // kafkaOptions.MainConfig.Add(\"\", \"\"); }); }); MainConfig \u4e3a\u914d\u7f6e\u5b57\u5178\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u94fe\u63a5\u627e\u5230\u5176\u652f\u6301\u7684\u914d\u7f6e\u9879\u5217\u8868\u3002 https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md","title":"Apache Kafka\u00ae"},{"location":"user-guide/zh/transports/kafka/#apache-kafka","text":"Apache Kafka\u00ae \u662f\u4e00\u4e2a\u5f00\u6e90\u6d41\u5904\u7406\u8f6f\u4ef6\u5e73\u53f0\uff0c\u7531 LinkedIn \u5f00\u53d1\u5e76\u6350\u8d60\u7ed9 Apache Software Foundation\uff0c\u7528 Scala \u548c Java \u7f16\u5199\u3002 CAP \u652f\u6301\u4f7f\u7528 Apache Kafka\u00ae \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"Apache Kafka\u00ae"},{"location":"user-guide/zh/transports/kafka/#configuration","text":"\u8981\u4f7f\u7528 Kafka \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.Kafka \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseKafka ( opt =>{ //KafkaOptions }); // x.UseXXX ... }); }","title":"Configuration"},{"location":"user-guide/zh/transports/kafka/#kafka-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 Kafka \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT Servers Broker \u5730\u5740 string ConnectionPoolSize \u7528\u6237\u540d int 10","title":"Kafka Options"},{"location":"user-guide/zh/transports/kafka/#kafka-mainconfig-options","text":"\u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f Kakfa \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 MainConfig \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( capOptions => { capOptions . UseKafka ( kafkaOption => { // kafka options. // kafkaOptions.MainConfig.Add(\"\", \"\"); }); }); MainConfig \u4e3a\u914d\u7f6e\u5b57\u5178\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u94fe\u63a5\u627e\u5230\u5176\u652f\u6301\u7684\u914d\u7f6e\u9879\u5217\u8868\u3002 https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md","title":"Kafka MainConfig Options"},{"location":"user-guide/zh/transports/rabbitmq/","text":"RabbitMQ \u00b6 RabbitMQ\u662f\u5b9e\u73b0\u4e86\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff08AMQP\uff09\u7684\u5f00\u6e90\u6d88\u606f\u4ee3\u7406\u8f6f\u4ef6\uff08\u4ea6\u79f0\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\uff09\u3002RabbitMQ \u670d\u52a1\u5668\u662f\u7528 Erlang \u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u805a\u7c7b\u548c\u6545\u969c\u8f6c\u79fb\u662f\u6784\u5efa\u5728\u5f00\u6e90\u7684\u901a\u8baf\u5e73\u53f0\u6846\u67b6\u4e0a\u7684\u3002\u6240\u6709\u4e3b\u8981\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u6709\u4e0e\u4ee3\u7406\u63a5\u53e3\u901a\u8baf\u7684\u5ba2\u6237\u7aef\u5e93\u3002 CAP \u652f\u6301\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002 \u914d\u7f6e \u00b6 \u8981\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.RabbitMQ \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseRabbitMQ ( opt => { //RabbitMQOptions }); // x.UseXXX ... }); } RabbitMQ Options \u00b6 CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 RabbitMQ \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT HostName \u5bbf\u4e3b\u5730\u5740 string localhost UserName \u7528\u6237\u540d string guest Password \u5bc6\u7801 string guest VirtualHost \u865a\u62df\u4e3b\u673a string / Port \u7aef\u53e3\u53f7 int -1 TopicExchangeName CAP\u9ed8\u8ba4Exchange\u540d\u79f0 string cap.default.topic QueueMessageExpires \u961f\u5217\u4e2d\u6d88\u606f\u81ea\u52a8\u5220\u9664\u65f6\u95f4 int (10\u5929) \u6beb\u79d2 ConnectionFactory Options \u00b6 \u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f ConnectionFactory \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 ConnectionFactoryOptions \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( x => { x . UseRabbitMQ ( o => { o . HostName = \"localhost\" ; o . ConnectionFactoryOptions = opt => { //rabbitmq client ConnectionFactory config }; }); });","title":"RabbitMQ"},{"location":"user-guide/zh/transports/rabbitmq/#rabbitmq","text":"RabbitMQ\u662f\u5b9e\u73b0\u4e86\u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae\uff08AMQP\uff09\u7684\u5f00\u6e90\u6d88\u606f\u4ee3\u7406\u8f6f\u4ef6\uff08\u4ea6\u79f0\u9762\u5411\u6d88\u606f\u7684\u4e2d\u95f4\u4ef6\uff09\u3002RabbitMQ \u670d\u52a1\u5668\u662f\u7528 Erlang \u8bed\u8a00\u7f16\u5199\u7684\uff0c\u800c\u805a\u7c7b\u548c\u6545\u969c\u8f6c\u79fb\u662f\u6784\u5efa\u5728\u5f00\u6e90\u7684\u901a\u8baf\u5e73\u53f0\u6846\u67b6\u4e0a\u7684\u3002\u6240\u6709\u4e3b\u8981\u7684\u7f16\u7a0b\u8bed\u8a00\u5747\u6709\u4e0e\u4ee3\u7406\u63a5\u53e3\u901a\u8baf\u7684\u5ba2\u6237\u7aef\u5e93\u3002 CAP \u652f\u6301\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\u3002","title":"RabbitMQ"},{"location":"user-guide/zh/transports/rabbitmq/#_1","text":"\u8981\u4f7f\u7528 RabbitMQ \u4f5c\u4e3a\u6d88\u606f\u4f20\u8f93\u5668\uff0c\u4f60\u9700\u8981\u4ece NuGet \u5b89\u88c5\u4ee5\u4e0b\u6269\u5c55\u5305\uff1a Install-Package DotNetCore.CAP.RabbitMQ \u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728 Startup.cs \u7684 ConfigureServices \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u57fa\u4e8e\u5185\u5b58\u7684\u914d\u7f6e\u9879\u3002 public void ConfigureServices ( IServiceCollection services ) { // ... services . AddCap ( x => { x . UseRabbitMQ ( opt => { //RabbitMQOptions }); // x.UseXXX ... }); }","title":"\u914d\u7f6e"},{"location":"user-guide/zh/transports/rabbitmq/#rabbitmq-options","text":"CAP \u76f4\u63a5\u5bf9\u5916\u63d0\u4f9b\u7684 RabbitMQ \u914d\u7f6e\u53c2\u6570\u5982\u4e0b\uff1a NAME DESCRIPTION TYPE DEFAULT HostName \u5bbf\u4e3b\u5730\u5740 string localhost UserName \u7528\u6237\u540d string guest Password \u5bc6\u7801 string guest VirtualHost \u865a\u62df\u4e3b\u673a string / Port \u7aef\u53e3\u53f7 int -1 TopicExchangeName CAP\u9ed8\u8ba4Exchange\u540d\u79f0 string cap.default.topic QueueMessageExpires \u961f\u5217\u4e2d\u6d88\u606f\u81ea\u52a8\u5220\u9664\u65f6\u95f4 int (10\u5929) \u6beb\u79d2","title":"RabbitMQ Options"},{"location":"user-guide/zh/transports/rabbitmq/#connectionfactory-options","text":"\u5982\u679c\u4f60\u9700\u8981 \u66f4\u591a \u539f\u751f ConnectionFactory \u76f8\u5173\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7 ConnectionFactoryOptions \u914d\u7f6e\u9879\u8fdb\u884c\u8bbe\u5b9a\uff1a services . AddCap ( x => { x . UseRabbitMQ ( o => { o . HostName = \"localhost\" ; o . ConnectionFactoryOptions = opt => { //rabbitmq client ConnectionFactory config }; }); });","title":"ConnectionFactory Options"}]}